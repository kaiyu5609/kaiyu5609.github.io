<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[axios之合并配置]]></title>
    <url>%2F2020%2F02%2F15%2Faxios%E4%B9%8B%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[合并配置的设计与实现需求分析在之前的章节我们了解到，在发送请求的时候可以传入一个配置，来决定请求的不同行为。axios 有默认配置，定义一些默认的行为。在发送每个请求，用户传递的配置可以和默认配置做一层合并。 我们给 axios 对象添加一个 defaults 属性，表示默认配置，你甚至可以直接修改这些默认配置： 123axios.defaults.headers.common['test'] = 123axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'axios.defaults.timeout = 2000 其中对于 headers 的默认配置支持 common 和一些请求 method 字段，common 表示对于任何类型的请求都要添加该属性，而 method 表示只有该类型请求方法才会添加对应的属性。 在上述例子中，我们会默认为所有请求的 header 添加 test 属性，会默认为 post 请求的 header 添加 Content-Type 属性。 默认配置默认配置定义接下来，我们先实现默认配置 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950const defaults = &#123; method: 'get', timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; &#125;&#125;const methodsNoData = ['delete', 'get', 'head', 'options']methodsNoData.forEach(method =&gt; &#123; defaults.headers[method] = &#123;&#125;&#125;)const methodsWithData = ['post', 'put', 'patch']methodsWithData.forEach(method =&gt; &#123; defaults.headers[method] = &#123; 'Content-Type': 'application/x-www-form-urlencoded' &#125;&#125;)console.log('defaults:', JSON.stringify(defaults, null, 2))// defaults: &#123;// "method": "get",// "timeout": 0,// "headers": &#123;// "common": &#123;// "Accept": "application/json, text/plain, */*"// &#125;,// "delete": &#123;&#125;,// "get": &#123;&#125;,// "head": &#123;&#125;,// "options": &#123;&#125;,// "post": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "put": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "patch": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;// &#125;// &#125; 我们定义了 defaults 常量，它包含默认请求的方法、超时时间，以及 headers 配置。 未来我们会根据新的需求添加更多的默认配置。 配置合并及策略定义了默认配置后，我们发送每个请求的时候需要把自定义配置和默认配置做合并，它并不是简单的 2 个普通对象的合并，对于不同的字段合并，会有不同的合并策略。举个例子： 12345678910111213141516171819202122232425262728293031323334353637config1 = &#123; method: 'get', timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; &#125;&#125;config2 = &#123; url: '/config/post', method: 'post', data: &#123; a: 1 &#125;, headers: &#123; test: '321' &#125;&#125;merged = &#123; url: '/config/post', method: 'post', data: &#123; a: 1 &#125;, timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; test: '321' &#125;&#125; 我们实现 mergeConfig 合并方法。 合并方法12345678910111213141516171819202122232425function mergeConfig(config1, config2) &#123; if (!config2) &#123; config2 = &#123;&#125; &#125; const config = Object.create(null) for (let key in config2) &#123; mergeField(key) &#125; for (let key in config1) &#123; if (!config2[key]) &#123; mergeField(key) &#125; &#125; function mergeField(key) &#123; const strat = strats[key] || defaultStrat config[key] = strat(config1[key], config2[key]) &#125; return config&#125; 合并方法的整体思路就是对 config1 和 config2 中的属性遍历，执行 mergeField 方法做合并，这里 config1 代表默认配置，config2 代表自定义配置。 在 mergeField 方法中，我们会针对不同的属性使用不同的合并策略。 默认合并策略这是大部分属性的合并策略，如下： 123function defaultStrat(val1, val2) &#123; return typeof val2 !== 'undefined' ? val2 : val1&#125; 它很简单，如果有 val2 则返回 val2，否则返回 val1，也就是如果自定义配置中定义了某个属性，就采用自定义的，否则就用默认配置。 只接受自定义配置合并策略对于一些属性如 url、params、data，合并策略如下： 12345678910111213function fromVal2Strat(val1, val2) &#123; if (typeof val2 !== 'undefined') &#123; return val2 &#125;&#125;const strats = &#123;&#125;const stratKeysFromVal2 = ['url', 'params', 'data']stratKeysFromVal2.forEach(key =&gt; &#123; strats[key] = fromVal2Strat&#125;) 因为对于 url、params、data 这些属性，默认配置显然是没有意义的，它们是和每个请求强相关的，所以我们只从自定义配置中获取。 复杂对象合并策略对于一些属性如 headers，合并策略如下： 12345678910111213141516171819202122toString = Object.prototype.toStringfunction isPlainObject(val) &#123; return toString.call(val) === '[object Object]'&#125;function deepMergeStrat(val1, val2) &#123; if (isPlainObject(val2)) &#123; return deepMerge(val1, val2) &#125; else if (typeof val2 !== 'undefined') &#123; return val2 &#125; else if (isPlainObject(val1)) &#123; return deepMerge(val1) &#125; else if (typeof val1 !== 'undefined') &#123; return val1 &#125;&#125;const stratKeysDeepMerge = ['headers']stratKeysDeepMerge.forEach(key =&gt; &#123; strats[key] = deepMergeStrat&#125;) deepMerge的实现： 12345678910111213141516171819202122function deepMerge(...objs) &#123; const result = Object.create(null) objs.forEach(obj =&gt; &#123; if (obj) &#123; Object.keys(obj).forEach(key =&gt; &#123; const val = obj[key] if (isPlainObject(val)) &#123; if (isPlainObject(result[key])) &#123; result[key] = deepMerge(result[key], val) &#125; else &#123; result[key] = deepMerge(&#123;&#125;, val) &#125; &#125; else &#123; result[key] = val &#125; &#125;) &#125; &#125;) return result&#125; 对于 headers 这类的复杂对象属性，我们需要使用深拷贝的方式，同时也处理了其它一些情况，因为它们也可能是一个非对象的普通值。未来我们讲到认证授权的时候，auth 属性也是这个合并策略。 最后我们合并配置的逻辑： 123456789101112131415161718192021222324252627282930313233343536const config = mergeConfig(defaults, &#123; url: '/foo?name=bar', method: 'post', data: &#123; name: 'dhuang' &#125;&#125;)console.log('mergeConfig:', JSON.stringify(config, null, 2))// mergeConfig: &#123;// "url": "/foo?name=bar",// "method": "post",// "data": &#123;// "name": "dhuang"// &#125;,// "timeout": 0,// "headers": &#123;// "common": &#123;// "Accept": "application/json, text/plain, */*"// &#125;,// "delete": &#123;&#125;,// "get": &#123;&#125;,// "head": &#123;&#125;,// "options": &#123;&#125;,// "post": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "put": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "patch": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;// &#125;// &#125; flatten headers经过合并后的配置中的 headers 是一个复杂对象，多了 common、post、get 等属性，而这些属性中的值才是我们要真正添加到请求 header 中的。 举个例子： 12345678headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125;, post: &#123; 'Content-Type':'application/x-www-form-urlencoded' &#125;&#125; 我们需要把它压成一级的，如下： 1234headers: &#123; Accept: 'application/json, text/plain, */*', 'Content-Type':'application/x-www-form-urlencoded'&#125; 这里要注意的是，对于 common 中定义的 header 字段，我们都要提取，而对于 post、get 这类提取，需要和该次请求的方法对应。 接下来我们实现 flattenHeaders 方法。 1234567891011121314function flattenHeaders(headers, method) &#123; if (!headers) &#123; return headers &#125; headers = deepMerge(headers.common || &#123;&#125;, headers[method] || &#123;&#125;, headers) const methodsToDelete = ['delete', 'get', 'head', 'options', 'post', 'put', 'patch', 'common'] methodsToDelete.forEach(method =&gt; &#123; delete headers[method] &#125;) return headers&#125; 我们可以通过 deepMerge 的方式把 common、post 的属性拷贝到 headers 这一级，然后再把 common、post 这些属性删掉。 然后我们在真正发送请求前执行这个逻辑。 123456789101112131415161718function processConfig(config) &#123; config.headers = flattenHeaders(config.headers, config.method) console.log('flattenHeaders:', JSON.stringify(config, null, 2)) // flattenHeaders: &#123; // "url": "/foo?name=bar", // "method": "post", // "data": &#123; // "name": "dhuang" // &#125;, // "timeout": 0, // "headers": &#123; // "Accept": "application/json, text/plain, */*", // "Content-Type": "application/x-www-form-urlencoded" // &#125; // &#125;&#125; 这样确保我们了配置中的 headers 是可以正确添加到请求 header 中的 demo 编写略 至此，我们合并配置的逻辑就实现完了。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[axios之拦截器]]></title>
    <url>%2F2020%2F02%2F14%2Faxios%E4%B9%8B%E6%8B%A6%E6%88%AA%E5%99%A8%2F</url>
    <content type="text"><![CDATA[拦截器设计与实现需求分析我们希望能对请求的发送和响应做拦截，也就是在发送请求之前和接收到响应之后做一些额外逻辑。 我们希望设计的拦截器的使用方式如下： 12345678910111213141516// 添加一个请求拦截器axios.interceptors.request.use(function (config) &#123; // 在发送请求之前可以做一些事情 return config;&#125;, function (error) &#123; // 处理请求错误 return Promise.reject(error);&#125;);// 添加一个响应拦截器axios.interceptors.response.use(function (response) &#123; // 处理响应数据 return response;&#125;, function (error) &#123; // 处理响应错误 return Promise.reject(error);&#125;); 在 axios 对象上有一个 interceptors 对象属性，该属性又有 request 和 response 2 个属性，它们都有一个 use 方法，use 方法支持 2 个参数，第一个参数类似 Promise 的 resolve 函数，第二个参数类似 Promise 的 reject 函数。我们可以在 resolve 函数和 reject 函数中执行同步代码或者是异步代码逻辑。 并且我们是可以添加多个拦截器的，拦截器的执行顺序是链式依次执行的方式。对于 request 拦截器，后添加的拦截器会在请求前的过程中先执行；对于 response 拦截器，先添加的拦截器会在响应后先执行。 12345678axios.interceptors.request.use(config =&gt; &#123; config.params.name += '1' return config &#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '2' return config&#125;) 此外，我们也可以支持删除某个拦截器，如下： 12345let interceptorId = axios.interceptors.response.use(res =&gt; &#123; res.data.name += '2' return res&#125;)axios.interceptors.response.eject(interceptorId) 整体设计我们先用一张图来展示一下拦截器工作流程： 整个过程是一个链式调用的方式，并且每个拦截器都可以支持同步和异步处理，我们自然而然地就联想到使用 Promise 链的方式来实现整个调用过程。 在这个 Promise 链的执行过程中，请求拦截器 resolve 函数处理的是 config 对象，而响应拦截器 resolve 函数处理的是 response 对象。 在了解了拦截器工作流程后，我们先要创建一个拦截器管理类，允许我们去添加、删除和遍历拦截器。 拦截器管理类实现根据需求，axios 拥有一个 interceptors 对象属性，该属性又有 request 和 response 2 个属性，它们对外提供一个 use 方法来添加拦截器，我们可以把这俩属性看做是一个拦截器管理对象。use 方法支持 2 个参数，第一个是 resolve 函数，第二个是 reject 函数，对于 resolve 函数的参数，请求拦截器是 config 的，而响应拦截器是 response 的。 代码实现1234567891011121314151617181920212223242526272829class InterceptorManager &#123; constructor() &#123; this.interceptors = [] &#125; use(resolved, rejected) &#123; this.interceptors.push(&#123; resolved, rejected &#125;) return this.interceptors.length - 1 &#125; forEach(fn) &#123; this.interceptors.forEach(interceptor =&gt; &#123; if (interceptor !== null) &#123; fn(interceptor) &#125; &#125;) &#125; eject(id) &#123; if (this.interceptors[id]) &#123; this.interceptors[id] = null &#125; &#125;&#125; 我们定义了一个 InterceptorManager 类，内部维护了一个私有属性 interceptors，它是一个数组，用来存储拦截器。该类还对外提供了 3 个方法，其中 use 接口就是添加拦截器到 interceptors 中，并返回一个 id 用于删除；forEach 接口就是遍历 interceptors 用的，它支持传入一个函数，遍历过程中会调用该函数，并把每一个 interceptor 作为该函数的参数传入；eject 就是删除一个拦截器，通过传入拦截器的 id 删除。 链式调用实现 本小节需要你对 Promise 掌握和理解，可以前往 mdn 学习。 当我们实现好拦截器管理类，接下来就是在 Axios 中定义一个 interceptors 属性，它的类型如下： 12345678910export default class Axios &#123; constructor() &#123; this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager() &#125; &#125;&#125; Interceptors 类型拥有 2 个属性，一个请求拦截器管理类实例，一个是响应拦截器管理类实例。我们在实例化 Axios 类的时候，在它的构造器去初始化这个 interceptors 实例属性。 接下来，我们在 request 方法中添加拦截器链式调用的逻辑： 12345678910111213141516171819202122232425262728293031323334353637383940414243export default class Axios &#123; constructor() &#123; this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager() &#125; &#125; request(url, config) &#123; if (typeof url === 'string') &#123; if (!config) &#123; config = &#123;&#125; &#125; config.url = url &#125; else &#123; config = url &#125; const chain = [ &#123; resolved: dispatchRequest, rejected: undefined &#125; ] this.interceptors.request.forEach(interceptor =&gt; &#123; chain.unshift(interceptor) &#125;) this.interceptors.response.forEach(interceptor =&gt; &#123; chain.push(interceptor) &#125;) let promise = Promise.resolve(config) while (chain.length) &#123; const &#123; resolved, rejected &#125; = chain.shift() promise = promise.then(resolved, rejected) &#125; return promise &#125;&#125; 函数dispatchRequest中的伪代码如下： 1234567891011121314151617181920212223242526272829303132function dispatchRequest(config) &#123; console.log('requestConfig:', config) // &#123;"params":&#123;"name":"dhuang321"&#125;,"url":"/foo?name=bar"&#125; function xhr(config) &#123; return new Promise((resolve, reject) =&gt; &#123; const request = new XMLHttpRequest() const response = &#123; data: &#123; name: 'axios', desc: 'interceptor' &#125;, status: 200, statusText: '&#123;"name":"axios","desc":"interceptor"&#125;', config, request &#125; setTimeout(() =&gt; &#123; resolve(response) &#125;, 500) setTimeout(() =&gt; &#123; resolve(reject) &#125;, 1500) &#125;) &#125; return xhr(config)&#125; 首先，构造一个数组 chain，并把 dispatchRequest 函数赋值给 resolved 属性；接着先遍历请求拦截器插入到 chain 的前面；然后再遍历响应拦截器插入到 chain 后面。 接下来定义一个已经 resolve 的 promise，循环这个 chain，拿到每个拦截器对象，把它们的 resolved 函数和 rejected 函数添加到 promise.then 的参数中，这样就相当于通过 Promise 的链式调用方式，实现了拦截器一层层的链式调用的效果。 注意我们拦截器的执行顺序，对于请求拦截器，先执行后添加的，再执行先添加的；而对于响应拦截器，先执行先添加的，后执行后添加的。 demo 编写在 examples 目录下创建 interceptor 目录，在 interceptor 目录下创建 app.js 作为入口文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import Axios from './Axios'let axios = new Axios()axios.interceptors.request.use(config =&gt; &#123; config.params.name += '1' return config&#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '2' return config&#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '3' return config&#125;)axios.interceptors.response.use(res =&gt; &#123; res.data.name += '1' return res&#125;)let interceptorId = axios.interceptors.response.use(res =&gt; &#123; res.data.name += '2' return res&#125;)axios.interceptors.response.use(res =&gt; &#123; res.data.name += '3' return res&#125;)axios.interceptors.response.eject(interceptorId)axios.request('/foo?name=bar', &#123; params: &#123; name: 'dhuang' &#125;&#125;).then((res) =&gt; &#123; console.log('response:', res) // &#123; // "data": &#123; // "name": "axios13", // "desc": "interceptor" // &#125;, // "status": 200, // "statusText": "&#123;\"name\":\"axios\",\"desc\":\"interceptor\"&#125;", // "config": &#123; // "params": &#123; // "name": "dhuang321" // &#125;, // "url": "/foo?name=bar" // &#125;, // "request": &#123;&#125; // &#125;&#125;) 该 demo 我们添加了 3 个请求拦截器，添加了 3 个响应拦截器并删除了第二个。运行该 demo 我们通过浏览器访问，我们发送的请求配置中的config.params.name，它的值是 321；我们返回响应数据中的res.data.name，经过响应拦截器的处理，最终我们输出的数据是 axios13。 至此，我们简单实现了 axios 的拦截器功能，它是一个非常实用的功能，在实际工作中我们可以利用它做一些需求如登录权限认证。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TypeScript常用语法之泛型]]></title>
    <url>%2F2020%2F02%2F13%2FTypeScript%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%B3%9B%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[泛型软件工程中，我们不仅要创建定义良好且一致的 API，同时也要考虑可重用性。 组件不仅能够支持当前的数据类型，同时也能支持未来的数据类型，这在创建大型系统时为你提供了十分灵活的功能。 在像 C# 和 Java 这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。 基础示例下面来创建第一个使用泛型的例子：identity 函数。 这个函数会返回任何传入它的值。 你可以把这个函数当成是 echo 命令。 不用泛型的话，这个函数可能是下面这样： 123function identity(arg: number): number &#123; return arg&#125; 或者，我们使用 any 类型来定义函数： 123function identity(arg: any): any &#123; return arg&#125; 使用 any 类型会导致这个函数可以接收任何类型的 arg 参数，但是这样就丢失了一些信息：传入的类型与返回的类型应该是相同的。如果我们传入一个数字，我们只知道任何类型的值都有可能被返回。 因此，我们需要一种方法使返回值的类型与传入参数的类型是相同的。这里，我们使用了类型变量，它是一种特殊的变量，只用于表示类型而不是值。 123function identity&lt;T&gt;(arg: T): T &#123; return arg&#125; 我们给 identity 添加了类型变量 T。 T 帮助我们捕获用户传入的类型（比如：number），之后我们就可以使用这个类型。 之后我们再次使用了 T 当做返回值类型。现在我们可以知道参数类型与返回值类型是相同的了。这允许我们跟踪函数里使用的类型的信息。 我们把这个版本的 identity 函数叫做泛型，因为它可以适用于多个类型。 不同于使用 any，它不会丢失信息，像第一个例子那像保持准确性，传入数值类型并返回数值类型。 我们定义了泛型函数后，可以用两种方法使用。 第一种是，传入所有的参数，包含类型参数： 1let output = identity&lt;string&gt;('myString') 这里我们明确的指定了 T 是 string 类型，并做为一个参数传给函数，使用了 &lt;&gt; 括起来而不是 ()。 第二种方法更普遍。利用了类型推论 – 即编译器会根据传入的参数自动地帮助我们确定 T 的类型： 1let output = identity('myString') 注意我们没必要使用尖括号（&lt;&gt;）来明确地传入类型；编译器可以查看 myString 的值，然后把 T 设置为它的类型。 类型推论帮助我们保持代码精简和高可读性。如果编译器不能够自动地推断出类型的话，只能像上面那样明确的传入 T 的类型，在一些复杂的情况下，这是可能出现的。 使用泛型变量使用泛型创建像 identity 这样的泛型函数时，编译器要求你在函数体必须正确的使用这个通用的类型。 换句话说，你必须把这些参数当做是任意或所有类型。 看下之前 identity 例子： 123function identity&lt;T&gt;(arg: T): T &#123; return arg&#125; 如果我们想打印出 arg 的长度。 我们很可能会这样做： 1234function loggingIdentity&lt;T&gt;(arg: T): T &#123; console.log(arg.length) return arg&#125; 如果这么做，编译器会报错说我们使用了 arg 的 .length 属性，但是没有地方指明 arg 具有这个属性。记住，这些类型变量代表的是任意类型，所以使用这个函数的人可能传入的是个数字，而数字是没有 .length 属性的。 现在假设我们想操作 T 类型的数组而不直接是 T。由于我们操作的是数组，所以 .length 属性是应该存在的。我们可以像创建其它数组一样创建这个数组： 1234function loggingIdentity&lt;T&gt;(arg: T[]): T[] &#123; console.log(arg.length) return arg&#125; 你可以这样理解 loggingIdentity 的类型：泛型函数 loggingIdentity，接收类型参数 T 和参数 arg，它是个元素类型是 T 的数组，并返回元素类型是T 的数组。 如果我们传入数字数组，将返回一个数字数组，因为此时 T 的类型为 number。 这可以让我们把泛型变量 T 当做类型的一部分使用，而不是整个类型，增加了灵活性。 泛型类型上一节，我们创建了 identity 通用函数，可以适用于不同的类型。 在这节，我们研究一下函数本身的类型，以及如何创建泛型接口。 泛型函数的类型与非泛型函数的类型没什么不同，只是有一个类型参数在最前面，像函数声明一样： 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &lt;T&gt;(arg: T) =&gt; T = identity 我们也可以使用不同的泛型参数名，只要在数量上和使用方式上能对应上就可以。 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &lt;U&gt;(arg: U) =&gt; U = identity 我们还可以使用带有调用签名的对象字面量来定义泛型函数： 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &#123;&lt;T&gt;(arg: T): T&#125; = identity 这引导我们去写第一个泛型接口了。我们把上面例子里的对象字面量拿出来做为一个接口： 123456789interface GenericIdentityFn &#123; &lt;T&gt;(arg: T): T&#125;function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: GenericIdentityFn = identity 我们甚至可以把泛型参数当作整个接口的一个参数。 这样我们就能清楚的知道使用的具体是哪个泛型类型（比如： Dictionary&lt;string&gt; 而不只是Dictionary）。这样接口里的其它成员也能知道这个参数的类型了。 123456789interface GenericIdentityFn&lt;T&gt; &#123; (arg: T): T&#125;function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: GenericIdentityFn&lt;number&gt; = identity 注意，我们的示例做了少许改动。 不再描述泛型函数，而是把非泛型函数签名作为泛型类型一部分。 当我们使用 GenericIdentityFn 的时候，还得传入一个类型参数来指定泛型类型（这里是：number），锁定了之后代码里使用的类型。对于描述哪部分类型属于泛型部分来说，理解何时把参数放在调用签名里和何时放在接口上是很有帮助的。 除了泛型接口，我们还可以创建泛型类。 注意，无法创建泛型枚举和泛型命名空间。 泛型类泛型类看上去与泛型接口差不多。 泛型类使用（ &lt;&gt;）括起泛型类型，跟在类名后面。 12345678910class GenericNumber&lt;T&gt; &#123; zeroValue: T add: (x: T, y: T) =&gt; T&#125;let myGenericNumber = new GenericNumber&lt;number&gt;()myGenericNumber.zeroValue = 0myGenericNumber.add = function(x, y) &#123; return x + y &#125; GenericNumber 类的使用是十分直观的，并且你可能已经注意到了，没有什么去限制它只能使用 number 类型。 也可以使用字符串或其它更复杂的类型。 1234567let stringNumeric = new GenericNumber&lt;string&gt;()stringNumeric.zeroValue = ''stringNumeric.add = function(x, y) &#123; return x + y&#125;console.log(stringNumeric.add(stringNumeric.zeroValue, 'test')) 与接口一样，直接把泛型类型放在类后面，可以帮助我们确认类的所有属性都在使用相同的类型。 我们在类那节说过，类有两部分：静态部分和实例部分。 泛型类指的是实例部分的类型，所以类的静态属性不能使用这个泛型类型。 泛型约束我们有时候想操作某类型的一组值，并且我们知道这组值具有什么样的属性。在 loggingIdentity 例子中，我们想访问 arg 的 length 属性，但是编译器并不能证明每种类型都有 length 属性，所以就报错了。 1234function loggingIdentity&lt;T&gt;(arg: T): T &#123; console.log(arg.length) return arg&#125; 相比于操作 any 所有类型，我们想要限制函数去处理任意带有 .length 属性的所有类型。 只要传入的类型有这个属性，我们就允许，就是说至少包含这一属性。为此，我们需要列出对于 T 的约束要求。 我们定义一个接口来描述约束条件，创建一个包含 .length 属性的接口，使用这个接口和 extends 关键字来实现约束： 12345678interface Lengthwise &#123; length: number&#125;function loggingIdentity&lt;T extends Lengthwise&gt;(arg: T): T &#123; console.log(arg.length) // OK return arg&#125; 现在这个泛型函数被定义了约束，因此它不再是适用于任意类型： 1loggingIdentity(3); // Error 我们需要传入符合约束类型的值，必须包含必须的属性： 1loggingIdentity(&#123;length: 10, value: 3&#125;) // OK 在泛型约束中使用类型参数你可以声明一个类型参数，且它被另一个类型参数所约束。 比如，现在我们想要用属性名从对象里获取这个属性。 并且我们想要确保这个属性存在于对象 obj 上，因此我们需要在这两个类型之间使用约束。 12345678function getProperty&lt;T, K extends keyof T&gt; (obj: T, key: K ) &#123; return obj[key]&#125;let x = &#123;a: 1, b: 2, c: 3, d: 4&#125;getProperty(x, 'a') // okaygetProperty(x, 'm') // error]]></content>
      <categories>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTXT]]></title>
    <url>%2F2019%2F10%2F12%2F%E9%95%BF%E6%8A%95%E5%AD%A6%E5%A0%82%E4%B9%8B%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>CTXT</category>
      </categories>
      <tags>
        <tag>CTXT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之时间管理-简介]]></title>
    <url>%2F2019%2F08%2F27%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[一、什么是时间管理？ 精力管理、行动管理、更高效的工作、有更多的时间生活 选择适合的生活方式，并形成行之有效的时间管理系统，坚决执行 时间管理是“生活方式” 二、抓时间管理的理念 再多的钱也买不回时间 时间很有价值，但时间不值钱 每个人都有一样的时间 但时间价值不同 三、时间管理的本质 事件管理 做正确的事情，并正确的做事 自我管理 自控 &amp; 自律 自控就是控制自己在正确的时间做该做的事 自律就是克制自己不要在不正确的时间做不该做的事情 管理自己就是管理自己的时间，管理自己的生命；人生是一次旅程，我们既要到达旅途的终点，还要欣赏沿途的风光；也就是既要完成自己的人生使命，同时还要开心每一天；这个旅程很短，因此不妨大胆一些，去爱一个人，去攀一座山，去追一个梦，上天让我们来到这个世界上，就是为了让我们创造奇迹。 四、高效时间管理的终极秘诀1、道 道是高效时间管理的终极规律，包含四大规律： 价值观 目标 心理状态 持续改善 理清价值观、明确目标、调整心理状态和持续改善，悟道让我们解决传统时间管理的四大问题，拖延、犹豫不决、目标不明确和心情低落，让我们从根本上树立正确的时间管理观念 2、术 术是高效时间管理的终极方法，包含六大方法： FTF（要事第一） 四象限法 GTD（搞定一切） 番茄法 ABC 六点优先 全球最顶尖、最有效的时间管理方法，学会融会贯通、灵活运用 3、器 器是时间管理的终极工具，包含以下工具： 时间管理/效率手册 时间管理软件/APP 养成好习惯、成就好人生 附、NLP神经语言程序学 Neuro 身心素质，结构及比较一致的身心状态 Linguistic 沟通中所用的口语表达和非口语表达（肢体语言/身体反应） Programming 透过心智及语言重组人体大脑神经系统内的讯息，从而改变个人的行为，顺利达成目标 相关书籍： 世界第一催眠大师 艾瑞克森 高效能人士的七个习惯 激发无限潜能 晨间日记]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之表单处理]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E8%A1%A8%E5%8D%95%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[Angular的表单处理 模板式表单 表单的数据模型是通过组件模板中的相关指令来定义的，因为使用这种方式定义表单的数据模型时，我们会受限于HTML的语法，所以，模板驱动方式只适合用于一些简单的场景 响应式表单 使用响应式表单时，你通过编写TypeScript代码而不是HTML代码来创建一个底层的数据模型，在这个模型定义好以后，你使用一些特定的指令，将模板上的HTML元素与底层的数据模型连接在一起 表单验证 不管是哪种表单，都有一个对应的数据模型来存储表单的数据。在模板式表单中，数据模型是有Angular基于你组件模板中的指令隐式创建的。而在响应式表单中，你通过编码明确的创建数据模型然后将模板上的HTML元素与底层的数据模型连接在一起 数据模型并不是一个任意的对象，它是一个由angular/forms模块中的一些特定的类，如：FormControl、FormGroup、FormArray等组成的。在模板式表单中，你是不能直接访问到这些类的 响应式表单并不会替你生成HTML，模板仍然需要你自己来编写 不管你使用哪种表单，你都需要在app模块中引入相应模块，如果要使用模板式表单，则需要引入FormsModule，如果要使用响应式表单，则需要引入ReactiveFormsModule Angular模板式表单 模板式表单内容 NgForm NgModel NgModelGroup NgForm Angular会默认给form表单添加ngForm指令，如果我们写了ngNoForm指令，那么Angular将不再接管这个表单 ngForm指令可以被一个模板本地变量引用，以便在模板中访问ngForm的实例，如#myForm=&quot;ngForm&quot;12345678910111213&lt;form #myForm="ngForm" ngForm (ngSubmit)="createUser(myForm.value)"&gt; &lt;div&gt;昵称:&lt;input type="text" ngModel name="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号:&lt;input type="number" ngModel name="mobile"&gt;&lt;/div&gt; &lt;div ngModelGroup="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" ngModel name="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" ngModel name="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt;&lt;div&gt; &lt;!-- FormGroup form表单的数据模型 --&gt; &#123;&#123;myForm.value | json&#125;&#125;&lt;/div&gt; Angular响应式表单 响应式表单内容 FormGroup 绑定方式：[formGroup]（属性绑定） FormControl 绑定方式：formControlName FormArray 绑定方式：formArrayName 123456789101112131415161718192021222324252627282930313233343536373839import &#123; FormControl &#125; from '@angular/forms';@Component(&#123; selector: 'app-reactived-form', templateUrl: './reactived-form.component.html', styleUrls: ['./reactived-form.component.css']&#125;)export class ReactivedFormComponent implements OnInit &#123; private formModel: FormGroup; constructor() &#123; this.formModel = new FormGroup(&#123; nickname: new FormControl(), mobiles: new FormArray([ new FormControl() ]), passwordInfo: new FormGroup(&#123; password: new FormControl(), passwordConfirm: new FormControl() &#125;) &#125;); &#125; addMobile() &#123; let mobiles = this.formModel.get('mobiles') as FormArray;// 强转一下，强转成 `FormArray`，get方法取到的是 `AbstractControl` 抽象类 mobiles.push(new FormControl()); console.log(this.formModel.value); &#125; createUser() &#123; console.log(this.formModel); &#125; ngOnInit() &#123; &#125;&#125; 响应式表单模板的绑定，如下： 12345678910111213141516&lt;form [formGroup]="formModel" (ngSubmit)="createUser()"&gt; &lt;div&gt;昵称:&lt;input type="text" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号: &lt;ul formArrayName="mobiles"&gt; &lt;li *ngFor="let email of formModel.get('mobiles').controls; let i = index;"&gt; &lt;input [formControlName]="i"&gt; &lt;/li&gt; &lt;/ul&gt; &lt;button type="button" (click)="addMobile()"&gt;增加Mobile&lt;/button&gt; &lt;/div&gt; &lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; FormBuilder，简化响应式表单的定义 this.fb.group 相当于实例化一个 FormGroup this.fb.array 相当于实例化一个 FormArray [&#39;&#39;] 相当于实例化一个 FormControl，数组第一个值是表单输入框的默认值1234567891011121314private fb: FormBuilder = new FormBuilder();constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: this.fb.array([ [''] ]), passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; Angular表单校验 表单校验内容 Angular的校验器 校验响应式表单 校验模板式表单 Angular的校验器 预定义校验器 Validators.required Validators.minLength | maxLength Validators.pattern 123456789101112131415private fb: FormBuilder = new FormBuilder();constructor() &#123; this.formModel = this.fb.group(&#123; nickname: ['myname', Validators.required], // nickname: ['myname', [Validators.required, Validators.minLength(6)]],// 多个校验器 mobiles: this.fb.array([ [''] ]), passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; 我们定义好针对nickname属性的校验器以后，我们就可以通过formModel对象的valid来判断当前这个属性的值是否合法 12345678constructor() &#123; // ...&#125;createUser() &#123; let nicknameValid: boolean = this.formModel.get('nickname').valid; console.log('nickname是否校验通过：' + nicknameValid);&#125; 我们也可以通过formModel对象的errors来获取错误信息 12345678constructor() &#123; // ...&#125;createUser() &#123; let nicknameErrors: any = this.formModel.get('nickname').errors; console.log('nickname的校验信息：' + JSON.stringify(nicknameErrors));&#125; 自定义校验器（需要校验逻辑更复杂）来写一个校验手机号码的校验器 12345678910111213141516171819private fb: FormBuilder = new FormBuilder();mobileValidator(mobile: FormControl): any &#123; let value = (mobile.value || '') + ''; let reg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/; let valid = reg.test(value); return valid ? null : &#123; mobile: true &#125;;// 返回`null`表示校验通过&#125;constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: ['', this.mobileValidator],// 自定义手机号码校验器 passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; 为FormGroup定义一个校验器 12345678910111213141516171819202122232425passwordValidator(info: FormGroup): any &#123; let password: FormControl = info.get('password') as FormControl; let pConfirm: FormControl = info.get('passwordConfirm') as FormControl; let valid: boolean = password.value === pConfirm.value; return valid ? null : &#123; password: true &#125;;// 返回`null`表示校验通过&#125;constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: [''], passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;, &#123; validator: this.passwordValidator// 自定义确认密码校验器，FormGroup添加的校验器稍微不一样 &#125;) &#125;);&#125;createUser() &#123; if (this.formModel.valid) &#123;// 整个表单合法 console.log(this.formModel.value); &#125;&#125; 当校验失败，你会希望显示错误信息给用户，则需要修改组件的模板 12345678910111213141516171819202122232425262728&lt;form [formGroup]="formModel" (ngSubmit)="createUser()"&gt; &lt;div&gt;昵称:&lt;input type="text" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt; &lt;div [hidden]="!formModel.hasError('minlength', 'nickname')"&gt; 名称的最小长度是6 &lt;/div&gt; &lt;div&gt;手机号: &lt;ul formArrayName="mobiles"&gt; &lt;li *ngFor="let email of formModel.get('mobiles').controls; let i = index;"&gt; &lt;input [formControlName]="i"&gt; &lt;/li&gt; &lt;/ul&gt; &lt;button type="button" (click)="addMobile()"&gt;增加Mobile&lt;/button&gt; &lt;/div&gt; &lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'passwordInfo.password')"&gt; 密码是必填项 &lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div [hidden]="!formModel.hasError('password', 'passwordInfo')"&gt; 密码不匹配 &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; 错误信息也可以由校验器提供 123456passwordValidator(info: FormGroup): any &#123; let password: FormControl = info.get('password') as FormControl; let pConfirm: FormControl = info.get('passwordConfirm') as FormControl; let valid: boolean = password.value === pConfirm.value; return valid ? null : &#123; password: &#123; description: '密码和确认密码不匹配' &#125; &#125;;&#125; 123&lt;div [hidden]="!formModel.hasError('password', 'passwordInfo')"&gt; &#123;&#123; formModel.getError('password', 'passwordInfo')?.description &#125;&#125;&lt;/div&gt; 异步校验器（它返回的是一个可观测的流Observable） 123456mobileAsyncValidator(mobile: FormControl): any &#123; let value = (mobile.value || '') + ''; let reg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/; let valid = reg.test(value); return Observable.of(valid ? null : &#123;mobile: true&#125;).delay(5000);&#125; Angular表单校验的状态字段 touched和untouched pristine（值改变的时候进行检验）和dirty pending（进行异步检验的时候） 123456789&lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div [hidden]="formModel.get('passwordInfo.password').valid || formModel.get('passwordInfo.password').untouched"&gt; &lt;div [hidden]="!formModel.hasError('required', 'passwordInfo.password')"&gt; 密码是必填项 &lt;/div&gt; &lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt;&lt;/div&gt; 给表单控件添加自定义错误样式名 123456&lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;昵称:&lt;input type="text" [class.inputHasError]="formModel.get('nickname').invalid" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt;&lt;/div&gt; 校验模板式表单 将自定义校验器包装成指令 123456789101112// directives/mobile-validator.directive.tsimport &#123; Directive &#125; from '@angular/core';import &#123; NG_VALIDATORS &#125; from '@angular/forms';import &#123; mobileValidator &#125; from '../validators/Validators';// 检验器可以放置在全局的一个方法@Directive(&#123; selector: '[mobile]', providers: [&#123; provide: NG_VALIDATORS, useValue: mobileValidator, multi: true &#125;]&#125;)export class MobileValidatorDirective &#123; constructor() &#123;&#125;&#125; 123456789101112&lt;form #myForm="ngForm" ngForm (ngSubmit)="createUser(myForm.value, myForm.valid)" novalidate&gt; &lt;div&gt;昵称:&lt;input type="text" ngModel required name="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号:&lt;input type="number" ngModel mobile name="mobile"&gt;&lt;/div&gt; &lt;div [hidden]="!myForm.form.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt; &lt;div ngModelGroup="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" ngModel name="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" ngModel name="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; 注：在模板表单中是不能使用状态字段的]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之组件间通讯]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E8%AE%AF%2F</url>
    <content type="text"><![CDATA[Angular组件间通讯 组件的输入输出属性 父子组件之间应该避免直接访问彼此的内部，而应该通过输入输出属性来通讯 组件可以通过输出属性发射自定义事件，这些事件可以携带任何你想携带的数据 使用中间人模式传递数据 在没有父子关系的组件之间，尽量使用中间人模式进行通讯 组件声明周期以及Angular的变化发现机制 父组件可以在运行时投影一个或多个模板片段到子组件中 每个Angular组件都提供了一组生命周期钩子，供你在某些特定的事件发生时执行相应的逻辑 Angular的变更检测机制会监控组件属性的变化并自动更新视图，这个检测非常频繁并且默认是针对整个组件树的，所以实现相关钩子时要慎重 你可以标记你的组件树种的一个分支，使其被排除在变更检测机制之外OnPush策略 Angular组件输入属性 @Input() 单向的传递 1234export class ProductComponent implements OnInit &#123; @Input() private keyword: string;&#125; Angular组件输出属性 @Output() 单向的传递 12345678910111213export class ProductComponent implements OnInit &#123; @Output() searchResult:EventEmitter&lt;Product&gt; = new EventEmitter(); constructor() &#123;&#125; ngOnInit() &#123; this.searchResult.emit(&#123; 'name': 'iPhone XR', 'price': '6499' &#125;); &#125;&#125; 12&lt;!-- 父组件中接收 --&gt;&lt;app-child-search (searchResult)="searchResultHandler(product)"&gt;&lt;/app-child-search&gt; 也可以给@Output()取个别名 12@Output('currProduct')searchResult:EventEmitter&lt;Product&gt; = new EventEmitter(); 12&lt;!-- 父组件中接收 --&gt;&lt;app-child-search (currProduct)="searchResultHandler(product)"&gt;&lt;/app-child-search&gt; Angular组件声明周期 组件初始化（依次执行的顺序，如下：） constructor ngOnChanges ngOnInit ngDoCheck ngAfterContentInit ngAfterContentChecked ngAfterViewInit ngAfterViewChecked 变化检测 ngOnChanges ngDoCheck ngAfterContentChecked ngAfterViewChecked 组件销毁 ngOnDestroy Angular组件的OnChanges钩子 在组件输入属性变化时，该方法被调用 这里需要理解，可变对象和不可变对象，基本数据类型是不可变的，复合数据类型是可变的 可变对象的属性发生变化时，该方法不会被调用 Angular组件的变更检测和DoCheck钩子 变更检测策略 default策略，不管变更发生在哪个组件上，zone.js都会检查整个组件树 OnPush策略，当某个组件设置的该策略，变更不会检查他的子组件 OnChanges钩子不能检测可变对象的属性发生变化，那又没有哪个钩子可以检查这种情况呢，它就是DoCheck钩子 该方法会频繁调用 一定要判断当前监控的属性和它上次的值是否变化，才去做你想做的事情 Angular组件的view钩子 怎样在父组件中调用子组件的api? 1234567&lt;!-- 这里是父组件的模板 --&gt;&lt;!-- 模板变量：#child --&gt;&lt;app-child #child&gt;&lt;/app-child&gt;&lt;!-- 不仅可以在组件控制器中调用子组件的方法，还可以在模板上调用 --&gt;&lt;button (click)="child.greeting('hello')"&gt;按钮&lt;/button&gt; 123456789101112131415// 父组件export class AppComponent implements OnInit &#123; @ViewChild('child') child: ChildCompoent; // 用`@ViewChild`装饰器可以获得子组件的引用，就可调用子组件的`api` constructor() &#123;&#125; ngOnInit(): void &#123; this.child.greeting('hello'); &#125;&#125; Angular组件的ngAfterViewInit钩子和ngAfterViewChecked钩子 这两个钩子是在组件的模板，所有的内容都被组装完成，即模板已呈现给用户看了之后，这两个方法被调用 当子组件视图初始化和变更检测完毕后，才到父组件的视图初始化和变更检测 ngAfterViewInit钩子只调用一次 ngAfterViewChecked钩子，在后续视图改变时，就会变调用 在这两个钩子中，都不能再更新组件中某个属性的值，会抛出异常，除非使用setTimeout Angular组件的ngContent指令，类似于angularJS的ng-transclude ngContent指令：投影 父组件中使用子组件，在子组件中写的内容（html标签），会真正映射到子组件模板中，带有&lt;ng-content&gt;&lt;/ng-content&gt;指令标记的位置 想投影多个内容，那就给html标签添加class类名，在子组件模板中，&lt;ng-content select=&quot;.box-1&quot;&gt;&lt;/ng-content&gt; Angular组件的ngAfterContentInit钩子和ngAfterContentChecked钩子 子组件在父组件投影进来的内容，初始化完成和变更检测完成才调用这两个方法 ngAfterContentInit钩子只调用一次 ngAfterContentChecked钩子，在投影改变时，就会变调用 Angular组件的ngDestory钩子 路由离开后，会被调用]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之响应式编程及管道]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%8F%8A%E7%AE%A1%E9%81%93%2F</url>
    <content type="text"><![CDATA[Angular响应式编程 观察者模式与Rxjs 12345678910var subscription = Observable.from([1, 2, 3, 4]).filter((d) =&gt; d % 2 == 0).map((d) =&gt; d * d).subscribe( (d) =&gt; console.log(d), (e) =&gt; console.error(e), () =&gt; console.log('end'));subscription.unsubscribe(); 可观察对象Observable（流） 表示一组值或者事件的集合 观察者Observer 一个回调函数集合，它知道怎样去监听被Observable发送的值 订阅Subscription 表示一个可观察对象，主要用于取消注册 操作符Operators 纯碎的函数，使开发者可以以函数编程的方式处理集合 如：filter、map函数 如何使用响应式编程来做事件处理 之 节流处理 Observable FormControl 1&lt;input [formControl]="searchInput" /&gt; 123456789101112131415161718// `FormControl` 在 `@angular/forms` 模块中的 `ReactiveFormsModule`，需要在`主模块`的`imports`中导入import &#123; FormControl &#125; from '@angular/forms';import 'rxjs/Rx';@Component(&#123; &#125;)export class ProductManageComponent implements OnInit &#123; private searchInput: FormControl = new FormControl(); private keyword: string; constructor() &#123; this.searchInput.valueChanges .debounceTime(500)// 节流操作 .subscribe( keyword =&gt; this.keyword = keyword); &#125;&#125; Angular管道 date:&#39;yyyy-MM-dd HH:mm:ss&#39; number:&#39;2.1-4&#39;：最少保留1位小数，最多保留4位小数 自定义管道（结合formControl根据关键字过滤列表的数据） 命令：ng g pipe pipe/productFilter 123456789101112131415161718// 自定义管道需要在 `主模块`的 `declarations`中声明import &#123; Pipe, PipeTransform &#125; from '@angular/core';@Pipe(&#123; name: 'productFilter'&#125;)export class ProductFilterPipe implements PipeTransform &#123; transform(list: any[], field: string, keyword: string): any &#123; if (!field || !keyword) &#123; return list; &#125; return list.filter(item =&gt; &#123; let itemFieldValue = item[field].toLowerCase(); return itemFieldValue.indexOf(keyword) &gt;= 0; &#125;); &#125;&#125; 123456789&lt;!-- 根据input输入的值，保存到keyword中，然后通过管道productFilter， 以product.name与keyword匹配来进行过滤列表数据--&gt;&lt;input [formControl]="searchInput" /&gt;&lt;ul&gt; &lt;li *ngFor="let product of products | productFilter:'name':keyword; let i = index;"&gt;&lt;/li&gt;&lt;/ul&gt;]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之依赖注入]]></title>
    <url>%2F2018%2F10%2F20%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[Angular依赖注入 依赖注入内容 什么是依赖注入模式及使用依赖注入的好处 介绍Angular的依赖注入实现：注入器和提供器 注入器的层级关系 依赖注入 依赖注入：Dependency Injection，简称DI 一个对象a:A需要依赖另外一个类型为B的对象b，那么对象a不需要明确地实例化对象b，b会由外部机制注入进来，对象a只要声明我需要B类型的对象，有人能给我一个么，这就是依赖注入需要解决的问题 与依赖注入经常同时出现的另一个概念叫做控制反转 控制反转：Inversion of Control，简称IOC 控制反转是指将依赖的控制权从代码的内部转到代码的外部 假如我们这样编写代码 123456var product = new Product();// 这句话，决定我们的代码需要依赖Product类createShipment(product);// 如果有一天我们需要依赖的不是Product了，而是AnotherProduct；那么我们需要修改代码的内部，变成如下：var product = new AnotherProduct();createShipment(product); 而如果实现了控制反转，则内部代码只需要声明我需要product，至于传进来的是Product，还是AnotherProduct，是由代码的外部决定的，这时代码的控制权由代码的内部转到了外部 依赖注入和控制反转表达的是一个思想，控制反转侧重于描述目的，目的是将依赖的控制权从代码的内容转到代码的外部；而依赖注入侧重于描述手段，就是如何来实现控制反转，使用的手段叫依赖注入 实现了控制反转的框架被称为IOC容器，Angular框架就是一个IOC容器，Angular实现控制反转的手段就是依赖注入 依赖注入的好处 松耦合（消除组件跟服务的紧耦合关系，通过依赖注入可以让组件依赖不同的服务，并且任意更换，这使得组件可以高度复用） 提高可测试性（假如项目的开发是前后端分离，前端不需要依赖后端服务的开发，可以先直接Mock一个服务来调试，等后端服务真正做好后，再进行联调，使服务可以随意切换） 注入器和提供器 注入器 1constructor(private productService: ProductService) &#123; &#125; 提供器 123456// 简写providers: [ProductService]// 或者providers: [&#123; provide: ProductService, useClass: ProductService &#125;]// 或者 通过工厂方法providers: [&#123; provide: ProductService, useFactory: () =&gt; &#123; &#125; &#125;]]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之路由]]></title>
    <url>%2F2018%2F10%2F14%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E8%B7%AF%E7%94%B1%2F</url>
    <content type="text"><![CDATA[Angular路由的基础知识 路由内容 基本用法 子路由、保护路由和辅助路由 名称 简介 Routes 路由配置，保存着哪个URL对应展示哪个组件，以及在哪个RouteOutlet中展示组件 RouterOutlet 在html中标记路由内容呈现位置的占位符指令 Router 负责在运行时执行路由的对象，可以通过调用其navigate()和navigateByUrl()方法来导航到一个指定的路由 RouterLink 在html中声明路由导航用的指令 ActivatedRoute 当前激活的路由对象，保存着当前路由的信息，如路由地址，路由参数等 路由信息的配置文件（app-routing.module.ts） 1234567891011121314151617import &#123; NgModule &#125; from '@angular/core';import &#123; RouterModule, Routes &#125; from '@angular/router';import &#123; HomeComponent &#125; from './home/home.component';import &#123; DetailComponent &#125; from './detail/detail.component';import &#123; Code404Component &#125; from './code404/code404.component';const routes: Routes = [&#123; path: '', component: HomeComponent,// path 不要用'/'开头 path: 'detail', component: DetailComponent, path: '**', component: Code404Component,// 404页面路由&#125;];@NgModule(&#123; imports: [RouterModule.forRoot(routes)], exports: [RouterModule]&#125;)export class AppRoutingModule &#123; &#125; 模板（app-component.html） 1234&lt;a [routerLink]="['/']"&gt;主页&lt;/a&gt;&lt;a [routerLink]="['/detail']"&gt;详情页&lt;/a&gt;&lt;input type="button" value="详情页" (click)="toDetail()"&gt;&lt;router-outlet&gt;&lt;/router-outlet&gt; 使用 Router 在组件中进行路由导航（app.component.ts） 123456789101112131415import &#123; Component &#125; from '@angular/core';import &#123; Router &#125; from '@angular/router';@Component(&#123; selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css']&#125;)export class AppComponent &#123; constructor(private router: Router) &#123; &#125; toDetail() &#123; this.router.navigate(['/detail']); &#125;&#125; Angular在路由时传递数据 在查询参数中传递数据 1234&lt;!-- 通过 ? 传递 queryParams --&gt;&lt;a [routerLink]="['/detail?id=1&amp;name=2']"&gt;详情页&lt;/a&gt;&lt;!-- 或者 --&gt;&lt;a [routerLink]="['/detail']" [queryParams]="&#123;id:1,name:2&#125;"&gt;详情页&lt;/a&gt; 1234567891011121314// 在路由的目标组件中，通过以下方式获取export class DetailComponent implements OnInit &#123; private id: number; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; // 快捷获取：snapshot方式（参数快照），即组件初始化时，id只赋值一次 this.id = this.routeInfo.snapshot.queryParams['id']; // 或者对参数进行订阅，在同一个组件中（DetailComponent）中切换参数时就得用订阅的方式 this.routeInfo.queryParams.subscribe((queryParams: QueryParams) =&gt; &#123; this.id = queryParams['id']; &#125;); &#125;&#125; 在路由路径中传递数据 1&lt;a [routerLink]="['/detail', 1]"&gt;详情页&lt;/a&gt; 12// routes&#123; path: 'detail/:id' &#125; // /detail/1 1234567891011121314// 在路由的目标组件中，通过以下方式获取export class DetailComponent implements OnInit &#123; private id: number; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; // 快捷获取：snapshot方式（参数快照），即组件初始化时，id只赋值一次 this.id = this.routeInfo.snapshot.params['id']; // 或者对参数进行订阅，在同一个组件中（DetailComponent）中切换参数时就得用订阅的方式 this.routeInfo.params.subscribe((params: Params) =&gt; &#123; this.id = params['id']; &#125;); &#125;&#125; 在路由配置中传递数据 123// routes&#123; path: 'detail', component: DetailComponent, data: [&#123; isProd: true &#125;] &#125; // data 属性本身是一个数组，在数组中可以定义任意个对象，isProd: 是否是生产环境 12345678// 在路由的目标组件中，通过data的下标和属性名方式获取export class DetailComponent implements OnInit &#123; private isProd: boolean; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; this.isProd = this.routeInfo.snapshot.data[0]['isProd']; &#125;&#125; Angular重定向路由 在用户访问一个特定的地址时，将其重定向到另一个指定的地址。 即：我们想通过localhost:4200来重定向到localhost:4200/home1234const routes: Routes = [&#123; path: '', redirectTo: '/home', pathMatch: 'full',// pathMatch: 'full' || 'prefix', 精准匹配 || 前缀匹配 path: 'home', component: HomeComponent,&#125;]; Angular子路由 略 &#39;./&#39; children Angular辅助路由 需要声明路由插座的名称 primary为主路由，aux为辅助路由 1234&lt;a [routerLink]="[&#123;outlets: &#123;primary: 'home', aux: 'consult'&#125;&#125;]"&gt;详情页&lt;/a&gt;&lt;a [routerLink]="[&#123;outlets: &#123;aux: null&#125;&#125;]"&gt;详情页&lt;/a&gt;&lt;router-outlet name="aux"&gt;&lt;/router-outlet&gt; 12// routes 规定这个组件只能在名为“aux”的路由插座中显示&#123; path: 'consult', component: ConsultComponent, outlet: 'aux' &#125; Angular路由守卫 CanActivate：处理导航到某路由的情况。 CanDeactivate：处理从当前路由离开的情况。 Resolve：在路由激活之前获取路由数据。 CanActivate PermissionGuard组件（permission.guard.ts） 12345678910111213import &#123; CanActivate &#125; from '@angular/router';export class PermissionGuard implement CanActivate &#123; canActivate() &#123;// 该方法需要返回一个布尔值 var hasPermission: boolean = Math.random() &lt; 0.5; if (!hasPermission) &#123; console.log('用户无权访问此页面'); &#125; return hasPermission; &#125;&#125; 路由信息的配置文件（app-routing.module.ts） 1234const routes: Routes = [&#123; // 不过需要有人帮我们实例化这个PermissionGuard组件 path: 'detail', component: DetailComponent, canActivate: [PermissionGuard]&#125;]; Angular主模块（app.module.ts） 12345@NgModule(&#123; ..., providers: [PermissionGuard],// 实例化组件 ...&#125;); CanDeactivate FocusGuard组件（focus.guard.ts）123456789101112import &#123; CanDeactivate &#125; from '@angular/router';export class FocusGuard implement CanDeactivate&lt;DetailComponent&gt; &#123; // 不同的是这里会注入当前的组件，获取组件的状态，然后判断离开时需要做的事情 canDeactivate(component: DetailComponent) &#123;// 该方法需要返回一个布尔值 if (component.isFocus()) &#123;// DetailComponent的某个方法 return true; &#125; else &#123; return window.confirm("不关注就离开吗？"); &#125; &#125;&#125; Resolve 有时候我们会先异步去请求后端服务的数据，等响应之后再将数据绑定到页面上，则需要用到该功能；不然页面可能会报错，找不到某某对象的属性，如：Detail的id和name。 DetailResolve组件（detail.resolve.ts） 1234567891011121314151617181920212223import &#123; Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot &#125; from '@angular/router';import &#123; Detail &#125; from '../detail/detail.component';import &#123; Observable &#125; from 'rxjs';import &#123; Injectable &#125; from '@angular/core';@Injectable()export class DetailResolve implement Resolve&lt;Detail&gt; &#123; constructor(private router: Router) &#123; &#125; resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Detail | Observable&lt;Detail&gt; | Promise&lt;Detail&gt; &#123; // ActivatedRouteSnapshot相当于上文的 this.routeInfo.snapshot let id = route.params['id']; if (id == 1) &#123; return new Detail(1, 'Angular'); &#125; else &#123; this.router.navigate(['/home']); return; &#125; &#125;&#125; 路由信息的配置文件（app-routing.module.ts） 123456const routes: Routes = [&#123; // 需要在`@NgModule`的`providers`中实例化这个DetailResolve组件 path: 'detail', component: DetailComponent, resolve: &#123; detail: DetailResolve &#125;&#125;]; DetailComponent (detail.component.ts） 123456789export class DetailComponent implements OnInit &#123; private detail: Detail; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; this.routeInfo.data.subscribe((data: &#123;detail: Detail&#125;) =&gt; &#123; this.detail = data.detail; &#125;); &#125;&#125; Angular路由的实战 可一看]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之简介]]></title>
    <url>%2F2018%2F09%2F22%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[angularJS的优点 模板功能强大丰富 比较完善的前端MVC框架 引入了Java的一些概念 angularJS的一些问题，和Angular之间的对比 性能 双向数据绑定是一把双刃剑，随着组件的增加，项目越来越复杂，双向数据绑定会带来性能问题 脏检查机制，通过跟踪数据的改变来动态的更新用户的界面，随着绑定的增加，性能就会越来越低 在Angular中，这个做法被废弃掉了，首先数据绑定默认不再是双向数据绑定了，而是单向数据绑定，其次整个检查机制被完全重写，整体性能得到很大的提升 路由（非常简单的路由功能） ng-route中的ng-view指令只能有一个，不能嵌套多个视图 第三方模块ui-router也不是很灵活 在Angular中，路由作为核心模块之一，对其进行了很大的提升，可以说很强大 作用域 angularJS的作用域把它的执行环境和浏览器的环境隔离开，所有原生事件都不能影响它的作用域，都必须用带有ng开头的指令来交互，如果你想用原生事件，就必须调用$scope.$apply来告诉angularJS我的数据已经有更新了，你帮我同步去更新一些UI吧！ 这个问题，在Angular中也被解决掉了，$scope这个东西在Angular中不复存在，任何原生的事件都可以直接被响应及处理 表单验证 在angularJS中，显示表单验证的错误信息提示是比较薄弱的 在Angular中提供了全新的模板API，尤其是响应式表单，可以帮助我们实现功能复杂的校验，并且显示错误信息 Javascript语言 在Angular中使用typescript来开发，它是ES6规范的一个超集，带有完善的类型系统，这使得我们可以在编译阶段解决部分bug，从而使运行时的bug减少，还可以在IDE中获得更好的代码提示，及更快的性能 学习成本 学习angularJS成本高，需要掌握很多概念，包括模块、控制器、指令、作用域、模板、数据绑定、过滤器、依赖注入等等，你很难一下子说出它的核心到底是什么 而Angular的核心就是组件，剩下所有的东西，都是为组件服务的 Angular新特性 全新的命令行工具AngularCLI，它提供了很多方便的功能来帮我们进行开发，比如： 生成一个新项目的骨架 生成组件需要的基础代码 作为开发服务器，供我们调试、编译、构建并且部署我们的代码 运行自动化的单元测试 服务器端渲染 它可以使一个原本需要10s才能加载完的单页应用在1s之内呈现在用户面前 它可以使一个单页应用针对每一个视图去做SEO（搜索引擎优化），对单页应用它只有一个页面，所以要做SEO是一个很麻烦的事情，服务器端的渲染可以是这个效果大大的提升 移动和桌面兼容 Angular中对移动的支持提升到新的高度，借助Ionic、NativeScript结合Angular可以很容易的创建出跨平台的手机应用 Angular还提供一个官方的UI库，叫做Angular Material，提供移动应用和桌面应用通用UI组件 angularJS的架构 Angular的架构 模块：用来将应用中不同的部分组织成一个Angular框架可以理解的单元 组件：是Angular应用的基本构建快，你可以把一个组件理解为一段带有业务逻辑和数据的HTML 指令：允许你向HTML元素添加自定义行为 服务：用来封装可重用的业务逻辑 Angular的组件 与React对比 速度快（虚拟DOM）；只有在调用setState方法时，去更新DOM，而且还是先更新虚拟DOM，然后和实际的DOM比较，再更新实际的DOM，比起angularJS的绑定来说，更新DOM的次数少，且更新DOM的内容少 FLUX架构（Redux） 服务器渲染 与Vue对比 简单 只需一个.vue文件 灵活 vue-cli 性能 库很小 个人主导 只关注web 服务器渲染 依靠第三方 Angular 继承angularJS 吸收React]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端开源项目那些事]]></title>
    <url>%2F2018%2F06%2F22%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E9%82%A3%E4%BA%9B%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[一、开源包含了什么 源码 文档，如二次开发文档和用户使用文档 开发环境，告诉二次开发者如何搭建和运行代码 允许他人贡献代码，而不是仅仅给别人阅读源码的权限 问题，用户提问，维护者答复，问题共享（而不是私聊） 问题列表和升级计划，记录当前问题，以及何时解决、何时升级 二、为何做开源？ 全面提高编程能力 你需要从0打造，每部分代码都需要自己负责，不像在公司中的一颗螺丝钉 提高自己的社区知名度 github上的star能间接的反映你的身价，它能让你得到业内认可。业内同行认可了，做啥事儿都好做，如内推工作。 锻炼自己的产品意识 因为做开源做的是产品，不再是单纯的技术活，UI、运维、推广、收集反馈、甚至成本预算，你都得考虑。 技术范儿、极客精神 作为一名程序猿，能业余打造一款开源产品是一件很帅的事情，满足自己的虚荣心。 三、做开源的一些期望 要快速做出第一版，至少能用。后面再慢慢迭代升级。 要能方便的推广使用，最好是0成本使用。 即做出来，推出去，要快。即，你做的快，别人用的也快。 四、不做什么 大型的框架，如做一个UI框架。短期做不完，使用成本高 模拟成熟轮子，如再造一个jQuery。有成熟方案，用户不会换 小众的东西。基本没人用 没有特色，100%的模仿。用户没有更换的理由 五、做什么 小而精的工具。开发快，使用成本低。 要有特色，哪怕是一个。要和别人不一样，差异化竞争。 一定要大众，50%以上的开发人员都会用到 避开已经被成熟产品垄断的领域。你就不要去跟jQuery vue React竞争了。 六、搭建开发环境初始化进入项目目录，然后命令行运行npm init，按照提示进行初始化即可。初始化完成后，项目根目录下会有package.json的文件。 规范版本号打开package.json文件，将版本号定义为&quot;version&quot;: &quot;0.0.1&quot;。以后我们每次正式提交代码，版本号都不一样。版本号分三级，分别为： 一级，重构版本 二级，重大功能改进 三级，小升级或者bug修复 为何从0.0.1开始？因为0.x.x可以认为是非正式版本、测试版，而从1.x.x开始，就是正式发布的版本了。 1234567891011121314151617&#123; ... "main": "./bin/kaiyu.js", "bin": &#123; "kaiyu": "./bin/kaiyu.js" &#125;, "repository": &#123; "type": "git", "url": "git+https://github.com/kaiyu5609/kaiyu-cli.git" &#125;, "author": "https://github.com/kaiyu5609/kaiyu-cli", "bugs": &#123; "url": "https://github.com/kaiyu5609/kaiyu-cli/issues" &#125;, "homepage": "https://github.com/kaiyu5609/kaiyu-cli#readme", ...&#125; 规范一级目录项目的一级目录要提前规范好，最起码一些常用的目录要提前订好留用，不能乱来。例如： src - 源代码 release - 发布结果 test - 单元测试用例 doc - 文档 example - 实例 构建工具webpack 安装插件npm i babel-core babel-loader babel-polyfill babel-preset-es2015 babel-preset-latest webpack webpack-cli --save-dev。 项目根目录下创建.babelrc文件，内容如： 1234&#123; "presets": ["es2015", "latest"], "plugins": []&#125; 项目根目录下创建webpack.config.js文件，内容如： 1234567891011121314module.exports = &#123; entry: './src/index.js', output: &#123; path: __dirname, filename: './release/bundle.js' &#125;, module: &#123; rules: [&#123; test: /\.js?$/, exclude: /(node_modules)/, loader: 'babel-loader' &#125;] &#125;&#125; 最后，修改package.json中的scripts，增加&quot;release&quot;: &quot;webpack&quot;。然后命令行运行npm run release，就可生成release内容。 简单的测试 在example文件夹中新建index.html，引入打包后的release下的bundle.js文件。 在package.json中的scripts，新增&quot;example&quot;: &quot;http-server -p 8880&quot;（注：先用npm安装http-server）。 然后命令运行npm run example。 浏览器访问http://localhost:8880/example/index.html。 规范git分支至少要存在两个分支，master和dev，dev是开发中的代码。当然，你可以规范更多的分支，例如next fix-bug等，但是要注意一个原则 —— 用不到的就先不要规划。 完善README.mdREADME.md是开源项目的一张脸，用户的第一印象。必须包含以下内容： 产品简介（此处要突出特点，打差异化竞争） 产品安装和下载 快速使用（详细的使用文档或者二次开发文档，外链即可） 交流提问区 关于作者（放你博客链接，和收款二维码） 七、提交代码写文档 &amp; 写测试用例注意，文档和测试用例对于一个开源产品来说非常重要！非常重要！非常重要！而且，文档和测试用例本身就是代码不可分割的一部分。 在写文档之前，还需要准备其他的工具。定位到项目目录下，npm i gitbook-cli -g安装gitbook，然后创建SUMMARY.md，内容如下：12345678# Summary* [项目介绍](README.md)* [使用文档](doc/use/README.md) * [使用1](doc/use/use1.md) * [使用2](doc/use/use1.md)* [二次开发](doc/dev/README.md) * [开发1](doc/dev/dev1.md) * [开发2](dov/dev/dev2.md) 运行gitbook init，会看到各个文件都被创建了，就可以完善各个文档的内容。内容完成之后，运行gitbook build可以将md文件发布为html文件，默认放在_book文件夹。启动了npm run example之后，可以访问http://localhost:8880/_book/查看效果。或者运行gitbook serve --port 8880之后，可以访问http://localhost:8880 最后，再次修改一下README.md，把文档的链接加上12[如何使用](./doc/use/README.md)[二次开发](./doc/dev/README.md) 提交第一版代码首先，修改一下.gitignore文件，加上一行_book，把打包出来的文件忽略掉。然后用之前的方式提交到github的master分支。123git add .git commit -m &apos;v0.0.1 初次提交&apos;git push origin master 接下来，创建tag并提交，代码如下：12git tag -a &apos;v0.0.1&apos; -m &apos;第一版本&apos;git push origin v0.0.1 提交之后，下载地址就有了，https://github.com/kaiyu5609/kaiyu-cli/releases这里可以下载到各个版本的源码。 最后要提交到npm上，能让使用者通过npm进行安装。首先，运行npm add user和npm login来登录，根据提示将你之前注册npm时的账号、密码、邮箱写上就行了，然后，在项目的根目录运行npm publish .，此时问题来了！！！CDN: http://unpkg.com/kaiyu-cli/release/bundle.js 运行之后可能会报了403错误，这种可能是重名导致的。 升级代码并提交在代码开发阶段的步骤总结如下： 来一个dev分支，不要在master分支开发 修改package.json版本号，按照之前既定的版本股则修改，不能乱改 修改代码、文档和测试用例 自测 将dev分支提交到远程 代码开发完成之后，提交的流程如下： 再次确认版本号，因为版本号非常重要 将dev合并到master，并提交master到远程 创建tag并提交到远程 提交到npm 切换到dev分支：123456789git branchgit checkout -b devgit add .git commit -m &quot;v0.0.2&quot;git push origin dev 将dev合并到master分支合并12345git checkout mastergit merge devgit push origin master 八、合并Pull Requests 检查别人提交的代码，如果要合并，则点击Merge pull request，接收别人贡献的代码 然后在本地拉取远程的代码git pull origin master，更新最新的代码]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL入门之基础数据管理与常用函数]]></title>
    <url>%2F2018%2F06%2F10%2FMySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[一、MySQL入门之基础数据管理与常用函数]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之未雨绸缪]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E6%9C%AA%E9%9B%A8%E7%BB%B8%E7%BC%AA%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之说话脉络]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E8%AF%B4%E8%AF%9D%E8%84%89%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之关键词]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E5%85%B3%E9%94%AE%E8%AF%8D%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之理清思路]]></title>
    <url>%2F2018%2F05%2F28%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E7%90%86%E6%B8%85%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之M3]]></title>
    <url>%2F2018%2F05%2F28%2F%E5%88%99%E4%BF%AE%E4%B9%8BM3%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL入门之初识数据库操作]]></title>
    <url>%2F2018%2F05%2F22%2FMySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%88%9D%E8%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一、MySQL基础之数据类型与表的管理 什么是数据库？ 数据库 Database 是按照数据结构来组织、存储和管理数据的仓库 常见的数据库 Oracle DB2 SQL Server Postgre SQL MySQL 相关术语 数据库系统：DBS（Database System） 包括数据库：DB（Database） 数据库管理系统：DBMS（Database Management System） 应用开发工具 管理员及用户 SQL语言：Structured Query Language 结构化查询语言，包括 数据定义语言：DDL 数据操作语言：DML 数据查询语言：DQL 数据控制语言：DCL MySQL相关操作 登录/退出MySQL 配置文件 my.cnf是MySQL的配置文件 登录MySQL mysql -uroot -p mysql -uroot -proot（密码为root） 查看MySQL版本 mysql -V mysql --version 登录的同时打开指定数据库 mysql -uroot -p -D db_name 退出MySQL exit quit 登录信息中需要掌握的 命令行结束符默认使用;或者\g来结束 可以通过help或者\h或者?加上相关关键字来查看手册 \c可以取消当前命令的执行 SQL语句语法规范 常用MySQL的关键字我们需要大写，库名、表名、字段名称等使用小写 SQL语句支持折行操作，拆分的时候不能把完整单词拆开 数据库名称、表名称、字段名称不要使用MySQL的保留字，如果必须要使用，需要用反引号``将其括起来 常用SQL语句 12345678910111213141516-- 1.获取登录的用户SELECT USER();-- 2.获取MySQL的版本信息SELECT VERSION();-- 3.获取当前的日期时间SELECT NOW();-- 4.获取当前打开的数据库SELECT DATABASE();-- 5.查看上一步操作产生的警告信息SHOW WARNINGS;-- 6.MySQL的注释：`#`或者`--` 数据库相关操作 创建数据库 12345678910-- 1.CREATE &#123;DATABASE|SCHEMA&#125; db_name;-- 2.检测数据库名称是否存在，不存在则创建CREATE DATABASE [IF NOT EXISTS] db_name;-- 3.在创建数据库的同时指定编码方式CREATE DATABASE [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset;-- 4.注意：数据库名称最好有意义；名称不能包含特殊字符或者是MySQL关键字 查看当前服务器下全部数据库 1SHOW DATABASES|SCHEMAS; 查看指定数据库的详细信息 1SHOW DREATE DATABASE db_name; 修改指定数据库的编码方式 1ALTER DATABASE db_name [DEFAULT] CHARACTER SET [=] charset; 打开指定数据库 1USE db_name; 获取当前打开的数据库 1234SELECT DATABASE();-- 或者SELECT SCHEMA(); 删除指定数据库 1234DROP DATABASE db_name;-- 删除存在的数据库DROP DATABASE [IF EXISTS] db_name; 数据表相关操作 数据表 是数据库最重要的组成部分之一，数据是保存在数据表中 数据表由行row和列column来组成 每个数据表中至少有一列，行可以有零行一行或者多行组成 表名要求唯一，不要包含特殊字符，最好含义明确 创建数据表 12345CREATE TABLE [IF NOT EXISTS] tbl_name ( 字段名称 字段类型 [完整性约束条件], 字段名称 字段类型 [完整性约束条件], ...) ENGINE=存储引擎 CHARSET=编码方式; 完整性约束条件 查看当前数据库下已有数据表 1234SHOW TABLES;-- 或者SHOW [FULL] TABLES [&#123; FROM | IN &#125; db_name] [LIKE 'pattern' | WHERE expr]; 查看指定数据表的详细信息 1SHOW CREATE TABLE tbl_name; 查看表结构 12345DESC tbl_name;DESCRIBE tbl_name;SHOW COLUMNS FROM tbl_name; 删除指定的数据表 1DROP TABLE [IF EXISTS] tbl_name; 表结构相关操作 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748-- 添加字段ALTER TABLE tbl_name ADD 字段名称 字段属性 [完整性约束条件][FIRST|AFTER字段名称];-- 删除字段ALTER TABLE tbl_name DROP 字段名称;-- 添加默认值ALTER TABLE tbl_name ALTER 字段名称 SET DEFAULT 默认值;-- 删除默认值ALTER TABLE tbl_name ALTER 字段名称 DROP DEFAULT;-- 修改字段类型、字段属性ALTER TABLE tbl_name MODIFY 字段名称 字段类型[字段属性][FIRST|AFTER字段名称];-- 修改字段名称、字段类型、字段属性ALTER TABLE tbl_name CHANGE 原字段名称 新字段名称 字段类型 字段属性[FIRST|AFTER字段名称];-- 添加主键ALTER TABLE tbl_nameADD PRIMARY KEY(字段名称);-- 删除主键(如果字段属性带有AUTO_INCREMENT，则会删不掉；因此得先去掉该属性后才可删掉)ALTER TABLE tbl_nameDROP PRIMARY KEY;-- 添加唯一ALTER TABLE tbl_nameADD UNIQUE KEY|INDEX [index_name](字段名称);-- 删除唯一ALTER TABLE tbl_nameDROP INDEX index_name;-- 修改数据表名称ALTER TABLE tbl_nameRENAME [TO|AS] new_tbl_name;-- 或者RENAME TABLE tbl_name TO new_tbl_name;-- 修改AUTO_INCREMENT的值ALTER TABLE tbl_name AUTO_INCREMENT=值; MySQL中的数据类型 数值型 整数型 浮点数 定点数 字符串类型 日期时间类型 MySQL存储引擎 MyISAM存储引擎 默认MyISAM的表会在磁盘中产生3个文件 .frm（表结构文件） .MYD（数据文件） .MYI（索引文件） 可以在创建表的时候指定数据文件和索引文件的存储位置，只有MyISAM表支持 DATA DIRECTORY [=] 数据文件保存的绝对路径 INDEX DIRECTORY [=] 索引文件保存的绝对路径 MyISAM单表最大支持的数据量2的64次方条记录 每个表最多可以创建64个索引 如果是复合索引，每个复合索引最多包含16个列，索引值最大长度是1000B MyISAM引擎的存储格式 定长（FIXED静态）：是指字段中不包含VARCHAR/TEXT/BLOB 动态（DYNAMIC）：只要字段中包含了VARCHAR/TEXT/BLOB 压缩（COMPRESSED）：需要myisampack来创建 InnoDB存储引擎 设计遵循ACID模型，支持事务，具有从服务崩溃中恢复的能力，能够最大限度保护用户的数据 原子性（Atomiocity） 一致性（Consistency） 隔离性（Isolation） 持久性（Durability） 支持行级锁，可以提升多用户并发时的读写性能 支持外键，保证数据的一致性和完整性 InnoDB拥有自己独立的缓冲池，常用的数据和索引都在缓存中 对于INSERT、UPDATE、DELETE操作，InnoDB会使用一种change buffering的机制来自动优化，还可以提供一致性的读，并且还能缓存表更的数据，减少磁盘I/O，提高性能 创建InnoDB表之后会产生两个文件 .frm（表结构文件） .ibd（数据和索引存储表空间中） 所有的表都需要创建主键，最好是配合上AUTO_INCREMENT，也可以放到经常查询的列作为主键 MySQL数据库操作 添加记录 123456789101112131415161718INSERT [INTO] tbl_name[(col_name,...)] &#123;VALUE|VALUES&#125;(VALUES...);-- 不指定字段名称（需要按照建表时的字段顺序给每一个字段赋值）INSERT tbl_name VALUE(value...);-- 列出指定字段INSERT tbl_name(字段名称,...) VALUES(值,...);-- INSERT ... SET的形式INSERT tbl_name SET 字段名称=值,...;-- INSERT ... SELECT的形式INSERT tbl_name[(字段名称...)] SELECT 字段名称,...FROM tbl_name [WHERE 条件];-- 一次添加多条记录INSERT tbl_name[(字段名称,...)] VALUES(值,...),(值,...),(值,...); 修补记录 123UPDATE tbl_name SET 字段名称=值,字段名称=值[WHERE 条件];-- 如果不添加条件，整个表中的记录都会被更新 删除记录 12345678DELETE FROM tbl_name [WHERE 条件];-- 如果不添加条件，整个表中的记录都会被删除-- DELETE清空数据表的时候不会重置AUTO_INCREMENT的值，可以通过ALTER语句将其重置为1-- 彻底清空数据表（1.清除表中所有记录；2.会重置AUTO_INCREMENT的值）TRUNCATE [TABLE] tbl_name; 查询记录 1234567891011121314151617181920212223SELECT select_expr,... FROM tbl_name[WHERE 条件][GROUP BY &#123;col_name|position&#125; HAVING 二次筛选][ORDER BY &#123;col_name|position&#125; [ASC|DESC]][LIMIT 限制结果集的显示条数]-- 查询表中所有记录（*：所有字段）SELECT * FROM tbl_name;-- 指定字段的信息SELECT 字段名称,... FROM tbl_name;-- 库名.表名SELECT 字段名称,... FROM db_name.tbl_name;-- 给字段起别名SELECT 字段名称[AS]别名名称,... FROM db_name.tbl_name;-- 给数据表起别名SELECT 字段名称,... FROM tbl_name[AS]别名名称;-- 表名.字段名称SELECT tbl_name.col_name,... FROM tbl_name; WHERE条件 会筛选出符合条件的记录 比较运算符：&gt;、&gt;=、&lt;、&lt;=、!=、&lt;&gt;、&lt;=&gt; &lt;=&gt;和= 的区别：&lt;=&gt;可以检测NULL值 IS [NOT] NULL：检测值是否为NULL或者NOT NULL 指定范围：[NOT] BETWEEN ... AND 指定集合：[NOT] IN(值,...) 逻辑运算符 AND（逻辑与） OR（逻辑或） 匹配字符 [NOT] LIKE %（任意长度的字符串） _（任意一个字符） GROUP BY分组 把值相同放到一个组中，最终查询出的结果只会显示组中一条记录 分组配合GROUP_CONCAT()查看组中某个字段的详细信息 配合聚合函数使用 COUNT()（统计记录总数） 如果写的是COUNT(字段名称)，字段中的值为NULL是不统计进来 如果写的是COUNT(*)会统计NULL值 SUM()（求和） MAX()（求最大值） MIN()（求最小值） AVG()（求平均值） 配合WITH ROLLUP关键字使用 会在记录末尾添加一条记录，是上面所有记录的总和 可以通过字段来进行分组，也可以通过index来进行分组 HAVING子句对分组结果进行二次筛选 COUNT(*) &gt;= 3 或者 COUNT(*)的别名 &gt;= 3 12345678910111213141516171819202122232425262728-- 按照性别分组，查询组中的用户名有哪些SELECT GROUP_CONCAT(username),age,sex,addr FROM user GROUP BY sex;-- 按照addr分组，得到用户名的详情，总人数，得到组中年龄的总和，年龄的最大值、最小值、平均值SELECT addr,GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsers,SUM(age) AS sumAge,MAX(age) AS maxAge,MIN(age) AS minAge,AVG(age) as avgAgeFROM userGROUP BY addr;-- WITH ROLLUPSELECT GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsersFROM userGROUP BY sexWITH ROLLUP;-- HAVING子句对分组结果进行二次筛选SELECT addr,GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsersFROM userGROUP BY addrHAVING totalUsers &gt;= 3; ORDER BY排序 ORDER BY 字段名称 ASC|DESC LIMIT限制结果集显示条数 LIMIT 值：显示结果集的前几条记录 LIMIT offset,row_count：从offset开始，显示几条记录 多表查询 笛卡尔积的形式 内连接的形式 查询两个表中符合连接条件的记录 SELECT 字段名称,... FROM tbl_name1 INNER JOIN tbl_name2 ON 连接条件; 外链接的形式 左外连接 SELECT 字段名称,... FROM tbl_name1 LEFT OUTER JOIN tbl_name2 ON 条件; 先显示左表中的全部记录，再去右表中查询符合条件的记录，不符合的以NULL代替（以左表为主） 右外连接 SELECT 字段名称,... FROM tbl_name1 RIGHT OUTER JOIN tbl_name2 ON 条件; 先显示右表中的全部记录，再去左表中查询符合条件的记录，不符合的以NULL代替（以右表为主） 1234567891011121314151617181920-- 笛卡尔积（两层循环）SELECT emp.id,emp.username,emp.age,dep.depName FROM emp,dep;-- 内连接的形式SELECT e.id,e.username,e.age,d.depNameFROM emp AS eINNER JOIN dep AS dON e.depId=d.id;-- 左外链接的形式（可以省略 OUTER）SELECT e.id,e.username,e.age,d.depNameFROM emp AS eLEFT OUTER JOIN dep AS dON e.depId=d.id;-- 右外链接的形式（可以省略 OUTER）SELECT e.id,e.username,e.age,d.depNameFROM emp AS eRIGHT OUTER JOIN dep AS dON e.depId=d.id; 数据表的创建 12345678910111213141516171819202122232425262728-- 创建kaiyu表CREATE DATABASE IF NOT EXISTS fengche DEFAULT CHARACTER SET 'UTF8';-- 打开kaiyu表USE kaiyu-- 用户表 userCREATE TABLE IF NOT EXISTS user ( id INT, username VARCHAR(20), password CHAR(32), emial VARCHAR(50), age TINYINT, card CHAR(18), tel CHAR(11), salary FLOAT(8,2), married TINYINT(1), addr VARCHAR(100), sex ENUM('男', '女', '保密')) ENGINE=INNODB CHARSET=UTF8;-- INSERT [INTO] tbl_name(id,username,...) VALUES(1,'dhuang',...);-- 向user表中插入一条记录INSERT user(id,username,password,email,age,card,tel,salary,married,addr,sex)VALUES(1,'dhuang','123456','154298331@qq.com',24,'194958683948235864','15829341542',88888.68,0,'深圳','男');-- 查询表中所有记录SELECT * FROM tbl_name; 测试插入的数据 整型 超过会被截断 浮点型 DECIMAL[(M,D)]，小数位D不指定，则会截断为整型 字符串类型 CHAR效率高于VARCHAR，CHAR相当于拿空间换时间，VARCHAR拿时间换空间 CHAR默认存储数据的时候，后面会用空格填充到指定长度，而检索的时候会去掉后面的空格；VARCHAR在保存数据的时候不进行填充，尾部的空格会留下 TEXT列不能有默认值，检索的会后不存在大小写转换 枚举类型插入序号也是可以的，如：ENUM(&#39;男&#39;, &#39;女&#39;, &#39;保密&#39;)，则男对应的序号是1；枚举类型会自动过滤掉空格。 完善用户表user 12345678910111213CREATE TABLE IF NOT EXISTS `user`( `id` INT UNSIGNED AUTO_INCREAMENT KEY COMMENT '用户编号', `username` VARCHAR(20) NOT NULL UNIQUE COMMENT '用户名', `password` CHAR(32) NOT NULL COMMENT '密码', `email` VARCHAR(50) NOT NULL UNIQUE COMMENT '邮箱', `age` TINYINT UNSIGNED NOT NULL DEFAULT 18 COMMENT '年龄', `sex` ENUM('男', '女', '保密') NOT NULL DEFAULT '保密' COMMENT '性别', `tel` CHAR(11) NOT NULL UNIQUE COMMENT '电话', `addr` VARCHAR(50) NOT NULL DEFAULT '深圳' COMMENT '地址', `card` CHAR(18) NOT NULL UNIQUE COMMENT '身份证号', `married` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0代表未婚，1代表已婚', `salary` FLOAT(8,2) NOT NULL DEFAULT 0 COMMENT '薪水') ENGINE=INNODB DEFAULT CHARSET=UTF8;]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之集合框架]]></title>
    <url>%2F2018%2F05%2F01%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[一、集合框架 概念 现实生活中：很多的事物凑在一起 数学中的集合：具有共同属性的事物的总体 Java中的集合类：是一种工具类，就像是容器，存储任意数量的具有共同属性的对象 作用 在类的内部，对数据进行组织； 简单而快速的搜索大数量的条目； 有的集合接口，提供了一系列排列有序的元素，并且可以在序列中间快速的插入或者删除有关元素； 有的集合接口，提供了映射关系，可以通过关键字(key)去快速查找到对应的唯一对象，而这个关键字可以是任意类型。 集合与数组的对比 —— 为何选择集合而不是数组 数组的长度是固定的，集合的长度是可变的 数组只能通过下标访问元素，类型固定，而有的集合可以通过任意类型查找所映射的具体对象 体系结构 Collection Map 二、Collection接口、子接口以及实现类 Collection接口 是List、Set和Queue接口的父接口 定义了可用于操作List、Set和Queue的方法 —— 增删改查 List接口及其实现类 —— ArrayList List是元素有序并且可以重复的集合，被称为序列 List可以精确的控制每个元素的插入位置，或删除某个位置元素 ArrayList —— 数组序列，是List的一个重要实现类 ArrayList底层是由数组实现的 三、List实现功能 —— 模拟学生选课功能 选择课程（往List中添加课程） 12345678910package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125;&#125; 1234567891011121314package com.fengche.collection;import java.util.Set;import java.util.HashSet;public class Student &#123; public String id; public String name; public Set courses; public Student(String id, String name) &#123; this.id = id; this.name = name; this.courses = new HashSet(); &#125;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package com.fengche.collection;import java.util.List;import java.util.ArrayList;public class ListCourses &#123; /** * 用于存放备选课程的List */ public List selCourses; public ListCourses() &#123; this.selCourses = new ArrayList(); &#125; /** * 用于往selCourses中添加备选课程 */ public void addCourse() &#123; // 1. 创建一个课程对象，并通过调用add方法，添加到备选课程List中 Course course1 = new Course("1", "数据结构"); selCourses.add(course1); Course c1 = (Course)selCourses.get(0); System.out.println("添加了课程:" + c1.id + ":" + c1.name); // 2. 另一种添加方式 Course course2 = new Course("2", "C语言"); selCourses.add(0, course2); Course c2 = (Course)selCourses.get(0); System.out.println("添加了课程:" + c2.id + ":" + c2.name); // 3. 以下方法会抛出数组下标越界 // Course course3 = new Course("3", "Test"); // selCourses.add(4, course3); // 4. addAll的添加方式 Course[] courses1 = &#123;new Course("3", "离散数学"), new Course("4", "汇编语言")&#125;; selCourses.addAll(Arrays.asList(courses1)); Course c3 = (Course)selCourses.get(2); Course c4 = (Course)selCourses.get(3); System.out.println("添加了课程:" + c3.id + ":" + c3.name + ";" + c4.id + ":" + c4.name); // 5. addAll的另一种添加方式 Course[] courses2 = &#123;new Course("5", "高等数学"), new Course("6", "大学英语")&#125;; selCourses.addAll(2, Arrays.asList(courses2)); Course c5 = (Course)selCourses.get(2); Course c6 = (Course)selCourses.get(3); System.out.println("添加了课程:" + c5.id + ":" + c5.name + ";" + c6.id + ":" + c6.name); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); &#125;&#125; 查看所选课程（遍历List中的元素） 1234567891011121314151617181920212223242526package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... // 通过迭代器来遍历List public void iteratorCourse() &#123; // 通过集合的iterator方法，取得迭代器的实例 Iterator it = selCourses.iterator(); while (it.hasNext()) &#123; Course c = (Course)it.next(); System.out.println("课程:" + c.id + ":" + c.name); &#125; &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); listCourses.iteratorCourse(); &#125;&#125; 123456789101112131415161718192021222324252627package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... // 通过for each方法访问集合元素 public void forEachCourse() &#123; // 通过集合的iterator方法，取得迭代器的实例 for (Object obj:selCourses) &#123; Course c = (Course)obj; System.out.println("课程:" + c.id + ":" + c.name); &#125; &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.forEachCourse(); &#125;&#125; 修改所选课程（修改List中的元素） 1234567891011121314151617181920212223package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void modifyCourse() &#123; selCourses.set(4, new Course("7", "毛概")); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.modifyCourse(); listCourses.forEachCourse(); &#125;&#125; 删除所选的某门课程（删除List中的元素） 12345678910111213141516171819202122232425package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void removeCourse() &#123; Course c = (Course)selCourses.get(4); selCourses.remove(c); // or: selCourses.remove(4); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.removeCourse(); listCourses.forEachCourse(); &#125;&#125; 123456789101112131415161718192021222324package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void removeAllCourse() &#123; Course[] courses = &#123;(Course)selCourses.get(4), (Course)selCourses.get(5)&#125;; selCourses.removeAll(Array.asList(courses)); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.removeAllCourse(); listCourses.forEachCourse(); &#125;&#125; 判断List中是否包含某个元素 12345678910111213141516171819202122232425262728package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void containsCourse() &#123; // 取得备选课程序列的第0个元素 Course course = selCourses.get(0);// selCourses 假设已应用泛型，这里不用强转类型 // 打印输出selCourses是否包含course对象 System.out.println("备选课程中是否包含课程：" + course.name + "," + selCourses.contains(course));// true // 创建一个新的课程对象，ID和名称，与course对象完全一样 Course course2 = new Course(course.id, course.name); System.out.println("备选课程中是否包含课程：" + course2.name + "," + selCourses.contains(course2));// false &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse();// 除了addCourse方法，其他都注释掉 listCourses.containsCourse(); &#125;&#125; 判断List中是否包含某属性相同的元素，如对比元素的name是否相同 contains内部的实现原理，其实是遍历集合，然后调用equals方法进行对比的，所以我们可以重写equals方法来实现。 123456789101112131415161718192021222324252627282930313233343536373839package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125; public Course() &#123; &#125; @Override public boolean equals(Object obj) &#123; if (this == obj) &#123; return true; &#125; if (obj == null) &#123; return false; &#125; if (!(obj instanceof Course)) &#123; return false; &#125; Course course = (Course) obj; if (this.name == null) &#123; if (course.name == null) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; if (this.name.equals(course.name)) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125; 使用indexOf方法取得某元素在集合中的索引位置 实现List集合的排序（TODO） 四、泛型 上文List集合中，我们一直添加的是课程类，如果期间我们往该集合中添加一些奇怪的东西，比如说字符串，则会抛出ClassCastException异常；原因很简单，我们在遍历集合，将里面的Object类型元素强转成课程类型，突然遇到字符串类型的元素，把它进行强转的话就会很容易的抛出这个异常了。又没有一种方法可以控制我往某个集合中添加元素的类型呢？这就需要用到一个重要的知识：泛型。 集合中的元素，可以是任意类型的对象（对象的引用） 如果把某个对象放入集合，则会忽略他的类型，而把他当做Object处理 泛型则是规定了某个集合只可以存放特定类型的对象 会在编译期间进行类型检查 可以直接按指定类型获取集合元素 示例 12345678910111213141516171819202122232425262728293031323334package com.fengche.collection;import java.util.List;public class ListGeneric &#123; // 带有泛型 —— Course的List类型属性 public List&lt;Course&gt; courses; public void ListGeneric() &#123; this.courses = new ArrayList&lt;Course&gt;(); &#125; public void addCourse() &#123; Course course1 = new Course("1", "大学语文"); courses.add(course1); // 这里则在编译时，抛出错误；泛型集合中，不能添加泛型规定的类型及其子类型以外的对象，否则会把报错！ courses.add("能否添加一些奇怪的东西呢？"); Course course2 = new Course("2", "Java基础"); courses.add(course2); &#125; public forEachCourse() &#123; for (Course course:courses) &#123;// 这里就不用强转类型了 System.out.println(course.id + ":" + course.name); &#125; &#125; public static void main(String[] args) &#123; ListGeneric listGeneric = new ListGeneric(); listGeneric.addCourse(); listGeneric.forEachCourse(); &#125;&#125; 泛型集合可以添加泛型的子类型的对象实例 比如：ChileCourse继承Course，那么ChileCourse的实例也是可以添加到泛型为Course的List集合中去。 泛型集合中的限定类型不能使用基本数据类型；可以通过使用包装类限定允许存入的基本数据类型。 五、Set接口及其实现类 —— HashSet Set是元素无序并且不可以重复的集合，被称为集 HashSet —— 哈希集，是Set的一个重要实现类 Set案例功能，提供备选课程 创建学生对象，并给该学生添加三门课程（添加在学生的courses —— Set类型的属性中） 显示备选课程 循环三次，每次输入课程ID 往学生的courses属性中添加与输入的ID匹配的课程 输出学生选择的课程 六、Set案例功能 修改上文定义学生类选课的泛型 1234567891011121314package com.fengche.collection;import java.util.Set;import java.util.HashSet;public class Student &#123; public String id; public String name; public Set &lt;Course&gt; courses; public Student(String id, String name) &#123; this.id = id; this.name = name; this.courses = new HashSet&lt;Course&gt;(); &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.fengche.collection;import java.util.Set;import java.util.HashSet;import java.util.ArrayList;public class SetCourses &#123; public List&lt;Course&gt; selCourses; public SetCourses() &#123; selCourses = new ArrayList&lt;Course&gt;(); &#125; // public void addCourse() &#123;&#125; // 同上文 ListCourses 的方法 public static void main(String[] args) &#123; SetCourses setCourses = new SetCourses(); setCourses.addCourse(); setCourses.forEachCourse(); Student student = new Student("1", "小明"); Scanner scanner = new Scanner(System.in); for (int i = 0; i &lt; 3; i++) &#123; System.out.println("请输入课程ID"); String courseId = scanner.next(); for (Course course : setCourses.selCourses) &#123; if (course.id.equals(courseId)) &#123; // Set中，添加某个元素，无论添加多少次，最终只会保留一个该对象（的引用），并且保留的是第一次添加的那一个 student.courses.add(course); &#125; &#125; &#125; setCourses.forEachStudentSet(student); &#125; public void forEachStudentSet(Student student) &#123; // 打印输出，学生所选的课程！ for (Course course : student.courses) &#123; System.out.println("选择了课程:" + course.id + ":" + course.name); &#125; &#125;&#125; 判断Set中是否包含某元素 123456789101112131415161718192021222324252627282930package com.fengche.collection;import java.util.Set;import java.util.HashSet;import java.util.ArrayList;public class SetCourses &#123; public List&lt;Course&gt; selCourses; public SetCourses() &#123; selCourses = new ArrayList&lt;Course&gt;(); &#125; // public void addCourse() &#123;&#125; // 同上文 ListCourses 的方法 public static void main(String[] args) &#123; // 这部分内容，同上 // ... // Set的contains方法 Course course = new Course(); course.name = "离散数学"; System.out.println("备选课程中是否包含课程：" + course.name + "," + student.courses.contains(course));// 这里返回的是：false &#125; // public void forEachStudentSet // 同上&#125; 这里返回的是：false；因为这里使用的是HashSet去实现的Set接口，所以这就得看HashSet的contains它的实现机制了。 Object不仅定义了equals方法，还有hashCode方法，它返回的是对象哈希码的值 当调用HashSet的contains方法时，它是先调用hashCode方法来返回哈希码，如果哈希码相等的情况下，再调用equals方法，只有这两个方法所返回的值都相等的情况下，才认定这个HashSet包含某个元素 重写hashCode和equals方法： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125; public Course() &#123; &#125; @Override public int hashCode() &#123; final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; &#125; @Override public boolean equals(Object obj) &#123; if (this == obj) &#123; return true; &#125; if (obj == null) &#123; return false; &#125; if (!(obj instanceof Course)) &#123; return false; &#125; Course course = (Course) obj; if (this.name == null) &#123; if (course.name == null) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; if (this.name.equals(course.name)) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125; 再运行以上程序，则返回的是：true。 七、Map和HashMap Map接口 Map提供了一种映射关系，其中的元素是以键值对(key-value)的形式存储的，能够实现根据key快速查找value Map中的键值对以Entry类型的对象实例形式存在 键(key值)不可重复，value值可以 Map支持泛型，形式如：Map HashMap类 HashMap是Map的一个重要实现类，也是最常用的，基于哈希表实现 HashMap中的Entry对象是无序排列的 key值和value值都可以为null，但是一个HashMap只能有一个key值为null的映射(key值不可重复) Map和HashMap案例说明 通过Map进行学生信息管理，其中key为学生ID，value为学生对象 通过键盘输入学生信息 对集合中的学生信息进行增、删、改、查操作 Map和HashMap案例 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110package com.fengche.collection;import java.util.HashMap;public class MapStudent &#123; // 用来承装学生类型对象 public Map&lt;String, Student&gt; students; // 在构造方法中初始化students属性 public MapStudent() &#123; this.students = new HashMap&lt;String, Student&gt;(); &#125; // 测试添加：输入学生ID，判断是否被占用；若未被占用，则输入姓名，创建新的学生对象，并且添加到st public void pushStudent() &#123; // 创建以个Scanner对象，用来获取输入的学生ID和姓名 Scanner scanner = new Scanner(System.in); int i = 0; while (i &lt; 3) &#123; System.out.println("请输入学生ID："); String id = scanner.next(); Student student = students.get(id); if (id == null) &#123; // 提示输入学生姓名 System.out.println("请输入学生姓名："); String name = scanner.next(); // 创建新的学生对象 Student newStudent = new Student(id, name); // 通过调用students的put方法，添加（id-学生）映射 students.put(id, newStudent); System.out.println("成功添加学生：" + students.get(id).name); i++; &#125; else &#123; System.out.println("该学生id已被占用！"); continue; &#125; &#125; &#125; // 测试Map的keySet方法 public void forEachStudent() &#123; // 通过keySet方法，返回Map中的所有“键”的Set集合 Set&lt;String&gt; keySet = students.keySet(); // 遍历keySet，取得每一个键，再调用get方法取得每个键对应的value for (String studentId : keySet) &#123; Student student = students.get(studentId); if (student != null) &#123; System.out.println("学生：" + student.name); &#125; &#125; &#125; // 测试删除Map中的映射 public void removeStudent() &#123; // 提示输入待删除的学生ID System.out.println("请输入要删除的学生ID！"); Scanner scanner = new Scanner(System.in); while (true) &#123; String id = scanner.next(); Student student = students.get(id); if (student == null) &#123; System.out.println("该ID不存在！"); continue; &#125; students.remove(id); System.out.println("成功删除学生：" + student.name); break; &#125; &#125; // 通过entrySet方法来遍历Map public void entrySetStudent() &#123; // 通过entrySet方法，返回Map中的所有键值对 Set&lt;Entry&lt;String, Student&gt;&gt; entrySet = students.entrySet(); for (Entry&lt;String, Student&gt; entry : entrySet) &#123; System.out.println("取得键：" + entry.getKey()); System.out.println("对应的值为：" + entry.getValue().name); &#125; &#125; // 利用put方法修改Map中的已有映射 public void modifyStudent() &#123; // 提示输入待修改的学生ID System.out.println("请输入要修改的学生ID！"); Scanner scanner = new Scanner(System.in); while (true) &#123; String id = scanner.next(); Student student = students.get(id); if (student == null) &#123; System.out.println("该ID不存在！"); continue; &#125; System.out.println("当前ID所对应的学生为：" + student.name); System.out.println("请输入新的学生姓名："); String name = scanner.next(); Student newStudent = new Student(id, name); students.put(id, newStudent); System.out.println("修改成功！"); break; &#125; &#125; public static void main(String[] args) &#123; MapStudent mapStudent = new MapStudent(); pmapStudent.pushStudent(); mapStudent.forEachStudent(); mapStudent.removeStudent(); mapStudent.entrySetStudent(); mapStudent.modifyStudent(); &#125;&#125; 判断Map中是否包含某个Key值或者某个Value值 12345678910111213141516171819202122232425262728293031package com.fengche.collection;import java.util.HashMap;public class MapStudent &#123; // 用来承装学生类型对象 public Map&lt;String, Student&gt; students; // 在构造方法中初始化students属性 public MapStudent() &#123; this.students = new HashMap&lt;String, Student&gt;(); &#125; // 略 public void containsKeyOrValue() &#123; // 在Map中，用containsKey()方法，来判断是否包含某个Key值 // 用containsValue()方法，来判断是否包含某个Value值 String id = "3"; System.out.println("在学生映射表中是否存在：" + students.containsKey(id)); // containsValue 同理，这里也是需要重写hashCode和equals方法 &#125; public static void main(String[] args) &#123; MapStudent mapStudent = new MapStudent(); // ... mapStudent.containsKeyOrValue(); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之异常]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%BC%82%E5%B8%B8%2F</url>
    <content type="text"><![CDATA[一、异常的简介 有异于常态，和正常情况不一样，有错误出现。阻止当前方法或作用域，称之为异常 Java异常体系结构简介 处理异常 try-catch以及try-catch-finally 如果try抛出异常，将会终止执行，程序的控制权将被移交给catch块中的异常处理程序。 try会抛出很多种类型的异常，则用多重catch语句，但要注意异常类型必须子类在前父类在后。 抛出异常 throw —— 将产生的异常抛出（动作） throws —— 声明将要抛出何种类型的异常（声明） 123public void 方法名(参数列表) throws 异常列表 &#123; // 调用会抛出异常的方法或者：先抛出一个异常 throw new Exception();&#125; 自定义异常 12345678public class DrunkException extends Exception &#123; public DrunkException() &#123; &#125; public DrunkException(String message) &#123; super(message); &#125;&#125; Java中的异常链 1234567891011121314151617181920212223242526272829303132333435/** * test1(): 抛出“喝大了”异常 * test2(): 调用test1()，捕获"喝大了"异常，并且包装成运行时异常，继续抛出 * main方法中，调用test2()，尝试捕获test2()方法抛出的异常 * */public class ChainTest &#123; public static void main(String[] srgs) &#123; ChainTest ct = new ChainTest(); try &#123; ct.test2(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; public void test1() throws DrunkException &#123; throw new DrunkException("喝车别开酒！"); &#125; public void test2() &#123; try &#123; test1(); &#125; catch (DrunkException e) &#123; RuntimeException newExc = new RuntimeException("司机一滴酒，亲人两行泪~~"); newExc.initCause(e); throw newExc; /* 或者 RuntimeException newExc = new RuntimeException(e); throw newExc; */ &#125; &#125;&#125; 实际应用中的经验与总结 a. 处理运行时异常时，采用逻辑去合理规避同时辅助try-catch处理 b. 在多重catch块后面，可以加一个catch(Exception)来处理可能会被遗漏的异常 c. 对于不确定的代码，也可以加上try-catch，处理潜在的异常 d. 尽量去处理异常，切忌只是简单的调用printStackTrace()去打印输出 e. 具体如何处理异常，要根据不同的业务需求和异常类型去决定 f. 尽量添加finally语句块去释放占用的资源]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之接口]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E6%8E%A5%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[一、Java中的接口 接口的概念 类是一种具体实现体，而接口定义了某一批类所需要遵守的规范，接口不关心这些类的内部数据，也不关心这些类里方法的实现细节，它只规定这些类里必须提供某些方法。 接口定义的基本语法： 1234[修饰符] interface 接口名 [extends 父接口1, 父接口2, ...] &#123; 零个到多个常量定义... 零个到多个抽象方法的定义...&#125; 接口的定义 常量：接口中的属性是常量，即使定义时不添加 public static final 修饰符，系统也会自动加上。 方法：接口中的方法只能是抽象方法，即使定义时不添加 public abstract 修饰符，系统也会自动加上。 接口的使用 一个类可以实现一个或多个接口，实现接口使用 implements 关键字。Java中一个类只能继承一个父类，是不够灵活的，通过实现多个接口可以做补充。 12345// 继承父类实现接口的语法为：[修饰符] class 类名 extends 父类 implements 接口1, 接口2, ... &#123; 类体部分// 如果继承了抽象类，需要实现继承的抽象方法；要实现接口中的抽象方法。&#125;// 如果要继承父类，继承父类必须在实现接口之前 实例： 12345package com.fengche;public interface IPlayGame &#123; public void playGame();&#125; 1234567891011121314151617181920package com.fengche;public class SmartPhone extends Telphone implements IPlayGame &#123; @Override public void call() &#123; System.out.println("通过语音来打电话"); &#125; @Override public void message() &#123; System.out.println("通过语音来发短信"); &#125; @Override public void playGame() &#123; System.out.println("具有了玩游戏的功能"); &#125;&#125; 12345678910package com.fengche;public class Psp implements IPlayGame &#123; @Override public void playGame() &#123; System.out.println("具有了玩游戏的功能"); &#125;&#125; 123456789101112package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; IPlayGame ip1 = new SmartPhone(); ip1.playGame(); IPlayGame ip2 = new Psp(); ip2.playGame(); &#125;&#125; 使用接口： 接口在使用过程当中，还经常与匿名内部类配合使用 匿名内部类就是没有名字的内部类，多用于关注实现而不关注实现类的名称 12345Interface i = new Interface() &#123; public void method() &#123; System.out.println("匿名内部类实现接口的方式"); &#125;&#125;; 123456789101112131415161718192021package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; IPlayGame ip3 = new IPlayGame() &#123; @Override public void playGame() &#123; System.out.println("匿名内部类实现接口的方式1"); &#125; &#125;; ip3.playGame(); new IPlayGame() &#123; public void playGame() &#123; System.out.println("匿名内部类实现接口的方式2"); &#125; &#125;.playGame(); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之多态]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A4%9A%E6%80%81%2F</url>
    <content type="text"><![CDATA[一、Java中的多态多态，指的是对象的多种形态 引用多态 父类的引用可以指向本类的对象 父类的引用可以指向子类的对象 12345678910package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; Animal cat = new Animal();// 父类的引用指向本类的对象 Animal dog = new Dog();// 父类的引用指向子类的对象 // Dog dog2 = new Animal();// 错误，子类的引用不能指向父类的对象 &#125;&#125; 方法多态 创建本类对象时，调用的方法为本类方法 创建子类对象时，调用的方法为子类重写的方法或者继承的方法 二、多态中的引用类型转换 向上类型转换（隐式/自动类型转换），是小类型到大类型的转换 向下类型转换（强制类型转换），是大类型大小类型的转换 instanceof 运算符，来解决引用对象的类型，避免类型转换的安全性问题 1234567891011121314151617181920package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; Dog dog = new Dog(); Animal animal = dog;// 向上类型转换 自动类型转换 Dog dog2 = (Dog)animal;// 向下类型转换 强制类型转换 // 运行时出错 Cat cat = (Cat)animal;// 1.编译时 Cat类型；2.运行时 Dog类型 // 可以通过instanceof运算符避免类型转换的安全性问题 if（animal instanceof Cat) &#123; Cat cat = (Cat)animal; &#125; else &#123; System.out.println("无法进行类型转换"); &#125; &#125;&#125; 三、Java中的抽象类 语法定义： 某个类使用abstract关键字修饰，则该类为抽象类。 应用场景： a. 在某些情况下，某个父类只是知道其子类应该包含怎样的方法，但无法准确知道这些子类如何实现这些方法。 b. 从多个具有相同特征的类中抽象出一个抽象类，以这个抽象类作为子类的模板，从而避免了子类设计的随意性。 作用： 限制规定子类必须实现某些方法，但不关注实现细节 使用规则： a. abstract定义抽象类 b. abstract定义抽象方法，只有声明，不需要实现 c. 包含抽象方法的类是抽象类 d. 抽象类中可以包含普通的方法，也可以没有抽象方法 e. 抽象类不能直接创建，可以定义引用变量 123456package com.fengche;public abstract class Telphone &#123; public abstract void call();// 抽象方法没有方法体以分好结束 public abstract void message();&#125; 123456789101112131415package com.fengche;public class CellPhone extends Telphone &#123; @Override public void call() &#123; System.out.println("通过键盘来打电话"); &#125; @Override public void message() &#123; System.out.println("通过键盘来发短信"); &#125;&#125; 123456789101112131415package com.fengche;public class SmartPhone extends Telphone &#123; @Override public void call() &#123; System.out.println("通过语音来打电话"); &#125; @Override public void message() &#123; System.out.println("通过语音来发短信"); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之继承]]></title>
    <url>%2F2018%2F04%2F28%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E7%BB%A7%E6%89%BF%2F</url>
    <content type="text"><![CDATA[一、Java中的继承 继承的概念：继承是类与类的一种关系。注：Java中的继承是单继承 继承的好处：子类拥有父类的所有属性和方法，除了private修饰的。实现代码复用 语法规则：class 子类 extends 父类 二、Java中的方法重写 什么是方法的重写：如果子类对继承父类的方法不满意，是可以重写父类继承的方法的，当调用方法时会优先调用子类的方法。 语法规则： a. 返回值类型 b. 方法名 c. 参数类型及个数都要与父类继承的方法相同，才叫方法的重写。 三、继承的初始化顺序 初始化父类再初始化子类 先执行初始化对象中属性，再执行构造方法中的初始化 四、Java中的final关键字使用final关键字做标识有“最终的”含义final可以修饰类、方法、属性和变量 - final修饰类，则该类不允许被继承 - final修饰方法，则该方法不允许被覆盖（重写） - final修饰属性，则该类的属性不会进行隐式的初始化（类的初始化属性必须有值），或在构造方法中赋值（但只能选其一） - final修饰变量，则该变量的值只能赋一次值，即变为常量 五、Java中的super关键字super关键字在对象的内部使用，可以代表父类对象。 访问父类的属性：super.name; 访问父类的方法：super.doSomething(); super关键字的应用 子类的构造过程中必须调用其父类的构造方法 如果子类的构造方法中没有显示调用父类的构造方法，则系统默认调用父类无参的构造方法 如果显示的调用构造方法，必须在子类的构造方法的第一行 如果子类构造方法中既没有显示调用父类的构造方法，而父类又没有无参的构造方法，则编译出错 六、Java中的Object类Object类是所有类的父类，如果一个类没有使用extends关键字明确标识继承另外一个类，那么这个类默认继承Object类。Object类中的方法，适合所有子类。 toString方法 在Object类里面定义toString方法的时候返回的对象的哈希code码（对象地址字符串） 可以通过重写toString方法表示出对象的属性 equals方法 比较的是对象的引用是否指向同一块内存地址 一般情况下比较两个对象时比较他的值是否一致，所以要进行重写]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之封装]]></title>
    <url>%2F2018%2F04%2F28%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%B0%81%E8%A3%85%2F</url>
    <content type="text"><![CDATA[一、封装 概念： 将类的某些信息隐藏在类的内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问。 好处： a.只能通过规定的方法访问数据 b.隐藏类的实例细节，方便修改和实现 封装的实现步骤 a.修改属性的可见性，设为private b.创建getter/setter方法，用于属性的读写 c.在getter/setter方法中加入属性控制语句，对属性值的合法性进行判断 二、Java中的包 包的作用： a. 管理Java文件 b. 解决同名文件冲突 定义包：package包名 注：必须放在Java源程序的第一行 包名间可以使用“.”号隔开 eg：com.fengche.MyClass 系统中的包 java.(功能).(类) java.lang.(类) 包含java语言及基础的类 java.util.(类) 包含java语言中各种工具类 java.io.(类) 包含输入、输出相关功能的类 包的使用 a. 可以通过import关键字，在某个文件使用其他文件中的类。import com.fengche.MyClass b. Java中，包的命名规范是全小写字母拼音 c. 使用的时候不但可以加载某个包下的所有文件eg：com.fengche.* 也可以加载某个具体子包下的所有文件 eg：com.fengche.music.* 三、Java中的访问修饰符 访问修饰符 本类 同包 子类 其他 private ✅ default ✅ ✅ protected ✅ ✅ ✅ public ✅ ✅ ✅ ✅ 四、Java中的this关键字 this关键字代表当前对象 this.属性 操作当前对象的属性 this.方法 调用当前对象的方法 封装对象的属性的时候，经常会使用this关键字 五、Java中的内部类 内部类(inner Class)就是定义在另外一个类里面的类。与之对应，包含内部类的类被称为外部类。 内部类的主要作用如下： 内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类 内部类的方法可以直接访问外部类的所有数据，包括私有的数据 内部类所实现的功能使用外部类同样可以实现，只是有时使用内部类更方便 内部类可分为以下几种： 成员内部类 静态内部类 方法内部类 匿名内部类 12345678910111213141516171819// 外部类HelloWorldpublic class HelloWorld &#123; // 内部类Inner，类Inner在类HelloWorld的内部 public class Inner &#123; // 内部类的方法 public void show() &#123; System.out.println("show"); &#125; &#125; public static void main(String[] args) &#123; // 创建外部类对象 HelloWorld hello = new HelloWorld(); // 创建内部类对象 Inner i = hello.new Inner(); // 调用内部类对象的方法 i.show(); &#125;&#125; 六、Java中的成员内部类内部类中最常见的就是成员内部类，也称为普通内部类。如： 12345678910111213141516171819// 外部类Outerpublic class Outer &#123; private int a = 1;// 外部类的私有属性 // 内部类Inner public class Inner &#123; int b = 2;// 内部类的成员属性 public void show() &#123; System.out.println("访问外部类中的a:" + a); System.out.println("访问内部类中的b:" + b); &#125; &#125; // 测试成员内部类 public static void main(String[] args) &#123; Outer o = new Outer();// 创建外部类对象，对象名为o Inner i = o.new Inner();// 使用外部类对象创建内部类对象 i.show();// 调用内部类对象的show方法 &#125; &#125; 从上面的代码中我们可以看到，成员内部类的使用方法： Inner类定义在Outer类的内部，相当于Outer类的一个成员变量的位置，Inner类可以使用任意访问控制符，如public、protected、private等 Inner类中定义的show()方法可以直接访问Outer类中的数据，而不受访问控制符的影响，如直接访问Outer类中的私有属性a 定义了成员内部类后，必须使用外部类对象来创建内部类对象，而不能直接去new一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类(); 编译上面的程序后，会发现产生了两个.class文件 Outer$Inner.class Outer.class其中，第二个是外部类的.class文件，第一个是内部类的.class文件，即成员内部类的.class文件总是这样：外部类名$内部类名.class 另外，注意： 外部类是不能直接使用内部类的成员的方法，可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用this关键字。如： 123456789101112// 外部类Outerpublic class Outer &#123; int b = 1;// 外部类中的成员属性a // 内部类Inner public class Inner &#123; int b = 2;// 内部类的成员属性 public void show() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类中的b:" + Outer.this.b); System.out.println("访问内部类中的b:" + b); &#125; &#125;&#125; 七、Java中的静态内部类静态内部类是static修饰的内部类，这种内部类的特点是： 静态内部类不能直接访问外部类的非静态成员，但可以通过new外部类().成员 的方式访问 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；如果外部类的静态成员与内部类的成员名称不相同，则可以通过“成员名”直接调用外部类的静态成员 创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名 = new 内部类(); 12345678910111213141516171819// 外部类SOuterpublic class SOuter &#123; private int a = 1;// 外部类的私有变量 static int b = 2;// 外部类的静态变量 // 静态内部类SInner public class SInner &#123; int b = 3;// 内部类的变量 public void show() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类中的b:" + SOuter.b); System.out.println("访问内部类中的b:" + b); &#125; &#125; // 测试静态内部类 public static void main(String[] args) &#123; SInner si = new SInner();// 直接创建内部类对象 si.show();// 调用show方法 &#125;&#125; 八、Java中的方法内部类方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。 123456789101112131415161718192021222324252627// 外部类MOuterpublic class MOuter &#123; // 外部类中的方法 public void show() &#123; final int a = 1;// 常量 int b = 2; // 方法内部类MInner class MInner &#123; int c = 3;// 内部类的变量 public void print() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类的方法中的常量中a:" + a); System.out.println("访问内部类中的变量c:" + c); &#125; &#125; MInner mi = new MInner();// 创建方法内部类的对象 mi.print();// 调用内部类的方法 &#125; // 测试方法内部类 public static void main(String[] args) &#123; MOuter mo = new MOuter();// 创建外部类对象 mo.show();// 调用外部类对象的show方法 &#125;&#125; 注意：由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和static修饰符。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之类与对象]]></title>
    <url>%2F2018%2F04%2F26%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[一、面向对象 对象的概念 什么是面向对象 类 什么是对象的属性 什么是对象的方法 类与对象的关系/区别 123456789101. 万物皆对象，客观存在的事物皆为对象2. 描述一个对象属性、功能的过程，叫做面向对象3. 类是模子，确定对象将会拥有的特征（属性）和行为（方法） 类的特点： （1）类是对象的类型 （2）具有相同属性和方法的一组对象的集合4. 属性——对象具有的各种特征 每个对象的每个属性都拥有特定值5. 方法——对象执行的操作6. 类是抽象的概念，仅仅是模板，比如说：“手机”；对象是一个你能够看得到、摸得着的具体实体 二、定义类 类的重要性：所有Java程序都以类class为组织单元 什么是类？类是模子，确定对象将会拥有的特征（属性）和行为（方法） 类的组成：属性和方法 定义一个类的步骤 定义类名 编写类的属性 编写类的方法 12345678910111213public class 类名 &#123; // 定义属性部分（成员变量） 属性1的类型 属性1; 属性2的类型 属性2; ... 属性n的类型 属性n; //定义方法部分 方法1; 方法2; ... 方法n;&#125; 三、如何使用Java中的对象使用对象的步骤： 创建对象 12// 类名 对象名 = new 类名();Telphone phone = new Telphone(); 使用对象 1234// 引用对象的属性：对象名.属性phone.screen = 5;// 给screen属性赋值5// 引用对象的方法：对象名.方法名()phone.sendMessage();// 调用sendMessage()方法 四、成员变量和局部变量 成员变量在类中定义，用来描述对象将要有什么 局部变量在类的方法中定义，在方法中临时保存数据；只能在当前方法中使用 成员变量和局部变量的区别 作用域不同 局部变量的作用域仅限于定义它的方法 成员变量的作用域在整个类内部都是可见的 初始值不同 Java会给成员变量一个初始值 Java不会给局部变量赋予初始值 在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量 两类变量同名时，局部变量具有更高的优先级 五、构造方法 使用new+构造方法 创建一个新的对象 构造方法是定义在Java类中的一个用来初始化对象的方法 构造方法与类同名且没有返回值 当没有指定构造方法时，系统会自动添加无参的构造方法 当有指定构造方法，无论是有参、无参的构造方法，都不会自动添加无参的构造方法 构造方法的重载：方法名相同，但参数不同的多个方法，调用时会自动根据不同的参数选择相应的方法 构造方法不但可以给对象的属性赋值，还可以保证给对象的属性赋一个合理的值 六、Java中的静态变量Java中被static修饰的成员称为静态成员或者类成员。它属于整个类所有，而不是某个对象所有，即被类的所有对象所共享。静态成员可以使用类名直接访问，也可以使用对象名进行访问。当然，鉴于他作用的特殊更推荐用类名访问~~ 12345678910111213public class HelloWorld &#123; // 定义静态变量 static String name = "JAVA"; public static void main(String[] args) &#123; // 使用类名访问静态变量 System.out.println(HelloWorld.name); // 使用对象名访问静态变量 HelloWorld hello = new HelloWorld(); System.out.println(hello.name); &#125;&#125; 七、Java中的静态方法与静态变量一样，我们也可以使用static修饰方法，称为静态方法或类方法。其实main方法就是静态方法。 123456789101112131415public class HelloWorld &#123; // 定义静态方法 public static void print() &#123; System.out.println("静态方法"); &#125; public static void main(String[] args) &#123; // 使用类名调用静态方法 HelloWorld.print(); // 使用对象名调用静态方法 HelloWorld hello = new HelloWorld(); hello.print(); &#125;&#125; 需要注意： 1.静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员。如：12345678910public class HelloWorld &#123; String name = "dhuang";// 非静态变量name static String hobby = "coding";// 静态变量hobby // 定义静态方法 public static void print() &#123; System.out.println(name);// 不能直接调用非静态变量 System.out.println(hobby);// 可以直接调用静态变量 &#125;&#125; 如果希望在静态方法中调用非静态变量，可以通过创建类的对象，然后通过对象来访问非静态变量。如：1234567// 在静态方法中调用非静态变量public static void print() &#123; // 创建类的对象 HelloWorld hello = new HelloWorld(); System.out.println(hello.name);// 通过对象来实现在静态方法中调用非静态变量 System.out.println(hobby);// 可以直接调用静态变量&#125; 2.在普通成员方法中，则可以直接访问同类的非静态变量和静态变量，如下所示：12345678String name = "dhuang";// 非静态变量namestatic String hobby = "coding";// 静态变量hobby// 普通成员方法可以直接访问非静态变量和静态变量public void show() &#123; System.out.println(name); System.out.println(hobby);&#125; 3.静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。如：123456789101112131415161718192021String name = "dhuang";// 非静态变量namestatic String hobby = "coding";// 静态变量hobby// 普通成员方法public void show() &#123; System.out.println(name); System.out.println(hobby);&#125;// 静态方法public static void print() &#123; System.out.println("静态方法");&#125;public static void main(String[] args) &#123; // 普通成员方法必须通过对象来调用 HelloWorld hello = new HelloWorld(); hello.show(); // 可以直接调用静态方法 print();&#125; 八、Java中静态初始化块Java中可以通过初始化块进行数据赋值。如：1234567public class HelloWorld &#123; String name;// 定义一个成员变量 // 通过初始化块为成员变量赋值 &#123; name = "dhuang"; &#125;&#125; 在类的声明中，可以包含多个初始化块，当创建类的实例时，就会一次执行这些代码块。如果使用static修饰初始化块，就称为静态初始化块。 需要特别注意：静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量。 1234567891011121314151617181920212223242526272829303132333435363738public class HelloWorld &#123; int num1;// 声明变量num1 int num2;// 声明变量num2 static int num3;// 声明静态变量num3 public HelloWorld() &#123;// 构造方法 num1 = 1; System.out.println("通过构造函数给普通成员变量赋值"); &#125; &#123;// 初始化块 num2 = 2; System.out.println("通过初始化块给普通成员变量赋值"); &#125; static &#123;// 静态初始化块 num3 = 3; System.out.println("通过静态初始化块给静态变量赋值"); &#125; public static void main(String[] args) &#123; HelloWorld hello = new HelloWorld(); System.out.println(hello.num1); System.out.println(hello.num2); System.out.println(num3); HelloWorld hello2 = new HelloWorld();// 再次创建类的对象 &#125; // 通过静态初始化块给静态变量赋值 // 通过初始化块给普通成员变量赋值 // 通过构造函数给普通成员变量赋值 // 1 // 2 // 3 // 通过初始化块给普通成员变量赋值 // 通过构造函数给普通成员变量赋值&#125; 通过输出结果，我们可以看到，程序运行时静态初始化块最先被执行，然后执行普通初始化块，最后才执行构造方法。由于静态初始化块只在类加载时执行一次，所以当再次创建对象hello2时并未执行静态初始化块。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[D3入门 - 坐标轴]]></title>
    <url>%2F2017%2F10%2F05%2FD3%E5%85%A5%E9%97%A8-%E5%9D%90%E6%A0%87%E8%BD%B4%2F</url>
    <content type="text"><![CDATA[坐标轴，是可视化图表中经常出现的一种图形，由一些列线段和刻度组成。坐标轴在 SVG 中是没有现成的图形元素的，需要用其他的元素组合构成。 定义坐标轴1234567891011// 数据var dataset = [2.5, 2.1, 1.7, 1.3, 0.9];// 定义比例尺var linear = d3.scale.linear() .domain([0, d3.max(dataset)]) .range([0, 250]);var axis = d3.svg.axis() .scale(linear)// 指定比例尺 .orient("bottom")// 指定刻度的方向 .ticks(7);// 指定刻度的数量 定义坐标轴，其中使用了线性比例尺 linear。其中： d3.svg.axis()：D3 中坐标轴的组件，能够在 SVG 中生成组成坐标轴的元素。 scale()：指定比例尺。 orient()：指定刻度的朝向，bottom 表示在坐标轴的下方显示。 ticks()：指定刻度的数量。 在 SVG 中添加坐标轴12svg.append("g") .call(axis); 在 D3 中，call() 的参数是一个函数。调用之后，将当前的选择集作为参数传递给此函数。也就是说，以下两段代码是相等的。1234567function foo(selection) &#123; selection .attr("name1", "value1") .attr("name2", "value2");&#125;foo(d3.selectAll("div")) 和1d3.selectAll("div").call(foo); 是相等的。 绘制效果]]></content>
      <categories>
        <category>D3</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>D3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[D3入门 - 制作简易图表]]></title>
    <url>%2F2017%2F10%2F05%2FD3%E5%85%A5%E9%97%A8-%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E5%9B%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[画布HTML 5 提供两种强有力的“画布”：SVG 和 Canvas。 SVGSVG，指可缩放矢量图形（Scalable Vector Graphics），是用于描述二维矢量图形的一种图形格式，是由万维网联盟制定的开放标准。SVG 使用 XML 格式来定义图形，除了 IE8 之前的版本外，绝大部分浏览器都支持 SVG，可将 SVG 文本直接嵌入 HTML 中显示。 SVG 有如下特点： SVG 绘制的是矢量图，因此对图像进行放大不会失真。 基于 XML，可以为每个元素添加 JavaScript 事件处理器。 每个图形均视为对象，更改对象的属性，图形也会改变。 不适合游戏应用。 CanvasCanvas 是通过 JavaScript 来绘制 2D 图形，是 HTML 5 中新增的元素。 Canvas 有如下特点： 绘制的是位图，图像放大后会失真。 不支持事件处理器。 能够以 .png 或 .jpg 格式保存图像 适合游戏应用 绘制矩形在 SVG 中，矩形的元素标签是 rect。矩形的属性，常用的有四个： x：矩形左上角的 x 坐标 y：矩形左上角的 y 坐标 width：矩形的宽度 height：矩形的高度 1234567891011121314151617var dataset = [250, 210, 170, 130, 90];var rectHeight = 25; // 每个矩形所占的像素高度(包括空白)svg.selectAll("rect")// 选择svg内所有的矩形 .data(dataset)// 绑定数组 .enter()// 指定选择集的enter部分， // 有数据，而没有足够图形元素的时候，使用此方法可以添加足够的元素 .append("rect")// 添加足够数量的矩形元素 .attr("x", 20) .attr("y", function(d, i) &#123; return i * rectHeight; &#125;) .attr("width", function(d) &#123; return d; &#125;) .attr("height", rectHeight - 2) .attr("fill", "steelblue");// 设置颜色 绘制效果]]></content>
      <categories>
        <category>D3</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>D3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSkata]]></title>
    <url>%2F2017%2F09%2F06%2FJSkata%2F</url>
    <content type="text"><![CDATA[组件编写step11234567891011121314var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;);&#125;); step2123456789101112131415161718192021222324252627282930var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); // var o = new Person(); var o = &#123;&#125;; o.__proto__ = &#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;; Person.call(o); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step3123456789101112131415161718192021222324252627282930313233var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); Person.prototype = &#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;; // var o = new Person(); var o = &#123;&#125;; o.__proto__ = Person.prototype; Person.call(o); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step41234567891011121314151617181920212223242526var should = require('should');var Class = function(options) &#123; var klass = function() &#123;&#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step5123456789101112131415161718192021222324252627282930313233343536373839404142434445var should = require('should');var Class = function(options) &#123; var klass = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;); it('要有构造函数', function() &#123; var Person = new Class(&#123; init: function(name) &#123; this.name = name; &#125;, show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person('dhuang'); o.name.should.eql('dhuang'); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step612345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879var should = require('should');var Class = function(options) &#123; var klass = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; klass.extends = function(options) &#123; var child = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; var F = function() &#123;&#125;; F.prototype = this.prototype; child.prototype = new F(); for (var method in options) &#123; child.prototype[method] = options[method]; &#125; child.prototype.super = this.prototype; return child; &#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;); it('要有构造函数', function() &#123; var Person = new Class(&#123; init: function(name) &#123; this.name = name; &#125;, show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person('dhuang'); o.name.should.eql('dhuang'); o.should.have.properties('show', 'sayHello'); &#125;); it('要有复用', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125; &#125;); var Customer = Person.extends(&#123; init: function(name) &#123; this.name = name; &#125;, sayHello: function() &#123;&#125; &#125;); var o = new Customer('dh'); o.name.should.eql('dh'); o.should.have.properties('show', 'sayHello'); &#125;);&#125;);]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F09%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
