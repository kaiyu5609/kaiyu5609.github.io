<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[axios之合并配置]]></title>
    <url>%2F2020%2F02%2F15%2Faxios%E4%B9%8B%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[合并配置的设计与实现需求分析axios 在发送请求的时候可以传入一个配置，来决定请求的不同行为。axios 有默认配置，定义一些默认的行为。在发送每个请求，用户传递的配置可以和默认配置做一层合并。 axios 对象的 defaults 属性，表示默认配置，你甚至可以直接修改这些默认配置： 123axios.defaults.headers.common['test'] = 123axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'axios.defaults.timeout = 2000 其中对于 headers 的默认配置支持 common 和一些请求 method 字段，common 表示对于任何类型的请求都要添加该属性，而 method 表示只有该类型请求方法才会添加对应的属性。 在上述例子中，我们会默认为所有请求的 header 添加 test 属性，会默认为 post 请求的 header 添加 Content-Type 属性。 默认配置默认配置定义接下来，我们先实现默认配置 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950const defaults = &#123; method: 'get', timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; &#125;&#125;const methodsNoData = ['delete', 'get', 'head', 'options']methodsNoData.forEach(method =&gt; &#123; defaults.headers[method] = &#123;&#125;&#125;)const methodsWithData = ['post', 'put', 'patch']methodsWithData.forEach(method =&gt; &#123; defaults.headers[method] = &#123; 'Content-Type': 'application/x-www-form-urlencoded' &#125;&#125;)console.log('defaults:', JSON.stringify(defaults, null, 2))// defaults: &#123;// "method": "get",// "timeout": 0,// "headers": &#123;// "common": &#123;// "Accept": "application/json, text/plain, */*"// &#125;,// "delete": &#123;&#125;,// "get": &#123;&#125;,// "head": &#123;&#125;,// "options": &#123;&#125;,// "post": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "put": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "patch": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;// &#125;// &#125; 我们定义了 defaults 常量，它包含默认请求的方法、超时时间，以及 headers 配置。 未来我们会根据新的需求添加更多的默认配置。 配置合并及策略定义了默认配置后，我们发送每个请求的时候需要把自定义配置和默认配置做合并，它并不是简单的 2 个普通对象的合并，对于不同的字段合并，会有不同的合并策略。举个例子： 12345678910111213141516171819202122232425262728293031323334353637config1 = &#123; method: 'get', timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; &#125;&#125;config2 = &#123; url: '/config/post', method: 'post', data: &#123; a: 1 &#125;, headers: &#123; test: '321' &#125;&#125;merged = &#123; url: '/config/post', method: 'post', data: &#123; a: 1 &#125;, timeout: 0, headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125; test: '321' &#125;&#125; 我们实现 mergeConfig 合并方法。 合并方法12345678910111213141516171819202122232425function mergeConfig(config1, config2) &#123; if (!config2) &#123; config2 = &#123;&#125; &#125; const config = Object.create(null) for (let key in config2) &#123; mergeField(key) &#125; for (let key in config1) &#123; if (!config2[key]) &#123; mergeField(key) &#125; &#125; function mergeField(key) &#123; const strat = strats[key] || defaultStrat config[key] = strat(config1[key], config2[key]) &#125; return config&#125; 合并方法的整体思路就是对 config1 和 config2 中的属性遍历，执行 mergeField 方法做合并，这里 config1 代表默认配置，config2 代表自定义配置。 在 mergeField 方法中，我们会针对不同的属性使用不同的合并策略。 默认合并策略这是大部分属性的合并策略，如下： 123function defaultStrat(val1, val2) &#123; return typeof val2 !== 'undefined' ? val2 : val1&#125; 它很简单，如果有 val2 则返回 val2，否则返回 val1，也就是如果自定义配置中定义了某个属性，就采用自定义的，否则就用默认配置。 只接受自定义配置合并策略对于一些属性如 url、params、data，合并策略如下： 12345678910111213function fromVal2Strat(val1, val2) &#123; if (typeof val2 !== 'undefined') &#123; return val2 &#125;&#125;const strats = &#123;&#125;const stratKeysFromVal2 = ['url', 'params', 'data']stratKeysFromVal2.forEach(key =&gt; &#123; strats[key] = fromVal2Strat&#125;) 因为对于 url、params、data 这些属性，默认配置显然是没有意义的，它们是和每个请求强相关的，所以我们只从自定义配置中获取。 复杂对象合并策略对于一些属性如 headers，合并策略如下： 1234567891011121314151617function deepMergeStrat(val1, val2) &#123; if (isPlainObject(val2)) &#123; return deepMerge(val1, val2) &#125; else if (typeof val2 !== 'undefined') &#123; return val2 &#125; else if (isPlainObject(val1)) &#123; return deepMerge(val1) &#125; else if (typeof val1 !== 'undefined') &#123; return val1 &#125;&#125;const stratKeysDeepMerge = ['headers']stratKeysDeepMerge.forEach(key =&gt; &#123; strats[key] = deepMergeStrat&#125;) deepMerge的实现： 12345678910111213141516171819202122function deepMerge(...objs) &#123; const result = Object.create(null) objs.forEach(obj =&gt; &#123; if (obj) &#123; Object.keys(obj).forEach(key =&gt; &#123; const val = obj[key] if (isPlainObject(val)) &#123; if (isPlainObject(result[key])) &#123; result[key] = deepMerge(result[key], val) &#125; else &#123; result[key] = deepMerge(&#123;&#125;, val) &#125; &#125; else &#123; result[key] = val &#125; &#125;) &#125; &#125;) return result&#125; isPlainObject： 1234toString = Object.prototype.toStringfunction isPlainObject(val) &#123; return toString.call(val) === '[object Object]'&#125; 对于 headers 这类的复杂对象属性，我们需要使用深拷贝的方式，同时也处理了其它一些情况，因为它们也可能是一个非对象的普通值。未来我们讲到认证授权的时候，auth 属性也是这个合并策略。 最后我们合并配置的逻辑： 123456789101112131415161718192021222324252627282930313233343536const config = mergeConfig(defaults, &#123; url: '/foo?name=bar', method: 'post', data: &#123; name: 'dhuang' &#125;&#125;)console.log('mergeConfig:', JSON.stringify(config, null, 2))// mergeConfig: &#123;// "url": "/foo?name=bar",// "method": "post",// "data": &#123;// "name": "dhuang"// &#125;,// "timeout": 0,// "headers": &#123;// "common": &#123;// "Accept": "application/json, text/plain, */*"// &#125;,// "delete": &#123;&#125;,// "get": &#123;&#125;,// "head": &#123;&#125;,// "options": &#123;&#125;,// "post": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "put": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;,// "patch": &#123;// "Content-Type": "application/x-www-form-urlencoded"// &#125;// &#125;// &#125; flatten headers经过合并后的配置中的 headers 是一个复杂对象，多了 common、post、get 等属性，而这些属性中的值才是我们要真正添加到请求 header 中的。 举个例子： 12345678headers: &#123; common: &#123; Accept: 'application/json, text/plain, */*' &#125;, post: &#123; 'Content-Type':'application/x-www-form-urlencoded' &#125;&#125; 我们需要把它压成一级的，如下： 1234headers: &#123; Accept: 'application/json, text/plain, */*', 'Content-Type':'application/x-www-form-urlencoded'&#125; 这里要注意的是，对于 common 中定义的 header 字段，我们都要提取，而对于 post、get 这类提取，需要和该次请求的方法对应。 接下来我们实现 flattenHeaders 方法。 1234567891011121314function flattenHeaders(headers, method) &#123; if (!headers) &#123; return headers &#125; headers = deepMerge(headers.common || &#123;&#125;, headers[method] || &#123;&#125;, headers) const methodsToDelete = ['delete', 'get', 'head', 'options', 'post', 'put', 'patch', 'common'] methodsToDelete.forEach(method =&gt; &#123; delete headers[method] &#125;) return headers&#125; 我们可以通过 deepMerge 的方式把 common、post 的属性拷贝到 headers 这一级，然后再把 common、post 这些属性删掉。 然后我们在真正发送请求前执行这个逻辑。 123456789101112131415161718function processConfig(config) &#123; config.headers = flattenHeaders(config.headers, config.method) console.log('flattenHeaders:', JSON.stringify(config, null, 2)) // flattenHeaders: &#123; // "url": "/foo?name=bar", // "method": "post", // "data": &#123; // "name": "dhuang" // &#125;, // "timeout": 0, // "headers": &#123; // "Accept": "application/json, text/plain, */*", // "Content-Type": "application/x-www-form-urlencoded" // &#125; // &#125;&#125; 这样确保我们了配置中的 headers 是可以正确添加到请求 header 中的 demo 编写略 至此，我们合并配置的逻辑就实现完了。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[axios之拦截器]]></title>
    <url>%2F2020%2F02%2F14%2Faxios%E4%B9%8B%E6%8B%A6%E6%88%AA%E5%99%A8%2F</url>
    <content type="text"><![CDATA[拦截器设计与实现需求分析我们希望能对请求的发送和响应做拦截，也就是在发送请求之前和接收到响应之后做一些额外逻辑。 我们希望设计的拦截器的使用方式如下： 12345678910111213141516// 添加一个请求拦截器axios.interceptors.request.use(function (config) &#123; // 在发送请求之前可以做一些事情 return config;&#125;, function (error) &#123; // 处理请求错误 return Promise.reject(error);&#125;);// 添加一个响应拦截器axios.interceptors.response.use(function (response) &#123; // 处理响应数据 return response;&#125;, function (error) &#123; // 处理响应错误 return Promise.reject(error);&#125;); 在 axios 对象上有一个 interceptors 对象属性，该属性又有 request 和 response 2 个属性，它们都有一个 use 方法，use 方法支持 2 个参数，第一个参数类似 Promise 的 resolve 函数，第二个参数类似 Promise 的 reject 函数。我们可以在 resolve 函数和 reject 函数中执行同步代码或者是异步代码逻辑。 并且我们是可以添加多个拦截器的，拦截器的执行顺序是链式依次执行的方式。对于 request 拦截器，后添加的拦截器会在请求前的过程中先执行；对于 response 拦截器，先添加的拦截器会在响应后先执行。 12345678axios.interceptors.request.use(config =&gt; &#123; config.params.name += '1' return config &#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '2' return config&#125;) 此外，我们也可以支持删除某个拦截器，如下： 12345let interceptorId = axios.interceptors.response.use(res =&gt; &#123; res.data.name += '2' return res&#125;)axios.interceptors.response.eject(interceptorId) 整体设计我们先用一张图来展示一下拦截器工作流程： 整个过程是一个链式调用的方式，并且每个拦截器都可以支持同步和异步处理，我们自然而然地就联想到使用 Promise 链的方式来实现整个调用过程。 在这个 Promise 链的执行过程中，请求拦截器 resolve 函数处理的是 config 对象，而响应拦截器 resolve 函数处理的是 response 对象。 在了解了拦截器工作流程后，我们先要创建一个拦截器管理类，允许我们去添加、删除和遍历拦截器。 拦截器管理类实现根据需求，axios 拥有一个 interceptors 对象属性，该属性又有 request 和 response 2 个属性，它们对外提供一个 use 方法来添加拦截器，我们可以把这俩属性看做是一个拦截器管理对象。use 方法支持 2 个参数，第一个是 resolve 函数，第二个是 reject 函数，对于 resolve 函数的参数，请求拦截器是 config 的，而响应拦截器是 response 的。 代码实现1234567891011121314151617181920212223242526272829class InterceptorManager &#123; constructor() &#123; this.interceptors = [] &#125; use(resolved, rejected) &#123; this.interceptors.push(&#123; resolved, rejected &#125;) return this.interceptors.length - 1 &#125; forEach(fn) &#123; this.interceptors.forEach(interceptor =&gt; &#123; if (interceptor !== null) &#123; fn(interceptor) &#125; &#125;) &#125; eject(id) &#123; if (this.interceptors[id]) &#123; this.interceptors[id] = null &#125; &#125;&#125; 我们定义了一个 InterceptorManager 类，内部维护了一个私有属性 interceptors，它是一个数组，用来存储拦截器。该类还对外提供了 3 个方法，其中 use 接口就是添加拦截器到 interceptors 中，并返回一个 id 用于删除；forEach 接口就是遍历 interceptors 用的，它支持传入一个函数，遍历过程中会调用该函数，并把每一个 interceptor 作为该函数的参数传入；eject 就是删除一个拦截器，通过传入拦截器的 id 删除。 链式调用实现 本小节需要你对 Promise 掌握和理解，可以前往 mdn 学习。 当我们实现好拦截器管理类，接下来就是在 Axios 中定义一个 interceptors 属性，它的类型如下： 12345678910export default class Axios &#123; constructor() &#123; this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager() &#125; &#125;&#125; Interceptors 类型拥有 2 个属性，一个请求拦截器管理类实例，一个是响应拦截器管理类实例。我们在实例化 Axios 类的时候，在它的构造器去初始化这个 interceptors 实例属性。 接下来，我们在 request 方法中添加拦截器链式调用的逻辑： 12345678910111213141516171819202122232425262728293031323334353637383940414243export default class Axios &#123; constructor() &#123; this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager() &#125; &#125; request(url, config) &#123; if (typeof url === 'string') &#123; if (!config) &#123; config = &#123;&#125; &#125; config.url = url &#125; else &#123; config = url &#125; const chain = [ &#123; resolved: dispatchRequest, rejected: undefined &#125; ] this.interceptors.request.forEach(interceptor =&gt; &#123; chain.unshift(interceptor) &#125;) this.interceptors.response.forEach(interceptor =&gt; &#123; chain.push(interceptor) &#125;) let promise = Promise.resolve(config) while (chain.length) &#123; const &#123; resolved, rejected &#125; = chain.shift() promise = promise.then(resolved, rejected) &#125; return promise &#125;&#125; 函数dispatchRequest中的伪代码如下： 1234567891011121314151617181920212223242526272829303132function dispatchRequest(config) &#123; console.log('requestConfig:', config) // &#123;"params":&#123;"name":"dhuang321"&#125;,"url":"/foo?name=bar"&#125; function xhr(config) &#123; return new Promise((resolve, reject) =&gt; &#123; const request = new XMLHttpRequest() const response = &#123; data: &#123; name: 'axios', desc: 'interceptor' &#125;, status: 200, statusText: '&#123;"name":"axios","desc":"interceptor"&#125;', config, request &#125; setTimeout(() =&gt; &#123; resolve(response) &#125;, 500) setTimeout(() =&gt; &#123; resolve(reject) &#125;, 1500) &#125;) &#125; return xhr(config)&#125; 首先，构造一个数组 chain，并把 dispatchRequest 函数赋值给 resolved 属性；接着先遍历请求拦截器插入到 chain 的前面；然后再遍历响应拦截器插入到 chain 后面。 接下来定义一个已经 resolve 的 promise，循环这个 chain，拿到每个拦截器对象，把它们的 resolved 函数和 rejected 函数添加到 promise.then 的参数中，这样就相当于通过 Promise 的链式调用方式，实现了拦截器一层层的链式调用的效果。 注意我们拦截器的执行顺序，对于请求拦截器，先执行后添加的，再执行先添加的；而对于响应拦截器，先执行先添加的，后执行后添加的。 demo 编写在 examples 目录下创建 interceptor 目录，在 interceptor 目录下创建 app.js 作为入口文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import Axios from './Axios'let axios = new Axios()axios.interceptors.request.use(config =&gt; &#123; config.params.name += '1' return config&#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '2' return config&#125;)axios.interceptors.request.use(config =&gt; &#123; config.params.name += '3' return config&#125;)axios.interceptors.response.use(res =&gt; &#123; res.data.name += '1' return res&#125;)let interceptorId = axios.interceptors.response.use(res =&gt; &#123; res.data.name += '2' return res&#125;)axios.interceptors.response.use(res =&gt; &#123; res.data.name += '3' return res&#125;)axios.interceptors.response.eject(interceptorId)axios.request('/foo?name=bar', &#123; params: &#123; name: 'dhuang' &#125;&#125;).then((res) =&gt; &#123; console.log('response:', res) // &#123; // "data": &#123; // "name": "axios13", // "desc": "interceptor" // &#125;, // "status": 200, // "statusText": "&#123;\"name\":\"axios\",\"desc\":\"interceptor\"&#125;", // "config": &#123; // "params": &#123; // "name": "dhuang321" // &#125;, // "url": "/foo?name=bar" // &#125;, // "request": &#123;&#125; // &#125;&#125;) 该 demo 我们添加了 3 个请求拦截器，添加了 3 个响应拦截器并删除了第二个。运行该 demo 我们通过浏览器访问，我们发送的请求配置中的config.params.name，它的值是 321；我们返回响应数据中的res.data.name，经过响应拦截器的处理，最终我们输出的数据是 axios13。 至此，我们简单实现了 axios 的拦截器功能，它是一个非常实用的功能，在实际工作中我们可以利用它做一些需求如登录权限认证。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TypeScript常用语法之泛型]]></title>
    <url>%2F2020%2F02%2F13%2FTypeScript%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%B3%9B%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[泛型软件工程中，我们不仅要创建定义良好且一致的 API，同时也要考虑可重用性。 组件不仅能够支持当前的数据类型，同时也能支持未来的数据类型，这在创建大型系统时为你提供了十分灵活的功能。 在像 C# 和 Java 这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。 基础示例下面来创建第一个使用泛型的例子：identity 函数。 这个函数会返回任何传入它的值。 你可以把这个函数当成是 echo 命令。 不用泛型的话，这个函数可能是下面这样： 123function identity(arg: number): number &#123; return arg&#125; 或者，我们使用 any 类型来定义函数： 123function identity(arg: any): any &#123; return arg&#125; 使用 any 类型会导致这个函数可以接收任何类型的 arg 参数，但是这样就丢失了一些信息：传入的类型与返回的类型应该是相同的。如果我们传入一个数字，我们只知道任何类型的值都有可能被返回。 因此，我们需要一种方法使返回值的类型与传入参数的类型是相同的。这里，我们使用了类型变量，它是一种特殊的变量，只用于表示类型而不是值。 123function identity&lt;T&gt;(arg: T): T &#123; return arg&#125; 我们给 identity 添加了类型变量 T。 T 帮助我们捕获用户传入的类型（比如：number），之后我们就可以使用这个类型。 之后我们再次使用了 T 当做返回值类型。现在我们可以知道参数类型与返回值类型是相同的了。这允许我们跟踪函数里使用的类型的信息。 我们把这个版本的 identity 函数叫做泛型，因为它可以适用于多个类型。 不同于使用 any，它不会丢失信息，像第一个例子那像保持准确性，传入数值类型并返回数值类型。 我们定义了泛型函数后，可以用两种方法使用。 第一种是，传入所有的参数，包含类型参数： 1let output = identity&lt;string&gt;('myString') 这里我们明确的指定了 T 是 string 类型，并做为一个参数传给函数，使用了 &lt;&gt; 括起来而不是 ()。 第二种方法更普遍。利用了类型推论 – 即编译器会根据传入的参数自动地帮助我们确定 T 的类型： 1let output = identity('myString') 注意我们没必要使用尖括号（&lt;&gt;）来明确地传入类型；编译器可以查看 myString 的值，然后把 T 设置为它的类型。 类型推论帮助我们保持代码精简和高可读性。如果编译器不能够自动地推断出类型的话，只能像上面那样明确的传入 T 的类型，在一些复杂的情况下，这是可能出现的。 使用泛型变量使用泛型创建像 identity 这样的泛型函数时，编译器要求你在函数体必须正确的使用这个通用的类型。 换句话说，你必须把这些参数当做是任意或所有类型。 看下之前 identity 例子： 123function identity&lt;T&gt;(arg: T): T &#123; return arg&#125; 如果我们想打印出 arg 的长度。 我们很可能会这样做： 1234function loggingIdentity&lt;T&gt;(arg: T): T &#123; console.log(arg.length) return arg&#125; 如果这么做，编译器会报错说我们使用了 arg 的 .length 属性，但是没有地方指明 arg 具有这个属性。记住，这些类型变量代表的是任意类型，所以使用这个函数的人可能传入的是个数字，而数字是没有 .length 属性的。 现在假设我们想操作 T 类型的数组而不直接是 T。由于我们操作的是数组，所以 .length 属性是应该存在的。我们可以像创建其它数组一样创建这个数组： 1234function loggingIdentity&lt;T&gt;(arg: T[]): T[] &#123; console.log(arg.length) return arg&#125; 你可以这样理解 loggingIdentity 的类型：泛型函数 loggingIdentity，接收类型参数 T 和参数 arg，它是个元素类型是 T 的数组，并返回元素类型是T 的数组。 如果我们传入数字数组，将返回一个数字数组，因为此时 T 的类型为 number。 这可以让我们把泛型变量 T 当做类型的一部分使用，而不是整个类型，增加了灵活性。 泛型类型上一节，我们创建了 identity 通用函数，可以适用于不同的类型。 在这节，我们研究一下函数本身的类型，以及如何创建泛型接口。 泛型函数的类型与非泛型函数的类型没什么不同，只是有一个类型参数在最前面，像函数声明一样： 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &lt;T&gt;(arg: T) =&gt; T = identity 我们也可以使用不同的泛型参数名，只要在数量上和使用方式上能对应上就可以。 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &lt;U&gt;(arg: U) =&gt; U = identity 我们还可以使用带有调用签名的对象字面量来定义泛型函数： 12345function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: &#123;&lt;T&gt;(arg: T): T&#125; = identity 这引导我们去写第一个泛型接口了。我们把上面例子里的对象字面量拿出来做为一个接口： 123456789interface GenericIdentityFn &#123; &lt;T&gt;(arg: T): T&#125;function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: GenericIdentityFn = identity 我们甚至可以把泛型参数当作整个接口的一个参数。 这样我们就能清楚的知道使用的具体是哪个泛型类型（比如： Dictionary&lt;string&gt; 而不只是Dictionary）。这样接口里的其它成员也能知道这个参数的类型了。 123456789interface GenericIdentityFn&lt;T&gt; &#123; (arg: T): T&#125;function identity&lt;T&gt;(arg: T): T &#123; return arg&#125;let myIdentity: GenericIdentityFn&lt;number&gt; = identity 注意，我们的示例做了少许改动。 不再描述泛型函数，而是把非泛型函数签名作为泛型类型一部分。 当我们使用 GenericIdentityFn 的时候，还得传入一个类型参数来指定泛型类型（这里是：number），锁定了之后代码里使用的类型。对于描述哪部分类型属于泛型部分来说，理解何时把参数放在调用签名里和何时放在接口上是很有帮助的。 除了泛型接口，我们还可以创建泛型类。 注意，无法创建泛型枚举和泛型命名空间。 泛型类泛型类看上去与泛型接口差不多。 泛型类使用（ &lt;&gt;）括起泛型类型，跟在类名后面。 12345678910class GenericNumber&lt;T&gt; &#123; zeroValue: T add: (x: T, y: T) =&gt; T&#125;let myGenericNumber = new GenericNumber&lt;number&gt;()myGenericNumber.zeroValue = 0myGenericNumber.add = function(x, y) &#123; return x + y &#125; GenericNumber 类的使用是十分直观的，并且你可能已经注意到了，没有什么去限制它只能使用 number 类型。 也可以使用字符串或其它更复杂的类型。 1234567let stringNumeric = new GenericNumber&lt;string&gt;()stringNumeric.zeroValue = ''stringNumeric.add = function(x, y) &#123; return x + y&#125;console.log(stringNumeric.add(stringNumeric.zeroValue, 'test')) 与接口一样，直接把泛型类型放在类后面，可以帮助我们确认类的所有属性都在使用相同的类型。 我们在类那节说过，类有两部分：静态部分和实例部分。 泛型类指的是实例部分的类型，所以类的静态属性不能使用这个泛型类型。 泛型约束我们有时候想操作某类型的一组值，并且我们知道这组值具有什么样的属性。在 loggingIdentity 例子中，我们想访问 arg 的 length 属性，但是编译器并不能证明每种类型都有 length 属性，所以就报错了。 1234function loggingIdentity&lt;T&gt;(arg: T): T &#123; console.log(arg.length) return arg&#125; 相比于操作 any 所有类型，我们想要限制函数去处理任意带有 .length 属性的所有类型。 只要传入的类型有这个属性，我们就允许，就是说至少包含这一属性。为此，我们需要列出对于 T 的约束要求。 我们定义一个接口来描述约束条件，创建一个包含 .length 属性的接口，使用这个接口和 extends 关键字来实现约束： 12345678interface Lengthwise &#123; length: number&#125;function loggingIdentity&lt;T extends Lengthwise&gt;(arg: T): T &#123; console.log(arg.length) // OK return arg&#125; 现在这个泛型函数被定义了约束，因此它不再是适用于任意类型： 1loggingIdentity(3); // Error 我们需要传入符合约束类型的值，必须包含必须的属性： 1loggingIdentity(&#123;length: 10, value: 3&#125;) // OK 在泛型约束中使用类型参数你可以声明一个类型参数，且它被另一个类型参数所约束。 比如，现在我们想要用属性名从对象里获取这个属性。 并且我们想要确保这个属性存在于对象 obj 上，因此我们需要在这两个类型之间使用约束。 12345678function getProperty&lt;T, K extends keyof T&gt; (obj: T, key: K ) &#123; return obj[key]&#125;let x = &#123;a: 1, b: 2, c: 3, d: 4&#125;getProperty(x, 'a') // okaygetProperty(x, 'm') // error]]></content>
      <categories>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTXT]]></title>
    <url>%2F2019%2F10%2F12%2F%E9%95%BF%E6%8A%95%E5%AD%A6%E5%A0%82%E4%B9%8B%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>CTXT</category>
      </categories>
      <tags>
        <tag>CTXT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之时间管理-简介]]></title>
    <url>%2F2019%2F08%2F27%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[一、什么是时间管理？ 精力管理、行动管理、更高效的工作、有更多的时间生活 选择适合的生活方式，并形成行之有效的时间管理系统，坚决执行 时间管理是“生活方式” 二、抓时间管理的理念 再多的钱也买不回时间 时间很有价值，但时间不值钱 每个人都有一样的时间 但时间价值不同 三、时间管理的本质 事件管理 做正确的事情，并正确的做事 自我管理 自控 &amp; 自律 自控就是控制自己在正确的时间做该做的事 自律就是克制自己不要在不正确的时间做不该做的事情 管理自己就是管理自己的时间，管理自己的生命；人生是一次旅程，我们既要到达旅途的终点，还要欣赏沿途的风光；也就是既要完成自己的人生使命，同时还要开心每一天；这个旅程很短，因此不妨大胆一些，去爱一个人，去攀一座山，去追一个梦，上天让我们来到这个世界上，就是为了让我们创造奇迹。 四、高效时间管理的终极秘诀1、道 道是高效时间管理的终极规律，包含四大规律： 价值观 目标 心理状态 持续改善 理清价值观、明确目标、调整心理状态和持续改善，悟道让我们解决传统时间管理的四大问题，拖延、犹豫不决、目标不明确和心情低落，让我们从根本上树立正确的时间管理观念 2、术 术是高效时间管理的终极方法，包含六大方法： FTF（要事第一） 四象限法 GTD（搞定一切） 番茄法 ABC 六点优先 全球最顶尖、最有效的时间管理方法，学会融会贯通、灵活运用 3、器 器是时间管理的终极工具，包含以下工具： 时间管理/效率手册 时间管理软件/APP 养成好习惯、成就好人生 附、NLP神经语言程序学 Neuro 身心素质，结构及比较一致的身心状态 Linguistic 沟通中所用的口语表达和非口语表达（肢体语言/身体反应） Programming 透过心智及语言重组人体大脑神经系统内的讯息，从而改变个人的行为，顺利达成目标 相关书籍： 世界第一催眠大师 艾瑞克森 高效能人士的七个习惯 激发无限潜能 晨间日记]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之表单处理]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E8%A1%A8%E5%8D%95%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[Angular的表单处理 模板式表单 表单的数据模型是通过组件模板中的相关指令来定义的，因为使用这种方式定义表单的数据模型时，我们会受限于HTML的语法，所以，模板驱动方式只适合用于一些简单的场景 响应式表单 使用响应式表单时，你通过编写TypeScript代码而不是HTML代码来创建一个底层的数据模型，在这个模型定义好以后，你使用一些特定的指令，将模板上的HTML元素与底层的数据模型连接在一起 表单验证 不管是哪种表单，都有一个对应的数据模型来存储表单的数据。在模板式表单中，数据模型是有Angular基于你组件模板中的指令隐式创建的。而在响应式表单中，你通过编码明确的创建数据模型然后将模板上的HTML元素与底层的数据模型连接在一起 数据模型并不是一个任意的对象，它是一个由angular/forms模块中的一些特定的类，如：FormControl、FormGroup、FormArray等组成的。在模板式表单中，你是不能直接访问到这些类的 响应式表单并不会替你生成HTML，模板仍然需要你自己来编写 不管你使用哪种表单，你都需要在app模块中引入相应模块，如果要使用模板式表单，则需要引入FormsModule，如果要使用响应式表单，则需要引入ReactiveFormsModule Angular模板式表单 模板式表单内容 NgForm NgModel NgModelGroup NgForm Angular会默认给form表单添加ngForm指令，如果我们写了ngNoForm指令，那么Angular将不再接管这个表单 ngForm指令可以被一个模板本地变量引用，以便在模板中访问ngForm的实例，如#myForm=&quot;ngForm&quot;12345678910111213&lt;form #myForm="ngForm" ngForm (ngSubmit)="createUser(myForm.value)"&gt; &lt;div&gt;昵称:&lt;input type="text" ngModel name="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号:&lt;input type="number" ngModel name="mobile"&gt;&lt;/div&gt; &lt;div ngModelGroup="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" ngModel name="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" ngModel name="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt;&lt;div&gt; &lt;!-- FormGroup form表单的数据模型 --&gt; &#123;&#123;myForm.value | json&#125;&#125;&lt;/div&gt; Angular响应式表单 响应式表单内容 FormGroup 绑定方式：[formGroup]（属性绑定） FormControl 绑定方式：formControlName FormArray 绑定方式：formArrayName 123456789101112131415161718192021222324252627282930313233343536373839import &#123; FormControl &#125; from '@angular/forms';@Component(&#123; selector: 'app-reactived-form', templateUrl: './reactived-form.component.html', styleUrls: ['./reactived-form.component.css']&#125;)export class ReactivedFormComponent implements OnInit &#123; private formModel: FormGroup; constructor() &#123; this.formModel = new FormGroup(&#123; nickname: new FormControl(), mobiles: new FormArray([ new FormControl() ]), passwordInfo: new FormGroup(&#123; password: new FormControl(), passwordConfirm: new FormControl() &#125;) &#125;); &#125; addMobile() &#123; let mobiles = this.formModel.get('mobiles') as FormArray;// 强转一下，强转成 `FormArray`，get方法取到的是 `AbstractControl` 抽象类 mobiles.push(new FormControl()); console.log(this.formModel.value); &#125; createUser() &#123; console.log(this.formModel); &#125; ngOnInit() &#123; &#125;&#125; 响应式表单模板的绑定，如下： 12345678910111213141516&lt;form [formGroup]="formModel" (ngSubmit)="createUser()"&gt; &lt;div&gt;昵称:&lt;input type="text" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号: &lt;ul formArrayName="mobiles"&gt; &lt;li *ngFor="let email of formModel.get('mobiles').controls; let i = index;"&gt; &lt;input [formControlName]="i"&gt; &lt;/li&gt; &lt;/ul&gt; &lt;button type="button" (click)="addMobile()"&gt;增加Mobile&lt;/button&gt; &lt;/div&gt; &lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; FormBuilder，简化响应式表单的定义 this.fb.group 相当于实例化一个 FormGroup this.fb.array 相当于实例化一个 FormArray [&#39;&#39;] 相当于实例化一个 FormControl，数组第一个值是表单输入框的默认值1234567891011121314private fb: FormBuilder = new FormBuilder();constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: this.fb.array([ [''] ]), passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; Angular表单校验 表单校验内容 Angular的校验器 校验响应式表单 校验模板式表单 Angular的校验器 预定义校验器 Validators.required Validators.minLength | maxLength Validators.pattern 123456789101112131415private fb: FormBuilder = new FormBuilder();constructor() &#123; this.formModel = this.fb.group(&#123; nickname: ['myname', Validators.required], // nickname: ['myname', [Validators.required, Validators.minLength(6)]],// 多个校验器 mobiles: this.fb.array([ [''] ]), passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; 我们定义好针对nickname属性的校验器以后，我们就可以通过formModel对象的valid来判断当前这个属性的值是否合法 12345678constructor() &#123; // ...&#125;createUser() &#123; let nicknameValid: boolean = this.formModel.get('nickname').valid; console.log('nickname是否校验通过：' + nicknameValid);&#125; 我们也可以通过formModel对象的errors来获取错误信息 12345678constructor() &#123; // ...&#125;createUser() &#123; let nicknameErrors: any = this.formModel.get('nickname').errors; console.log('nickname的校验信息：' + JSON.stringify(nicknameErrors));&#125; 自定义校验器（需要校验逻辑更复杂）来写一个校验手机号码的校验器 12345678910111213141516171819private fb: FormBuilder = new FormBuilder();mobileValidator(mobile: FormControl): any &#123; let value = (mobile.value || '') + ''; let reg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/; let valid = reg.test(value); return valid ? null : &#123; mobile: true &#125;;// 返回`null`表示校验通过&#125;constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: ['', this.mobileValidator],// 自定义手机号码校验器 passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;) &#125;);&#125; 为FormGroup定义一个校验器 12345678910111213141516171819202122232425passwordValidator(info: FormGroup): any &#123; let password: FormControl = info.get('password') as FormControl; let pConfirm: FormControl = info.get('passwordConfirm') as FormControl; let valid: boolean = password.value === pConfirm.value; return valid ? null : &#123; password: true &#125;;// 返回`null`表示校验通过&#125;constructor() &#123; this.formModel = this.fb.group(&#123; nickname: [''], mobiles: [''], passwordInfo: this.fb.group(&#123; password: [''], passwordConfirm: [''] &#125;, &#123; validator: this.passwordValidator// 自定义确认密码校验器，FormGroup添加的校验器稍微不一样 &#125;) &#125;);&#125;createUser() &#123; if (this.formModel.valid) &#123;// 整个表单合法 console.log(this.formModel.value); &#125;&#125; 当校验失败，你会希望显示错误信息给用户，则需要修改组件的模板 12345678910111213141516171819202122232425262728&lt;form [formGroup]="formModel" (ngSubmit)="createUser()"&gt; &lt;div&gt;昵称:&lt;input type="text" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt; &lt;div [hidden]="!formModel.hasError('minlength', 'nickname')"&gt; 名称的最小长度是6 &lt;/div&gt; &lt;div&gt;手机号: &lt;ul formArrayName="mobiles"&gt; &lt;li *ngFor="let email of formModel.get('mobiles').controls; let i = index;"&gt; &lt;input [formControlName]="i"&gt; &lt;/li&gt; &lt;/ul&gt; &lt;button type="button" (click)="addMobile()"&gt;增加Mobile&lt;/button&gt; &lt;/div&gt; &lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'passwordInfo.password')"&gt; 密码是必填项 &lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div [hidden]="!formModel.hasError('password', 'passwordInfo')"&gt; 密码不匹配 &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; 错误信息也可以由校验器提供 123456passwordValidator(info: FormGroup): any &#123; let password: FormControl = info.get('password') as FormControl; let pConfirm: FormControl = info.get('passwordConfirm') as FormControl; let valid: boolean = password.value === pConfirm.value; return valid ? null : &#123; password: &#123; description: '密码和确认密码不匹配' &#125; &#125;;&#125; 123&lt;div [hidden]="!formModel.hasError('password', 'passwordInfo')"&gt; &#123;&#123; formModel.getError('password', 'passwordInfo')?.description &#125;&#125;&lt;/div&gt; 异步校验器（它返回的是一个可观测的流Observable） 123456mobileAsyncValidator(mobile: FormControl): any &#123; let value = (mobile.value || '') + ''; let reg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/; let valid = reg.test(value); return Observable.of(valid ? null : &#123;mobile: true&#125;).delay(5000);&#125; Angular表单校验的状态字段 touched和untouched pristine（值改变的时候进行检验）和dirty pending（进行异步检验的时候） 123456789&lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" formControlName="password"&gt;&lt;/div&gt; &lt;div [hidden]="formModel.get('passwordInfo.password').valid || formModel.get('passwordInfo.password').untouched"&gt; &lt;div [hidden]="!formModel.hasError('required', 'passwordInfo.password')"&gt; 密码是必填项 &lt;/div&gt; &lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" formControlName="passwordConfirm"&gt;&lt;/div&gt;&lt;/div&gt; 给表单控件添加自定义错误样式名 123456&lt;div formGroupName="passwordInfo"&gt; &lt;div&gt;昵称:&lt;input type="text" [class.inputHasError]="formModel.get('nickname').invalid" formControlName="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div [hidden]="!formModel.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt;&lt;/div&gt; 校验模板式表单 将自定义校验器包装成指令 123456789101112// directives/mobile-validator.directive.tsimport &#123; Directive &#125; from '@angular/core';import &#123; NG_VALIDATORS &#125; from '@angular/forms';import &#123; mobileValidator &#125; from '../validators/Validators';// 检验器可以放置在全局的一个方法@Directive(&#123; selector: '[mobile]', providers: [&#123; provide: NG_VALIDATORS, useValue: mobileValidator, multi: true &#125;]&#125;)export class MobileValidatorDirective &#123; constructor() &#123;&#125;&#125; 123456789101112&lt;form #myForm="ngForm" ngForm (ngSubmit)="createUser(myForm.value, myForm.valid)" novalidate&gt; &lt;div&gt;昵称:&lt;input type="text" ngModel required name="nickname" pattern="[a-zA-Z0-9]+"&gt;&lt;/div&gt; &lt;div&gt;手机号:&lt;input type="number" ngModel mobile name="mobile"&gt;&lt;/div&gt; &lt;div [hidden]="!myForm.form.hasError('required', 'nickname')"&gt; 名称是必填项 &lt;/div&gt; &lt;div ngModelGroup="passwordInfo"&gt; &lt;div&gt;密码:&lt;input type="password" ngModel name="password"&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input type="password" ngModel name="passwordConfirm"&gt;&lt;/div&gt; &lt;/div&gt; &lt;button type="submit"&gt;注册&lt;/button&gt;&lt;/form&gt; 注：在模板表单中是不能使用状态字段的]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之组件间通讯]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E8%AE%AF%2F</url>
    <content type="text"><![CDATA[Angular组件间通讯 组件的输入输出属性 父子组件之间应该避免直接访问彼此的内部，而应该通过输入输出属性来通讯 组件可以通过输出属性发射自定义事件，这些事件可以携带任何你想携带的数据 使用中间人模式传递数据 在没有父子关系的组件之间，尽量使用中间人模式进行通讯 组件声明周期以及Angular的变化发现机制 父组件可以在运行时投影一个或多个模板片段到子组件中 每个Angular组件都提供了一组生命周期钩子，供你在某些特定的事件发生时执行相应的逻辑 Angular的变更检测机制会监控组件属性的变化并自动更新视图，这个检测非常频繁并且默认是针对整个组件树的，所以实现相关钩子时要慎重 你可以标记你的组件树种的一个分支，使其被排除在变更检测机制之外OnPush策略 Angular组件输入属性 @Input() 单向的传递 1234export class ProductComponent implements OnInit &#123; @Input() private keyword: string;&#125; Angular组件输出属性 @Output() 单向的传递 12345678910111213export class ProductComponent implements OnInit &#123; @Output() searchResult:EventEmitter&lt;Product&gt; = new EventEmitter(); constructor() &#123;&#125; ngOnInit() &#123; this.searchResult.emit(&#123; 'name': 'iPhone XR', 'price': '6499' &#125;); &#125;&#125; 12&lt;!-- 父组件中接收 --&gt;&lt;app-child-search (searchResult)="searchResultHandler(product)"&gt;&lt;/app-child-search&gt; 也可以给@Output()取个别名 12@Output('currProduct')searchResult:EventEmitter&lt;Product&gt; = new EventEmitter(); 12&lt;!-- 父组件中接收 --&gt;&lt;app-child-search (currProduct)="searchResultHandler(product)"&gt;&lt;/app-child-search&gt; Angular组件声明周期 组件初始化（依次执行的顺序，如下：） constructor ngOnChanges ngOnInit ngDoCheck ngAfterContentInit ngAfterContentChecked ngAfterViewInit ngAfterViewChecked 变化检测 ngOnChanges ngDoCheck ngAfterContentChecked ngAfterViewChecked 组件销毁 ngOnDestroy Angular组件的OnChanges钩子 在组件输入属性变化时，该方法被调用 这里需要理解，可变对象和不可变对象，基本数据类型是不可变的，复合数据类型是可变的 可变对象的属性发生变化时，该方法不会被调用 Angular组件的变更检测和DoCheck钩子 变更检测策略 default策略，不管变更发生在哪个组件上，zone.js都会检查整个组件树 OnPush策略，当某个组件设置的该策略，变更不会检查他的子组件 OnChanges钩子不能检测可变对象的属性发生变化，那又没有哪个钩子可以检查这种情况呢，它就是DoCheck钩子 该方法会频繁调用 一定要判断当前监控的属性和它上次的值是否变化，才去做你想做的事情 Angular组件的view钩子 怎样在父组件中调用子组件的api? 1234567&lt;!-- 这里是父组件的模板 --&gt;&lt;!-- 模板变量：#child --&gt;&lt;app-child #child&gt;&lt;/app-child&gt;&lt;!-- 不仅可以在组件控制器中调用子组件的方法，还可以在模板上调用 --&gt;&lt;button (click)="child.greeting('hello')"&gt;按钮&lt;/button&gt; 123456789101112131415// 父组件export class AppComponent implements OnInit &#123; @ViewChild('child') child: ChildCompoent; // 用`@ViewChild`装饰器可以获得子组件的引用，就可调用子组件的`api` constructor() &#123;&#125; ngOnInit(): void &#123; this.child.greeting('hello'); &#125;&#125; Angular组件的ngAfterViewInit钩子和ngAfterViewChecked钩子 这两个钩子是在组件的模板，所有的内容都被组装完成，即模板已呈现给用户看了之后，这两个方法被调用 当子组件视图初始化和变更检测完毕后，才到父组件的视图初始化和变更检测 ngAfterViewInit钩子只调用一次 ngAfterViewChecked钩子，在后续视图改变时，就会变调用 在这两个钩子中，都不能再更新组件中某个属性的值，会抛出异常，除非使用setTimeout Angular组件的ngContent指令，类似于angularJS的ng-transclude ngContent指令：投影 父组件中使用子组件，在子组件中写的内容（html标签），会真正映射到子组件模板中，带有&lt;ng-content&gt;&lt;/ng-content&gt;指令标记的位置 想投影多个内容，那就给html标签添加class类名，在子组件模板中，&lt;ng-content select=&quot;.box-1&quot;&gt;&lt;/ng-content&gt; Angular组件的ngAfterContentInit钩子和ngAfterContentChecked钩子 子组件在父组件投影进来的内容，初始化完成和变更检测完成才调用这两个方法 ngAfterContentInit钩子只调用一次 ngAfterContentChecked钩子，在投影改变时，就会变调用 Angular组件的ngDestory钩子 路由离开后，会被调用]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之响应式编程及管道]]></title>
    <url>%2F2018%2F10%2F28%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%8F%8A%E7%AE%A1%E9%81%93%2F</url>
    <content type="text"><![CDATA[Angular响应式编程 观察者模式与Rxjs 12345678910var subscription = Observable.from([1, 2, 3, 4]).filter((d) =&gt; d % 2 == 0).map((d) =&gt; d * d).subscribe( (d) =&gt; console.log(d), (e) =&gt; console.error(e), () =&gt; console.log('end'));subscription.unsubscribe(); 可观察对象Observable（流） 表示一组值或者事件的集合 观察者Observer 一个回调函数集合，它知道怎样去监听被Observable发送的值 订阅Subscription 表示一个可观察对象，主要用于取消注册 操作符Operators 纯碎的函数，使开发者可以以函数编程的方式处理集合 如：filter、map函数 如何使用响应式编程来做事件处理 之 节流处理 Observable FormControl 1&lt;input [formControl]="searchInput" /&gt; 123456789101112131415161718// `FormControl` 在 `@angular/forms` 模块中的 `ReactiveFormsModule`，需要在`主模块`的`imports`中导入import &#123; FormControl &#125; from '@angular/forms';import 'rxjs/Rx';@Component(&#123; &#125;)export class ProductManageComponent implements OnInit &#123; private searchInput: FormControl = new FormControl(); private keyword: string; constructor() &#123; this.searchInput.valueChanges .debounceTime(500)// 节流操作 .subscribe( keyword =&gt; this.keyword = keyword); &#125;&#125; Angular管道 date:&#39;yyyy-MM-dd HH:mm:ss&#39; number:&#39;2.1-4&#39;：最少保留1位小数，最多保留4位小数 自定义管道（结合formControl根据关键字过滤列表的数据） 命令：ng g pipe pipe/productFilter 123456789101112131415161718// 自定义管道需要在 `主模块`的 `declarations`中声明import &#123; Pipe, PipeTransform &#125; from '@angular/core';@Pipe(&#123; name: 'productFilter'&#125;)export class ProductFilterPipe implements PipeTransform &#123; transform(list: any[], field: string, keyword: string): any &#123; if (!field || !keyword) &#123; return list; &#125; return list.filter(item =&gt; &#123; let itemFieldValue = item[field].toLowerCase(); return itemFieldValue.indexOf(keyword) &gt;= 0; &#125;); &#125;&#125; 123456789&lt;!-- 根据input输入的值，保存到keyword中，然后通过管道productFilter， 以product.name与keyword匹配来进行过滤列表数据--&gt;&lt;input [formControl]="searchInput" /&gt;&lt;ul&gt; &lt;li *ngFor="let product of products | productFilter:'name':keyword; let i = index;"&gt;&lt;/li&gt;&lt;/ul&gt;]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之依赖注入]]></title>
    <url>%2F2018%2F10%2F20%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[Angular依赖注入 依赖注入内容 什么是依赖注入模式及使用依赖注入的好处 介绍Angular的依赖注入实现：注入器和提供器 注入器的层级关系 依赖注入 依赖注入：Dependency Injection，简称DI 一个对象a:A需要依赖另外一个类型为B的对象b，那么对象a不需要明确地实例化对象b，b会由外部机制注入进来，对象a只要声明我需要B类型的对象，有人能给我一个么，这就是依赖注入需要解决的问题 与依赖注入经常同时出现的另一个概念叫做控制反转 控制反转：Inversion of Control，简称IOC 控制反转是指将依赖的控制权从代码的内部转到代码的外部 假如我们这样编写代码 123456var product = new Product();// 这句话，决定我们的代码需要依赖Product类createShipment(product);// 如果有一天我们需要依赖的不是Product了，而是AnotherProduct；那么我们需要修改代码的内部，变成如下：var product = new AnotherProduct();createShipment(product); 而如果实现了控制反转，则内部代码只需要声明我需要product，至于传进来的是Product，还是AnotherProduct，是由代码的外部决定的，这时代码的控制权由代码的内部转到了外部 依赖注入和控制反转表达的是一个思想，控制反转侧重于描述目的，目的是将依赖的控制权从代码的内容转到代码的外部；而依赖注入侧重于描述手段，就是如何来实现控制反转，使用的手段叫依赖注入 实现了控制反转的框架被称为IOC容器，Angular框架就是一个IOC容器，Angular实现控制反转的手段就是依赖注入 依赖注入的好处 松耦合（消除组件跟服务的紧耦合关系，通过依赖注入可以让组件依赖不同的服务，并且任意更换，这使得组件可以高度复用） 提高可测试性（假如项目的开发是前后端分离，前端不需要依赖后端服务的开发，可以先直接Mock一个服务来调试，等后端服务真正做好后，再进行联调，使服务可以随意切换） 注入器和提供器 注入器 1constructor(private productService: ProductService) &#123; &#125; 提供器 123456// 简写providers: [ProductService]// 或者providers: [&#123; provide: ProductService, useClass: ProductService &#125;]// 或者 通过工厂方法providers: [&#123; provide: ProductService, useFactory: () =&gt; &#123; &#125; &#125;]]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之路由]]></title>
    <url>%2F2018%2F10%2F14%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E8%B7%AF%E7%94%B1%2F</url>
    <content type="text"><![CDATA[Angular路由的基础知识 路由内容 基本用法 子路由、保护路由和辅助路由 名称 简介 Routes 路由配置，保存着哪个URL对应展示哪个组件，以及在哪个RouteOutlet中展示组件 RouterOutlet 在html中标记路由内容呈现位置的占位符指令 Router 负责在运行时执行路由的对象，可以通过调用其navigate()和navigateByUrl()方法来导航到一个指定的路由 RouterLink 在html中声明路由导航用的指令 ActivatedRoute 当前激活的路由对象，保存着当前路由的信息，如路由地址，路由参数等 路由信息的配置文件（app-routing.module.ts） 1234567891011121314151617import &#123; NgModule &#125; from '@angular/core';import &#123; RouterModule, Routes &#125; from '@angular/router';import &#123; HomeComponent &#125; from './home/home.component';import &#123; DetailComponent &#125; from './detail/detail.component';import &#123; Code404Component &#125; from './code404/code404.component';const routes: Routes = [&#123; path: '', component: HomeComponent,// path 不要用'/'开头 path: 'detail', component: DetailComponent, path: '**', component: Code404Component,// 404页面路由&#125;];@NgModule(&#123; imports: [RouterModule.forRoot(routes)], exports: [RouterModule]&#125;)export class AppRoutingModule &#123; &#125; 模板（app-component.html） 1234&lt;a [routerLink]="['/']"&gt;主页&lt;/a&gt;&lt;a [routerLink]="['/detail']"&gt;详情页&lt;/a&gt;&lt;input type="button" value="详情页" (click)="toDetail()"&gt;&lt;router-outlet&gt;&lt;/router-outlet&gt; 使用 Router 在组件中进行路由导航（app.component.ts） 123456789101112131415import &#123; Component &#125; from '@angular/core';import &#123; Router &#125; from '@angular/router';@Component(&#123; selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css']&#125;)export class AppComponent &#123; constructor(private router: Router) &#123; &#125; toDetail() &#123; this.router.navigate(['/detail']); &#125;&#125; Angular在路由时传递数据 在查询参数中传递数据 1234&lt;!-- 通过 ? 传递 queryParams --&gt;&lt;a [routerLink]="['/detail?id=1&amp;name=2']"&gt;详情页&lt;/a&gt;&lt;!-- 或者 --&gt;&lt;a [routerLink]="['/detail']" [queryParams]="&#123;id:1,name:2&#125;"&gt;详情页&lt;/a&gt; 1234567891011121314// 在路由的目标组件中，通过以下方式获取export class DetailComponent implements OnInit &#123; private id: number; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; // 快捷获取：snapshot方式（参数快照），即组件初始化时，id只赋值一次 this.id = this.routeInfo.snapshot.queryParams['id']; // 或者对参数进行订阅，在同一个组件中（DetailComponent）中切换参数时就得用订阅的方式 this.routeInfo.queryParams.subscribe((queryParams: QueryParams) =&gt; &#123; this.id = queryParams['id']; &#125;); &#125;&#125; 在路由路径中传递数据 1&lt;a [routerLink]="['/detail', 1]"&gt;详情页&lt;/a&gt; 12// routes&#123; path: 'detail/:id' &#125; // /detail/1 1234567891011121314// 在路由的目标组件中，通过以下方式获取export class DetailComponent implements OnInit &#123; private id: number; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; // 快捷获取：snapshot方式（参数快照），即组件初始化时，id只赋值一次 this.id = this.routeInfo.snapshot.params['id']; // 或者对参数进行订阅，在同一个组件中（DetailComponent）中切换参数时就得用订阅的方式 this.routeInfo.params.subscribe((params: Params) =&gt; &#123; this.id = params['id']; &#125;); &#125;&#125; 在路由配置中传递数据 123// routes&#123; path: 'detail', component: DetailComponent, data: [&#123; isProd: true &#125;] &#125; // data 属性本身是一个数组，在数组中可以定义任意个对象，isProd: 是否是生产环境 12345678// 在路由的目标组件中，通过data的下标和属性名方式获取export class DetailComponent implements OnInit &#123; private isProd: boolean; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; this.isProd = this.routeInfo.snapshot.data[0]['isProd']; &#125;&#125; Angular重定向路由 在用户访问一个特定的地址时，将其重定向到另一个指定的地址。 即：我们想通过localhost:4200来重定向到localhost:4200/home1234const routes: Routes = [&#123; path: '', redirectTo: '/home', pathMatch: 'full',// pathMatch: 'full' || 'prefix', 精准匹配 || 前缀匹配 path: 'home', component: HomeComponent,&#125;]; Angular子路由 略 &#39;./&#39; children Angular辅助路由 需要声明路由插座的名称 primary为主路由，aux为辅助路由 1234&lt;a [routerLink]="[&#123;outlets: &#123;primary: 'home', aux: 'consult'&#125;&#125;]"&gt;详情页&lt;/a&gt;&lt;a [routerLink]="[&#123;outlets: &#123;aux: null&#125;&#125;]"&gt;详情页&lt;/a&gt;&lt;router-outlet name="aux"&gt;&lt;/router-outlet&gt; 12// routes 规定这个组件只能在名为“aux”的路由插座中显示&#123; path: 'consult', component: ConsultComponent, outlet: 'aux' &#125; Angular路由守卫 CanActivate：处理导航到某路由的情况。 CanDeactivate：处理从当前路由离开的情况。 Resolve：在路由激活之前获取路由数据。 CanActivate PermissionGuard组件（permission.guard.ts） 12345678910111213import &#123; CanActivate &#125; from '@angular/router';export class PermissionGuard implement CanActivate &#123; canActivate() &#123;// 该方法需要返回一个布尔值 var hasPermission: boolean = Math.random() &lt; 0.5; if (!hasPermission) &#123; console.log('用户无权访问此页面'); &#125; return hasPermission; &#125;&#125; 路由信息的配置文件（app-routing.module.ts） 1234const routes: Routes = [&#123; // 不过需要有人帮我们实例化这个PermissionGuard组件 path: 'detail', component: DetailComponent, canActivate: [PermissionGuard]&#125;]; Angular主模块（app.module.ts） 12345@NgModule(&#123; ..., providers: [PermissionGuard],// 实例化组件 ...&#125;); CanDeactivate FocusGuard组件（focus.guard.ts）123456789101112import &#123; CanDeactivate &#125; from '@angular/router';export class FocusGuard implement CanDeactivate&lt;DetailComponent&gt; &#123; // 不同的是这里会注入当前的组件，获取组件的状态，然后判断离开时需要做的事情 canDeactivate(component: DetailComponent) &#123;// 该方法需要返回一个布尔值 if (component.isFocus()) &#123;// DetailComponent的某个方法 return true; &#125; else &#123; return window.confirm("不关注就离开吗？"); &#125; &#125;&#125; Resolve 有时候我们会先异步去请求后端服务的数据，等响应之后再将数据绑定到页面上，则需要用到该功能；不然页面可能会报错，找不到某某对象的属性，如：Detail的id和name。 DetailResolve组件（detail.resolve.ts） 1234567891011121314151617181920212223import &#123; Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot &#125; from '@angular/router';import &#123; Detail &#125; from '../detail/detail.component';import &#123; Observable &#125; from 'rxjs';import &#123; Injectable &#125; from '@angular/core';@Injectable()export class DetailResolve implement Resolve&lt;Detail&gt; &#123; constructor(private router: Router) &#123; &#125; resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Detail | Observable&lt;Detail&gt; | Promise&lt;Detail&gt; &#123; // ActivatedRouteSnapshot相当于上文的 this.routeInfo.snapshot let id = route.params['id']; if (id == 1) &#123; return new Detail(1, 'Angular'); &#125; else &#123; this.router.navigate(['/home']); return; &#125; &#125;&#125; 路由信息的配置文件（app-routing.module.ts） 123456const routes: Routes = [&#123; // 需要在`@NgModule`的`providers`中实例化这个DetailResolve组件 path: 'detail', component: DetailComponent, resolve: &#123; detail: DetailResolve &#125;&#125;]; DetailComponent (detail.component.ts） 123456789export class DetailComponent implements OnInit &#123; private detail: Detail; constructor(private routeInfo: ActivatedRoute) &#123; &#125; ngOnInit() &#123; this.routeInfo.data.subscribe((data: &#123;detail: Detail&#125;) =&gt; &#123; this.detail = data.detail; &#125;); &#125;&#125; Angular路由的实战 可一看]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Angular入门之简介]]></title>
    <url>%2F2018%2F09%2F22%2FAngular%E5%85%A5%E9%97%A8%E4%B9%8B%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[angularJS的优点 模板功能强大丰富 比较完善的前端MVC框架 引入了Java的一些概念 angularJS的一些问题，和Angular之间的对比 性能 双向数据绑定是一把双刃剑，随着组件的增加，项目越来越复杂，双向数据绑定会带来性能问题 脏检查机制，通过跟踪数据的改变来动态的更新用户的界面，随着绑定的增加，性能就会越来越低 在Angular中，这个做法被废弃掉了，首先数据绑定默认不再是双向数据绑定了，而是单向数据绑定，其次整个检查机制被完全重写，整体性能得到很大的提升 路由（非常简单的路由功能） ng-route中的ng-view指令只能有一个，不能嵌套多个视图 第三方模块ui-router也不是很灵活 在Angular中，路由作为核心模块之一，对其进行了很大的提升，可以说很强大 作用域 angularJS的作用域把它的执行环境和浏览器的环境隔离开，所有原生事件都不能影响它的作用域，都必须用带有ng开头的指令来交互，如果你想用原生事件，就必须调用$scope.$apply来告诉angularJS我的数据已经有更新了，你帮我同步去更新一些UI吧！ 这个问题，在Angular中也被解决掉了，$scope这个东西在Angular中不复存在，任何原生的事件都可以直接被响应及处理 表单验证 在angularJS中，显示表单验证的错误信息提示是比较薄弱的 在Angular中提供了全新的模板API，尤其是响应式表单，可以帮助我们实现功能复杂的校验，并且显示错误信息 Javascript语言 在Angular中使用typescript来开发，它是ES6规范的一个超集，带有完善的类型系统，这使得我们可以在编译阶段解决部分bug，从而使运行时的bug减少，还可以在IDE中获得更好的代码提示，及更快的性能 学习成本 学习angularJS成本高，需要掌握很多概念，包括模块、控制器、指令、作用域、模板、数据绑定、过滤器、依赖注入等等，你很难一下子说出它的核心到底是什么 而Angular的核心就是组件，剩下所有的东西，都是为组件服务的 Angular新特性 全新的命令行工具AngularCLI，它提供了很多方便的功能来帮我们进行开发，比如： 生成一个新项目的骨架 生成组件需要的基础代码 作为开发服务器，供我们调试、编译、构建并且部署我们的代码 运行自动化的单元测试 服务器端渲染 它可以使一个原本需要10s才能加载完的单页应用在1s之内呈现在用户面前 它可以使一个单页应用针对每一个视图去做SEO（搜索引擎优化），对单页应用它只有一个页面，所以要做SEO是一个很麻烦的事情，服务器端的渲染可以是这个效果大大的提升 移动和桌面兼容 Angular中对移动的支持提升到新的高度，借助Ionic、NativeScript结合Angular可以很容易的创建出跨平台的手机应用 Angular还提供一个官方的UI库，叫做Angular Material，提供移动应用和桌面应用通用UI组件 angularJS的架构 Angular的架构 模块：用来将应用中不同的部分组织成一个Angular框架可以理解的单元 组件：是Angular应用的基本构建快，你可以把一个组件理解为一段带有业务逻辑和数据的HTML 指令：允许你向HTML元素添加自定义行为 服务：用来封装可重用的业务逻辑 Angular的组件 与React对比 速度快（虚拟DOM）；只有在调用setState方法时，去更新DOM，而且还是先更新虚拟DOM，然后和实际的DOM比较，再更新实际的DOM，比起angularJS的绑定来说，更新DOM的次数少，且更新DOM的内容少 FLUX架构（Redux） 服务器渲染 与Vue对比 简单 只需一个.vue文件 灵活 vue-cli 性能 库很小 个人主导 只关注web 服务器渲染 依靠第三方 Angular 继承angularJS 吸收React]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端开源项目那些事]]></title>
    <url>%2F2018%2F06%2F22%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E9%82%A3%E4%BA%9B%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[一、开源包含了什么 源码 文档，如二次开发文档和用户使用文档 开发环境，告诉二次开发者如何搭建和运行代码 允许他人贡献代码，而不是仅仅给别人阅读源码的权限 问题，用户提问，维护者答复，问题共享（而不是私聊） 问题列表和升级计划，记录当前问题，以及何时解决、何时升级 二、为何做开源？ 全面提高编程能力 你需要从0打造，每部分代码都需要自己负责，不像在公司中的一颗螺丝钉 提高自己的社区知名度 github上的star能间接的反映你的身价，它能让你得到业内认可。业内同行认可了，做啥事儿都好做，如内推工作。 锻炼自己的产品意识 因为做开源做的是产品，不再是单纯的技术活，UI、运维、推广、收集反馈、甚至成本预算，你都得考虑。 技术范儿、极客精神 作为一名程序猿，能业余打造一款开源产品是一件很帅的事情，满足自己的虚荣心。 三、做开源的一些期望 要快速做出第一版，至少能用。后面再慢慢迭代升级。 要能方便的推广使用，最好是0成本使用。 即做出来，推出去，要快。即，你做的快，别人用的也快。 四、不做什么 大型的框架，如做一个UI框架。短期做不完，使用成本高 模拟成熟轮子，如再造一个jQuery。有成熟方案，用户不会换 小众的东西。基本没人用 没有特色，100%的模仿。用户没有更换的理由 五、做什么 小而精的工具。开发快，使用成本低。 要有特色，哪怕是一个。要和别人不一样，差异化竞争。 一定要大众，50%以上的开发人员都会用到 避开已经被成熟产品垄断的领域。你就不要去跟jQuery vue React竞争了。 六、搭建开发环境初始化进入项目目录，然后命令行运行npm init，按照提示进行初始化即可。初始化完成后，项目根目录下会有package.json的文件。 规范版本号打开package.json文件，将版本号定义为&quot;version&quot;: &quot;0.0.1&quot;。以后我们每次正式提交代码，版本号都不一样。版本号分三级，分别为： 一级，重构版本 二级，重大功能改进 三级，小升级或者bug修复 为何从0.0.1开始？因为0.x.x可以认为是非正式版本、测试版，而从1.x.x开始，就是正式发布的版本了。 1234567891011121314151617&#123; ... "main": "./bin/kaiyu.js", "bin": &#123; "kaiyu": "./bin/kaiyu.js" &#125;, "repository": &#123; "type": "git", "url": "git+https://github.com/kaiyu5609/kaiyu-cli.git" &#125;, "author": "https://github.com/kaiyu5609/kaiyu-cli", "bugs": &#123; "url": "https://github.com/kaiyu5609/kaiyu-cli/issues" &#125;, "homepage": "https://github.com/kaiyu5609/kaiyu-cli#readme", ...&#125; 规范一级目录项目的一级目录要提前规范好，最起码一些常用的目录要提前订好留用，不能乱来。例如： src - 源代码 release - 发布结果 test - 单元测试用例 doc - 文档 example - 实例 构建工具webpack 安装插件npm i babel-core babel-loader babel-polyfill babel-preset-es2015 babel-preset-latest webpack webpack-cli --save-dev。 项目根目录下创建.babelrc文件，内容如： 1234&#123; "presets": ["es2015", "latest"], "plugins": []&#125; 项目根目录下创建webpack.config.js文件，内容如： 1234567891011121314module.exports = &#123; entry: './src/index.js', output: &#123; path: __dirname, filename: './release/bundle.js' &#125;, module: &#123; rules: [&#123; test: /\.js?$/, exclude: /(node_modules)/, loader: 'babel-loader' &#125;] &#125;&#125; 最后，修改package.json中的scripts，增加&quot;release&quot;: &quot;webpack&quot;。然后命令行运行npm run release，就可生成release内容。 简单的测试 在example文件夹中新建index.html，引入打包后的release下的bundle.js文件。 在package.json中的scripts，新增&quot;example&quot;: &quot;http-server -p 8880&quot;（注：先用npm安装http-server）。 然后命令运行npm run example。 浏览器访问http://localhost:8880/example/index.html。 规范git分支至少要存在两个分支，master和dev，dev是开发中的代码。当然，你可以规范更多的分支，例如next fix-bug等，但是要注意一个原则 —— 用不到的就先不要规划。 完善README.mdREADME.md是开源项目的一张脸，用户的第一印象。必须包含以下内容： 产品简介（此处要突出特点，打差异化竞争） 产品安装和下载 快速使用（详细的使用文档或者二次开发文档，外链即可） 交流提问区 关于作者（放你博客链接，和收款二维码） 七、提交代码写文档 &amp; 写测试用例注意，文档和测试用例对于一个开源产品来说非常重要！非常重要！非常重要！而且，文档和测试用例本身就是代码不可分割的一部分。 在写文档之前，还需要准备其他的工具。定位到项目目录下，npm i gitbook-cli -g安装gitbook，然后创建SUMMARY.md，内容如下：12345678# Summary* [项目介绍](README.md)* [使用文档](doc/use/README.md) * [使用1](doc/use/use1.md) * [使用2](doc/use/use1.md)* [二次开发](doc/dev/README.md) * [开发1](doc/dev/dev1.md) * [开发2](dov/dev/dev2.md) 运行gitbook init，会看到各个文件都被创建了，就可以完善各个文档的内容。内容完成之后，运行gitbook build可以将md文件发布为html文件，默认放在_book文件夹。启动了npm run example之后，可以访问http://localhost:8880/_book/查看效果。或者运行gitbook serve --port 8880之后，可以访问http://localhost:8880 最后，再次修改一下README.md，把文档的链接加上12[如何使用](./doc/use/README.md)[二次开发](./doc/dev/README.md) 提交第一版代码首先，修改一下.gitignore文件，加上一行_book，把打包出来的文件忽略掉。然后用之前的方式提交到github的master分支。123git add .git commit -m &apos;v0.0.1 初次提交&apos;git push origin master 接下来，创建tag并提交，代码如下：12git tag -a &apos;v0.0.1&apos; -m &apos;第一版本&apos;git push origin v0.0.1 提交之后，下载地址就有了，https://github.com/kaiyu5609/kaiyu-cli/releases这里可以下载到各个版本的源码。 最后要提交到npm上，能让使用者通过npm进行安装。首先，运行npm add user和npm login来登录，根据提示将你之前注册npm时的账号、密码、邮箱写上就行了，然后，在项目的根目录运行npm publish .，此时问题来了！！！CDN: http://unpkg.com/kaiyu-cli/release/bundle.js 运行之后可能会报了403错误，这种可能是重名导致的。 升级代码并提交在代码开发阶段的步骤总结如下： 来一个dev分支，不要在master分支开发 修改package.json版本号，按照之前既定的版本股则修改，不能乱改 修改代码、文档和测试用例 自测 将dev分支提交到远程 代码开发完成之后，提交的流程如下： 再次确认版本号，因为版本号非常重要 将dev合并到master，并提交master到远程 创建tag并提交到远程 提交到npm 切换到dev分支：123456789git branchgit checkout -b devgit add .git commit -m &quot;v0.0.2&quot;git push origin dev 将dev合并到master分支合并12345git checkout mastergit merge devgit push origin master 八、合并Pull Requests 检查别人提交的代码，如果要合并，则点击Merge pull request，接收别人贡献的代码 然后在本地拉取远程的代码git pull origin master，更新最新的代码]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL入门之基础数据管理与常用函数]]></title>
    <url>%2F2018%2F06%2F10%2FMySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[一、MySQL入门之基础数据管理与常用函数]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之未雨绸缪]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E6%9C%AA%E9%9B%A8%E7%BB%B8%E7%BC%AA%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之说话脉络]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E8%AF%B4%E8%AF%9D%E8%84%89%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之关键词]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E5%85%B3%E9%94%AE%E8%AF%8D%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之理清思路]]></title>
    <url>%2F2018%2F05%2F28%2F%E5%88%99%E4%BF%AE%E4%B9%8B%E7%90%86%E6%B8%85%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[则修之M3]]></title>
    <url>%2F2018%2F05%2F28%2F%E5%88%99%E4%BF%AE%E4%B9%8BM3%2F</url>
    <content type="text"><![CDATA[请输入密码进行浏览。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>则修</category>
      </categories>
      <tags>
        <tag>则修</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL入门之初识数据库操作]]></title>
    <url>%2F2018%2F05%2F22%2FMySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%88%9D%E8%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一、MySQL基础之数据类型与表的管理 什么是数据库？ 数据库 Database 是按照数据结构来组织、存储和管理数据的仓库 常见的数据库 Oracle DB2 SQL Server Postgre SQL MySQL 相关术语 数据库系统：DBS（Database System） 包括数据库：DB（Database） 数据库管理系统：DBMS（Database Management System） 应用开发工具 管理员及用户 SQL语言：Structured Query Language 结构化查询语言，包括 数据定义语言：DDL 数据操作语言：DML 数据查询语言：DQL 数据控制语言：DCL MySQL相关操作 登录/退出MySQL 配置文件 my.cnf是MySQL的配置文件 登录MySQL mysql -uroot -p mysql -uroot -proot（密码为root） 查看MySQL版本 mysql -V mysql --version 登录的同时打开指定数据库 mysql -uroot -p -D db_name 退出MySQL exit quit 登录信息中需要掌握的 命令行结束符默认使用;或者\g来结束 可以通过help或者\h或者?加上相关关键字来查看手册 \c可以取消当前命令的执行 SQL语句语法规范 常用MySQL的关键字我们需要大写，库名、表名、字段名称等使用小写 SQL语句支持折行操作，拆分的时候不能把完整单词拆开 数据库名称、表名称、字段名称不要使用MySQL的保留字，如果必须要使用，需要用反引号``将其括起来 常用SQL语句 12345678910111213141516-- 1.获取登录的用户SELECT USER();-- 2.获取MySQL的版本信息SELECT VERSION();-- 3.获取当前的日期时间SELECT NOW();-- 4.获取当前打开的数据库SELECT DATABASE();-- 5.查看上一步操作产生的警告信息SHOW WARNINGS;-- 6.MySQL的注释：`#`或者`--` 数据库相关操作 创建数据库 12345678910-- 1.CREATE &#123;DATABASE|SCHEMA&#125; db_name;-- 2.检测数据库名称是否存在，不存在则创建CREATE DATABASE [IF NOT EXISTS] db_name;-- 3.在创建数据库的同时指定编码方式CREATE DATABASE [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset;-- 4.注意：数据库名称最好有意义；名称不能包含特殊字符或者是MySQL关键字 查看当前服务器下全部数据库 1SHOW DATABASES|SCHEMAS; 查看指定数据库的详细信息 1SHOW DREATE DATABASE db_name; 修改指定数据库的编码方式 1ALTER DATABASE db_name [DEFAULT] CHARACTER SET [=] charset; 打开指定数据库 1USE db_name; 获取当前打开的数据库 1234SELECT DATABASE();-- 或者SELECT SCHEMA(); 删除指定数据库 1234DROP DATABASE db_name;-- 删除存在的数据库DROP DATABASE [IF EXISTS] db_name; 数据表相关操作 数据表 是数据库最重要的组成部分之一，数据是保存在数据表中 数据表由行row和列column来组成 每个数据表中至少有一列，行可以有零行一行或者多行组成 表名要求唯一，不要包含特殊字符，最好含义明确 创建数据表 12345CREATE TABLE [IF NOT EXISTS] tbl_name ( 字段名称 字段类型 [完整性约束条件], 字段名称 字段类型 [完整性约束条件], ...) ENGINE=存储引擎 CHARSET=编码方式; 完整性约束条件 查看当前数据库下已有数据表 1234SHOW TABLES;-- 或者SHOW [FULL] TABLES [&#123; FROM | IN &#125; db_name] [LIKE 'pattern' | WHERE expr]; 查看指定数据表的详细信息 1SHOW CREATE TABLE tbl_name; 查看表结构 12345DESC tbl_name;DESCRIBE tbl_name;SHOW COLUMNS FROM tbl_name; 删除指定的数据表 1DROP TABLE [IF EXISTS] tbl_name; 表结构相关操作 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748-- 添加字段ALTER TABLE tbl_name ADD 字段名称 字段属性 [完整性约束条件][FIRST|AFTER字段名称];-- 删除字段ALTER TABLE tbl_name DROP 字段名称;-- 添加默认值ALTER TABLE tbl_name ALTER 字段名称 SET DEFAULT 默认值;-- 删除默认值ALTER TABLE tbl_name ALTER 字段名称 DROP DEFAULT;-- 修改字段类型、字段属性ALTER TABLE tbl_name MODIFY 字段名称 字段类型[字段属性][FIRST|AFTER字段名称];-- 修改字段名称、字段类型、字段属性ALTER TABLE tbl_name CHANGE 原字段名称 新字段名称 字段类型 字段属性[FIRST|AFTER字段名称];-- 添加主键ALTER TABLE tbl_nameADD PRIMARY KEY(字段名称);-- 删除主键(如果字段属性带有AUTO_INCREMENT，则会删不掉；因此得先去掉该属性后才可删掉)ALTER TABLE tbl_nameDROP PRIMARY KEY;-- 添加唯一ALTER TABLE tbl_nameADD UNIQUE KEY|INDEX [index_name](字段名称);-- 删除唯一ALTER TABLE tbl_nameDROP INDEX index_name;-- 修改数据表名称ALTER TABLE tbl_nameRENAME [TO|AS] new_tbl_name;-- 或者RENAME TABLE tbl_name TO new_tbl_name;-- 修改AUTO_INCREMENT的值ALTER TABLE tbl_name AUTO_INCREMENT=值; MySQL中的数据类型 数值型 整数型 浮点数 定点数 字符串类型 日期时间类型 MySQL存储引擎 MyISAM存储引擎 默认MyISAM的表会在磁盘中产生3个文件 .frm（表结构文件） .MYD（数据文件） .MYI（索引文件） 可以在创建表的时候指定数据文件和索引文件的存储位置，只有MyISAM表支持 DATA DIRECTORY [=] 数据文件保存的绝对路径 INDEX DIRECTORY [=] 索引文件保存的绝对路径 MyISAM单表最大支持的数据量2的64次方条记录 每个表最多可以创建64个索引 如果是复合索引，每个复合索引最多包含16个列，索引值最大长度是1000B MyISAM引擎的存储格式 定长（FIXED静态）：是指字段中不包含VARCHAR/TEXT/BLOB 动态（DYNAMIC）：只要字段中包含了VARCHAR/TEXT/BLOB 压缩（COMPRESSED）：需要myisampack来创建 InnoDB存储引擎 设计遵循ACID模型，支持事务，具有从服务崩溃中恢复的能力，能够最大限度保护用户的数据 原子性（Atomiocity） 一致性（Consistency） 隔离性（Isolation） 持久性（Durability） 支持行级锁，可以提升多用户并发时的读写性能 支持外键，保证数据的一致性和完整性 InnoDB拥有自己独立的缓冲池，常用的数据和索引都在缓存中 对于INSERT、UPDATE、DELETE操作，InnoDB会使用一种change buffering的机制来自动优化，还可以提供一致性的读，并且还能缓存表更的数据，减少磁盘I/O，提高性能 创建InnoDB表之后会产生两个文件 .frm（表结构文件） .ibd（数据和索引存储表空间中） 所有的表都需要创建主键，最好是配合上AUTO_INCREMENT，也可以放到经常查询的列作为主键 MySQL数据库操作 添加记录 123456789101112131415161718INSERT [INTO] tbl_name[(col_name,...)] &#123;VALUE|VALUES&#125;(VALUES...);-- 不指定字段名称（需要按照建表时的字段顺序给每一个字段赋值）INSERT tbl_name VALUE(value...);-- 列出指定字段INSERT tbl_name(字段名称,...) VALUES(值,...);-- INSERT ... SET的形式INSERT tbl_name SET 字段名称=值,...;-- INSERT ... SELECT的形式INSERT tbl_name[(字段名称...)] SELECT 字段名称,...FROM tbl_name [WHERE 条件];-- 一次添加多条记录INSERT tbl_name[(字段名称,...)] VALUES(值,...),(值,...),(值,...); 修补记录 123UPDATE tbl_name SET 字段名称=值,字段名称=值[WHERE 条件];-- 如果不添加条件，整个表中的记录都会被更新 删除记录 12345678DELETE FROM tbl_name [WHERE 条件];-- 如果不添加条件，整个表中的记录都会被删除-- DELETE清空数据表的时候不会重置AUTO_INCREMENT的值，可以通过ALTER语句将其重置为1-- 彻底清空数据表（1.清除表中所有记录；2.会重置AUTO_INCREMENT的值）TRUNCATE [TABLE] tbl_name; 查询记录 1234567891011121314151617181920212223SELECT select_expr,... FROM tbl_name[WHERE 条件][GROUP BY &#123;col_name|position&#125; HAVING 二次筛选][ORDER BY &#123;col_name|position&#125; [ASC|DESC]][LIMIT 限制结果集的显示条数]-- 查询表中所有记录（*：所有字段）SELECT * FROM tbl_name;-- 指定字段的信息SELECT 字段名称,... FROM tbl_name;-- 库名.表名SELECT 字段名称,... FROM db_name.tbl_name;-- 给字段起别名SELECT 字段名称[AS]别名名称,... FROM db_name.tbl_name;-- 给数据表起别名SELECT 字段名称,... FROM tbl_name[AS]别名名称;-- 表名.字段名称SELECT tbl_name.col_name,... FROM tbl_name; WHERE条件 会筛选出符合条件的记录 比较运算符：&gt;、&gt;=、&lt;、&lt;=、!=、&lt;&gt;、&lt;=&gt; &lt;=&gt;和= 的区别：&lt;=&gt;可以检测NULL值 IS [NOT] NULL：检测值是否为NULL或者NOT NULL 指定范围：[NOT] BETWEEN ... AND 指定集合：[NOT] IN(值,...) 逻辑运算符 AND（逻辑与） OR（逻辑或） 匹配字符 [NOT] LIKE %（任意长度的字符串） _（任意一个字符） GROUP BY分组 把值相同放到一个组中，最终查询出的结果只会显示组中一条记录 分组配合GROUP_CONCAT()查看组中某个字段的详细信息 配合聚合函数使用 COUNT()（统计记录总数） 如果写的是COUNT(字段名称)，字段中的值为NULL是不统计进来 如果写的是COUNT(*)会统计NULL值 SUM()（求和） MAX()（求最大值） MIN()（求最小值） AVG()（求平均值） 配合WITH ROLLUP关键字使用 会在记录末尾添加一条记录，是上面所有记录的总和 可以通过字段来进行分组，也可以通过index来进行分组 HAVING子句对分组结果进行二次筛选 COUNT(*) &gt;= 3 或者 COUNT(*)的别名 &gt;= 3 12345678910111213141516171819202122232425262728-- 按照性别分组，查询组中的用户名有哪些SELECT GROUP_CONCAT(username),age,sex,addr FROM user GROUP BY sex;-- 按照addr分组，得到用户名的详情，总人数，得到组中年龄的总和，年龄的最大值、最小值、平均值SELECT addr,GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsers,SUM(age) AS sumAge,MAX(age) AS maxAge,MIN(age) AS minAge,AVG(age) as avgAgeFROM userGROUP BY addr;-- WITH ROLLUPSELECT GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsersFROM userGROUP BY sexWITH ROLLUP;-- HAVING子句对分组结果进行二次筛选SELECT addr,GROUP_CONCAT(username) AS userDetail,COUNT(*) AS totalUsersFROM userGROUP BY addrHAVING totalUsers &gt;= 3; ORDER BY排序 ORDER BY 字段名称 ASC|DESC LIMIT限制结果集显示条数 LIMIT 值：显示结果集的前几条记录 LIMIT offset,row_count：从offset开始，显示几条记录 多表查询 笛卡尔积的形式 内连接的形式 查询两个表中符合连接条件的记录 SELECT 字段名称,... FROM tbl_name1 INNER JOIN tbl_name2 ON 连接条件; 外链接的形式 左外连接 SELECT 字段名称,... FROM tbl_name1 LEFT OUTER JOIN tbl_name2 ON 条件; 先显示左表中的全部记录，再去右表中查询符合条件的记录，不符合的以NULL代替（以左表为主） 右外连接 SELECT 字段名称,... FROM tbl_name1 RIGHT OUTER JOIN tbl_name2 ON 条件; 先显示右表中的全部记录，再去左表中查询符合条件的记录，不符合的以NULL代替（以右表为主） 1234567891011121314151617181920-- 笛卡尔积（两层循环）SELECT emp.id,emp.username,emp.age,dep.depName FROM emp,dep;-- 内连接的形式SELECT e.id,e.username,e.age,d.depNameFROM emp AS eINNER JOIN dep AS dON e.depId=d.id;-- 左外链接的形式（可以省略 OUTER）SELECT e.id,e.username,e.age,d.depNameFROM emp AS eLEFT OUTER JOIN dep AS dON e.depId=d.id;-- 右外链接的形式（可以省略 OUTER）SELECT e.id,e.username,e.age,d.depNameFROM emp AS eRIGHT OUTER JOIN dep AS dON e.depId=d.id; 数据表的创建 12345678910111213141516171819202122232425262728-- 创建kaiyu表CREATE DATABASE IF NOT EXISTS fengche DEFAULT CHARACTER SET 'UTF8';-- 打开kaiyu表USE kaiyu-- 用户表 userCREATE TABLE IF NOT EXISTS user ( id INT, username VARCHAR(20), password CHAR(32), emial VARCHAR(50), age TINYINT, card CHAR(18), tel CHAR(11), salary FLOAT(8,2), married TINYINT(1), addr VARCHAR(100), sex ENUM('男', '女', '保密')) ENGINE=INNODB CHARSET=UTF8;-- INSERT [INTO] tbl_name(id,username,...) VALUES(1,'dhuang',...);-- 向user表中插入一条记录INSERT user(id,username,password,email,age,card,tel,salary,married,addr,sex)VALUES(1,'dhuang','123456','154298331@qq.com',24,'194958683948235864','15829341542',88888.68,0,'深圳','男');-- 查询表中所有记录SELECT * FROM tbl_name; 测试插入的数据 整型 超过会被截断 浮点型 DECIMAL[(M,D)]，小数位D不指定，则会截断为整型 字符串类型 CHAR效率高于VARCHAR，CHAR相当于拿空间换时间，VARCHAR拿时间换空间 CHAR默认存储数据的时候，后面会用空格填充到指定长度，而检索的时候会去掉后面的空格；VARCHAR在保存数据的时候不进行填充，尾部的空格会留下 TEXT列不能有默认值，检索的会后不存在大小写转换 枚举类型插入序号也是可以的，如：ENUM(&#39;男&#39;, &#39;女&#39;, &#39;保密&#39;)，则男对应的序号是1；枚举类型会自动过滤掉空格。 完善用户表user 12345678910111213CREATE TABLE IF NOT EXISTS `user`( `id` INT UNSIGNED AUTO_INCREAMENT KEY COMMENT '用户编号', `username` VARCHAR(20) NOT NULL UNIQUE COMMENT '用户名', `password` CHAR(32) NOT NULL COMMENT '密码', `email` VARCHAR(50) NOT NULL UNIQUE COMMENT '邮箱', `age` TINYINT UNSIGNED NOT NULL DEFAULT 18 COMMENT '年龄', `sex` ENUM('男', '女', '保密') NOT NULL DEFAULT '保密' COMMENT '性别', `tel` CHAR(11) NOT NULL UNIQUE COMMENT '电话', `addr` VARCHAR(50) NOT NULL DEFAULT '深圳' COMMENT '地址', `card` CHAR(18) NOT NULL UNIQUE COMMENT '身份证号', `married` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0代表未婚，1代表已婚', `salary` FLOAT(8,2) NOT NULL DEFAULT 0 COMMENT '薪水') ENGINE=INNODB DEFAULT CHARSET=UTF8;]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之集合框架]]></title>
    <url>%2F2018%2F05%2F01%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[一、集合框架 概念 现实生活中：很多的事物凑在一起 数学中的集合：具有共同属性的事物的总体 Java中的集合类：是一种工具类，就像是容器，存储任意数量的具有共同属性的对象 作用 在类的内部，对数据进行组织； 简单而快速的搜索大数量的条目； 有的集合接口，提供了一系列排列有序的元素，并且可以在序列中间快速的插入或者删除有关元素； 有的集合接口，提供了映射关系，可以通过关键字(key)去快速查找到对应的唯一对象，而这个关键字可以是任意类型。 集合与数组的对比 —— 为何选择集合而不是数组 数组的长度是固定的，集合的长度是可变的 数组只能通过下标访问元素，类型固定，而有的集合可以通过任意类型查找所映射的具体对象 体系结构 Collection Map 二、Collection接口、子接口以及实现类 Collection接口 是List、Set和Queue接口的父接口 定义了可用于操作List、Set和Queue的方法 —— 增删改查 List接口及其实现类 —— ArrayList List是元素有序并且可以重复的集合，被称为序列 List可以精确的控制每个元素的插入位置，或删除某个位置元素 ArrayList —— 数组序列，是List的一个重要实现类 ArrayList底层是由数组实现的 三、List实现功能 —— 模拟学生选课功能 选择课程（往List中添加课程） 12345678910package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125;&#125; 1234567891011121314package com.fengche.collection;import java.util.Set;import java.util.HashSet;public class Student &#123; public String id; public String name; public Set courses; public Student(String id, String name) &#123; this.id = id; this.name = name; this.courses = new HashSet(); &#125;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package com.fengche.collection;import java.util.List;import java.util.ArrayList;public class ListCourses &#123; /** * 用于存放备选课程的List */ public List selCourses; public ListCourses() &#123; this.selCourses = new ArrayList(); &#125; /** * 用于往selCourses中添加备选课程 */ public void addCourse() &#123; // 1. 创建一个课程对象，并通过调用add方法，添加到备选课程List中 Course course1 = new Course("1", "数据结构"); selCourses.add(course1); Course c1 = (Course)selCourses.get(0); System.out.println("添加了课程:" + c1.id + ":" + c1.name); // 2. 另一种添加方式 Course course2 = new Course("2", "C语言"); selCourses.add(0, course2); Course c2 = (Course)selCourses.get(0); System.out.println("添加了课程:" + c2.id + ":" + c2.name); // 3. 以下方法会抛出数组下标越界 // Course course3 = new Course("3", "Test"); // selCourses.add(4, course3); // 4. addAll的添加方式 Course[] courses1 = &#123;new Course("3", "离散数学"), new Course("4", "汇编语言")&#125;; selCourses.addAll(Arrays.asList(courses1)); Course c3 = (Course)selCourses.get(2); Course c4 = (Course)selCourses.get(3); System.out.println("添加了课程:" + c3.id + ":" + c3.name + ";" + c4.id + ":" + c4.name); // 5. addAll的另一种添加方式 Course[] courses2 = &#123;new Course("5", "高等数学"), new Course("6", "大学英语")&#125;; selCourses.addAll(2, Arrays.asList(courses2)); Course c5 = (Course)selCourses.get(2); Course c6 = (Course)selCourses.get(3); System.out.println("添加了课程:" + c5.id + ":" + c5.name + ";" + c6.id + ":" + c6.name); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); &#125;&#125; 查看所选课程（遍历List中的元素） 1234567891011121314151617181920212223242526package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... // 通过迭代器来遍历List public void iteratorCourse() &#123; // 通过集合的iterator方法，取得迭代器的实例 Iterator it = selCourses.iterator(); while (it.hasNext()) &#123; Course c = (Course)it.next(); System.out.println("课程:" + c.id + ":" + c.name); &#125; &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); listCourses.iteratorCourse(); &#125;&#125; 123456789101112131415161718192021222324252627package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... // 通过for each方法访问集合元素 public void forEachCourse() &#123; // 通过集合的iterator方法，取得迭代器的实例 for (Object obj:selCourses) &#123; Course c = (Course)obj; System.out.println("课程:" + c.id + ":" + c.name); &#125; &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.forEachCourse(); &#125;&#125; 修改所选课程（修改List中的元素） 1234567891011121314151617181920212223package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void modifyCourse() &#123; selCourses.set(4, new Course("7", "毛概")); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.modifyCourse(); listCourses.forEachCourse(); &#125;&#125; 删除所选的某门课程（删除List中的元素） 12345678910111213141516171819202122232425package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void removeCourse() &#123; Course c = (Course)selCourses.get(4); selCourses.remove(c); // or: selCourses.remove(4); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.removeCourse(); listCourses.forEachCourse(); &#125;&#125; 123456789101112131415161718192021222324package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void removeAllCourse() &#123; Course[] courses = &#123;(Course)selCourses.get(4), (Course)selCourses.get(5)&#125;; selCourses.removeAll(Array.asList(courses)); &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse(); // ... listCourses.removeAllCourse(); listCourses.forEachCourse(); &#125;&#125; 判断List中是否包含某个元素 12345678910111213141516171819202122232425262728package com.fengche.collection;import java.util.List;import java.util.ArrayList;import java.util.Iterator;public class ListCourses &#123; // ... public void containsCourse() &#123; // 取得备选课程序列的第0个元素 Course course = selCourses.get(0);// selCourses 假设已应用泛型，这里不用强转类型 // 打印输出selCourses是否包含course对象 System.out.println("备选课程中是否包含课程：" + course.name + "," + selCourses.contains(course));// true // 创建一个新的课程对象，ID和名称，与course对象完全一样 Course course2 = new Course(course.id, course.name); System.out.println("备选课程中是否包含课程：" + course2.name + "," + selCourses.contains(course2));// false &#125; public static void main(String[] args) &#123; ListCourses listCourses = new ListCourse(); listCourses.addCourse();// 除了addCourse方法，其他都注释掉 listCourses.containsCourse(); &#125;&#125; 判断List中是否包含某属性相同的元素，如对比元素的name是否相同 contains内部的实现原理，其实是遍历集合，然后调用equals方法进行对比的，所以我们可以重写equals方法来实现。 123456789101112131415161718192021222324252627282930313233343536373839package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125; public Course() &#123; &#125; @Override public boolean equals(Object obj) &#123; if (this == obj) &#123; return true; &#125; if (obj == null) &#123; return false; &#125; if (!(obj instanceof Course)) &#123; return false; &#125; Course course = (Course) obj; if (this.name == null) &#123; if (course.name == null) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; if (this.name.equals(course.name)) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125; 使用indexOf方法取得某元素在集合中的索引位置 实现List集合的排序（TODO） 四、泛型 上文List集合中，我们一直添加的是课程类，如果期间我们往该集合中添加一些奇怪的东西，比如说字符串，则会抛出ClassCastException异常；原因很简单，我们在遍历集合，将里面的Object类型元素强转成课程类型，突然遇到字符串类型的元素，把它进行强转的话就会很容易的抛出这个异常了。又没有一种方法可以控制我往某个集合中添加元素的类型呢？这就需要用到一个重要的知识：泛型。 集合中的元素，可以是任意类型的对象（对象的引用） 如果把某个对象放入集合，则会忽略他的类型，而把他当做Object处理 泛型则是规定了某个集合只可以存放特定类型的对象 会在编译期间进行类型检查 可以直接按指定类型获取集合元素 示例 12345678910111213141516171819202122232425262728293031323334package com.fengche.collection;import java.util.List;public class ListGeneric &#123; // 带有泛型 —— Course的List类型属性 public List&lt;Course&gt; courses; public void ListGeneric() &#123; this.courses = new ArrayList&lt;Course&gt;(); &#125; public void addCourse() &#123; Course course1 = new Course("1", "大学语文"); courses.add(course1); // 这里则在编译时，抛出错误；泛型集合中，不能添加泛型规定的类型及其子类型以外的对象，否则会把报错！ courses.add("能否添加一些奇怪的东西呢？"); Course course2 = new Course("2", "Java基础"); courses.add(course2); &#125; public forEachCourse() &#123; for (Course course:courses) &#123;// 这里就不用强转类型了 System.out.println(course.id + ":" + course.name); &#125; &#125; public static void main(String[] args) &#123; ListGeneric listGeneric = new ListGeneric(); listGeneric.addCourse(); listGeneric.forEachCourse(); &#125;&#125; 泛型集合可以添加泛型的子类型的对象实例 比如：ChileCourse继承Course，那么ChileCourse的实例也是可以添加到泛型为Course的List集合中去。 泛型集合中的限定类型不能使用基本数据类型；可以通过使用包装类限定允许存入的基本数据类型。 五、Set接口及其实现类 —— HashSet Set是元素无序并且不可以重复的集合，被称为集 HashSet —— 哈希集，是Set的一个重要实现类 Set案例功能，提供备选课程 创建学生对象，并给该学生添加三门课程（添加在学生的courses —— Set类型的属性中） 显示备选课程 循环三次，每次输入课程ID 往学生的courses属性中添加与输入的ID匹配的课程 输出学生选择的课程 六、Set案例功能 修改上文定义学生类选课的泛型 1234567891011121314package com.fengche.collection;import java.util.Set;import java.util.HashSet;public class Student &#123; public String id; public String name; public Set &lt;Course&gt; courses; public Student(String id, String name) &#123; this.id = id; this.name = name; this.courses = new HashSet&lt;Course&gt;(); &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.fengche.collection;import java.util.Set;import java.util.HashSet;import java.util.ArrayList;public class SetCourses &#123; public List&lt;Course&gt; selCourses; public SetCourses() &#123; selCourses = new ArrayList&lt;Course&gt;(); &#125; // public void addCourse() &#123;&#125; // 同上文 ListCourses 的方法 public static void main(String[] args) &#123; SetCourses setCourses = new SetCourses(); setCourses.addCourse(); setCourses.forEachCourse(); Student student = new Student("1", "小明"); Scanner scanner = new Scanner(System.in); for (int i = 0; i &lt; 3; i++) &#123; System.out.println("请输入课程ID"); String courseId = scanner.next(); for (Course course : setCourses.selCourses) &#123; if (course.id.equals(courseId)) &#123; // Set中，添加某个元素，无论添加多少次，最终只会保留一个该对象（的引用），并且保留的是第一次添加的那一个 student.courses.add(course); &#125; &#125; &#125; setCourses.forEachStudentSet(student); &#125; public void forEachStudentSet(Student student) &#123; // 打印输出，学生所选的课程！ for (Course course : student.courses) &#123; System.out.println("选择了课程:" + course.id + ":" + course.name); &#125; &#125;&#125; 判断Set中是否包含某元素 123456789101112131415161718192021222324252627282930package com.fengche.collection;import java.util.Set;import java.util.HashSet;import java.util.ArrayList;public class SetCourses &#123; public List&lt;Course&gt; selCourses; public SetCourses() &#123; selCourses = new ArrayList&lt;Course&gt;(); &#125; // public void addCourse() &#123;&#125; // 同上文 ListCourses 的方法 public static void main(String[] args) &#123; // 这部分内容，同上 // ... // Set的contains方法 Course course = new Course(); course.name = "离散数学"; System.out.println("备选课程中是否包含课程：" + course.name + "," + student.courses.contains(course));// 这里返回的是：false &#125; // public void forEachStudentSet // 同上&#125; 这里返回的是：false；因为这里使用的是HashSet去实现的Set接口，所以这就得看HashSet的contains它的实现机制了。 Object不仅定义了equals方法，还有hashCode方法，它返回的是对象哈希码的值 当调用HashSet的contains方法时，它是先调用hashCode方法来返回哈希码，如果哈希码相等的情况下，再调用equals方法，只有这两个方法所返回的值都相等的情况下，才认定这个HashSet包含某个元素 重写hashCode和equals方法： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.fengche.collection;public class Course &#123; public String id; public String name; public Course(String id, String name) &#123; this.id = id; this.name = name; &#125; public Course() &#123; &#125; @Override public int hashCode() &#123; final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; &#125; @Override public boolean equals(Object obj) &#123; if (this == obj) &#123; return true; &#125; if (obj == null) &#123; return false; &#125; if (!(obj instanceof Course)) &#123; return false; &#125; Course course = (Course) obj; if (this.name == null) &#123; if (course.name == null) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; if (this.name.equals(course.name)) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125; 再运行以上程序，则返回的是：true。 七、Map和HashMap Map接口 Map提供了一种映射关系，其中的元素是以键值对(key-value)的形式存储的，能够实现根据key快速查找value Map中的键值对以Entry类型的对象实例形式存在 键(key值)不可重复，value值可以 Map支持泛型，形式如：Map HashMap类 HashMap是Map的一个重要实现类，也是最常用的，基于哈希表实现 HashMap中的Entry对象是无序排列的 key值和value值都可以为null，但是一个HashMap只能有一个key值为null的映射(key值不可重复) Map和HashMap案例说明 通过Map进行学生信息管理，其中key为学生ID，value为学生对象 通过键盘输入学生信息 对集合中的学生信息进行增、删、改、查操作 Map和HashMap案例 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110package com.fengche.collection;import java.util.HashMap;public class MapStudent &#123; // 用来承装学生类型对象 public Map&lt;String, Student&gt; students; // 在构造方法中初始化students属性 public MapStudent() &#123; this.students = new HashMap&lt;String, Student&gt;(); &#125; // 测试添加：输入学生ID，判断是否被占用；若未被占用，则输入姓名，创建新的学生对象，并且添加到st public void pushStudent() &#123; // 创建以个Scanner对象，用来获取输入的学生ID和姓名 Scanner scanner = new Scanner(System.in); int i = 0; while (i &lt; 3) &#123; System.out.println("请输入学生ID："); String id = scanner.next(); Student student = students.get(id); if (id == null) &#123; // 提示输入学生姓名 System.out.println("请输入学生姓名："); String name = scanner.next(); // 创建新的学生对象 Student newStudent = new Student(id, name); // 通过调用students的put方法，添加（id-学生）映射 students.put(id, newStudent); System.out.println("成功添加学生：" + students.get(id).name); i++; &#125; else &#123; System.out.println("该学生id已被占用！"); continue; &#125; &#125; &#125; // 测试Map的keySet方法 public void forEachStudent() &#123; // 通过keySet方法，返回Map中的所有“键”的Set集合 Set&lt;String&gt; keySet = students.keySet(); // 遍历keySet，取得每一个键，再调用get方法取得每个键对应的value for (String studentId : keySet) &#123; Student student = students.get(studentId); if (student != null) &#123; System.out.println("学生：" + student.name); &#125; &#125; &#125; // 测试删除Map中的映射 public void removeStudent() &#123; // 提示输入待删除的学生ID System.out.println("请输入要删除的学生ID！"); Scanner scanner = new Scanner(System.in); while (true) &#123; String id = scanner.next(); Student student = students.get(id); if (student == null) &#123; System.out.println("该ID不存在！"); continue; &#125; students.remove(id); System.out.println("成功删除学生：" + student.name); break; &#125; &#125; // 通过entrySet方法来遍历Map public void entrySetStudent() &#123; // 通过entrySet方法，返回Map中的所有键值对 Set&lt;Entry&lt;String, Student&gt;&gt; entrySet = students.entrySet(); for (Entry&lt;String, Student&gt; entry : entrySet) &#123; System.out.println("取得键：" + entry.getKey()); System.out.println("对应的值为：" + entry.getValue().name); &#125; &#125; // 利用put方法修改Map中的已有映射 public void modifyStudent() &#123; // 提示输入待修改的学生ID System.out.println("请输入要修改的学生ID！"); Scanner scanner = new Scanner(System.in); while (true) &#123; String id = scanner.next(); Student student = students.get(id); if (student == null) &#123; System.out.println("该ID不存在！"); continue; &#125; System.out.println("当前ID所对应的学生为：" + student.name); System.out.println("请输入新的学生姓名："); String name = scanner.next(); Student newStudent = new Student(id, name); students.put(id, newStudent); System.out.println("修改成功！"); break; &#125; &#125; public static void main(String[] args) &#123; MapStudent mapStudent = new MapStudent(); pmapStudent.pushStudent(); mapStudent.forEachStudent(); mapStudent.removeStudent(); mapStudent.entrySetStudent(); mapStudent.modifyStudent(); &#125;&#125; 判断Map中是否包含某个Key值或者某个Value值 12345678910111213141516171819202122232425262728293031package com.fengche.collection;import java.util.HashMap;public class MapStudent &#123; // 用来承装学生类型对象 public Map&lt;String, Student&gt; students; // 在构造方法中初始化students属性 public MapStudent() &#123; this.students = new HashMap&lt;String, Student&gt;(); &#125; // 略 public void containsKeyOrValue() &#123; // 在Map中，用containsKey()方法，来判断是否包含某个Key值 // 用containsValue()方法，来判断是否包含某个Value值 String id = "3"; System.out.println("在学生映射表中是否存在：" + students.containsKey(id)); // containsValue 同理，这里也是需要重写hashCode和equals方法 &#125; public static void main(String[] args) &#123; MapStudent mapStudent = new MapStudent(); // ... mapStudent.containsKeyOrValue(); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之异常]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%BC%82%E5%B8%B8%2F</url>
    <content type="text"><![CDATA[一、异常的简介 有异于常态，和正常情况不一样，有错误出现。阻止当前方法或作用域，称之为异常 Java异常体系结构简介 处理异常 try-catch以及try-catch-finally 如果try抛出异常，将会终止执行，程序的控制权将被移交给catch块中的异常处理程序。 try会抛出很多种类型的异常，则用多重catch语句，但要注意异常类型必须子类在前父类在后。 抛出异常 throw —— 将产生的异常抛出（动作） throws —— 声明将要抛出何种类型的异常（声明） 123public void 方法名(参数列表) throws 异常列表 &#123; // 调用会抛出异常的方法或者：先抛出一个异常 throw new Exception();&#125; 自定义异常 12345678public class DrunkException extends Exception &#123; public DrunkException() &#123; &#125; public DrunkException(String message) &#123; super(message); &#125;&#125; Java中的异常链 1234567891011121314151617181920212223242526272829303132333435/** * test1(): 抛出“喝大了”异常 * test2(): 调用test1()，捕获"喝大了"异常，并且包装成运行时异常，继续抛出 * main方法中，调用test2()，尝试捕获test2()方法抛出的异常 * */public class ChainTest &#123; public static void main(String[] srgs) &#123; ChainTest ct = new ChainTest(); try &#123; ct.test2(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; public void test1() throws DrunkException &#123; throw new DrunkException("喝车别开酒！"); &#125; public void test2() &#123; try &#123; test1(); &#125; catch (DrunkException e) &#123; RuntimeException newExc = new RuntimeException("司机一滴酒，亲人两行泪~~"); newExc.initCause(e); throw newExc; /* 或者 RuntimeException newExc = new RuntimeException(e); throw newExc; */ &#125; &#125;&#125; 实际应用中的经验与总结 a. 处理运行时异常时，采用逻辑去合理规避同时辅助try-catch处理 b. 在多重catch块后面，可以加一个catch(Exception)来处理可能会被遗漏的异常 c. 对于不确定的代码，也可以加上try-catch，处理潜在的异常 d. 尽量去处理异常，切忌只是简单的调用printStackTrace()去打印输出 e. 具体如何处理异常，要根据不同的业务需求和异常类型去决定 f. 尽量添加finally语句块去释放占用的资源]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之接口]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E6%8E%A5%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[一、Java中的接口 接口的概念 类是一种具体实现体，而接口定义了某一批类所需要遵守的规范，接口不关心这些类的内部数据，也不关心这些类里方法的实现细节，它只规定这些类里必须提供某些方法。 接口定义的基本语法： 1234[修饰符] interface 接口名 [extends 父接口1, 父接口2, ...] &#123; 零个到多个常量定义... 零个到多个抽象方法的定义...&#125; 接口的定义 常量：接口中的属性是常量，即使定义时不添加 public static final 修饰符，系统也会自动加上。 方法：接口中的方法只能是抽象方法，即使定义时不添加 public abstract 修饰符，系统也会自动加上。 接口的使用 一个类可以实现一个或多个接口，实现接口使用 implements 关键字。Java中一个类只能继承一个父类，是不够灵活的，通过实现多个接口可以做补充。 12345// 继承父类实现接口的语法为：[修饰符] class 类名 extends 父类 implements 接口1, 接口2, ... &#123; 类体部分// 如果继承了抽象类，需要实现继承的抽象方法；要实现接口中的抽象方法。&#125;// 如果要继承父类，继承父类必须在实现接口之前 实例： 12345package com.fengche;public interface IPlayGame &#123; public void playGame();&#125; 1234567891011121314151617181920package com.fengche;public class SmartPhone extends Telphone implements IPlayGame &#123; @Override public void call() &#123; System.out.println("通过语音来打电话"); &#125; @Override public void message() &#123; System.out.println("通过语音来发短信"); &#125; @Override public void playGame() &#123; System.out.println("具有了玩游戏的功能"); &#125;&#125; 12345678910package com.fengche;public class Psp implements IPlayGame &#123; @Override public void playGame() &#123; System.out.println("具有了玩游戏的功能"); &#125;&#125; 123456789101112package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; IPlayGame ip1 = new SmartPhone(); ip1.playGame(); IPlayGame ip2 = new Psp(); ip2.playGame(); &#125;&#125; 使用接口： 接口在使用过程当中，还经常与匿名内部类配合使用 匿名内部类就是没有名字的内部类，多用于关注实现而不关注实现类的名称 12345Interface i = new Interface() &#123; public void method() &#123; System.out.println("匿名内部类实现接口的方式"); &#125;&#125;; 123456789101112131415161718192021package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; IPlayGame ip3 = new IPlayGame() &#123; @Override public void playGame() &#123; System.out.println("匿名内部类实现接口的方式1"); &#125; &#125;; ip3.playGame(); new IPlayGame() &#123; public void playGame() &#123; System.out.println("匿名内部类实现接口的方式2"); &#125; &#125;.playGame(); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之多态]]></title>
    <url>%2F2018%2F04%2F29%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A4%9A%E6%80%81%2F</url>
    <content type="text"><![CDATA[一、Java中的多态多态，指的是对象的多种形态 引用多态 父类的引用可以指向本类的对象 父类的引用可以指向子类的对象 12345678910package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; Animal cat = new Animal();// 父类的引用指向本类的对象 Animal dog = new Dog();// 父类的引用指向子类的对象 // Dog dog2 = new Animal();// 错误，子类的引用不能指向父类的对象 &#125;&#125; 方法多态 创建本类对象时，调用的方法为本类方法 创建子类对象时，调用的方法为子类重写的方法或者继承的方法 二、多态中的引用类型转换 向上类型转换（隐式/自动类型转换），是小类型到大类型的转换 向下类型转换（强制类型转换），是大类型大小类型的转换 instanceof 运算符，来解决引用对象的类型，避免类型转换的安全性问题 1234567891011121314151617181920package com.fengche;public class Initail &#123; public static void main(String[] args) &#123; Dog dog = new Dog(); Animal animal = dog;// 向上类型转换 自动类型转换 Dog dog2 = (Dog)animal;// 向下类型转换 强制类型转换 // 运行时出错 Cat cat = (Cat)animal;// 1.编译时 Cat类型；2.运行时 Dog类型 // 可以通过instanceof运算符避免类型转换的安全性问题 if（animal instanceof Cat) &#123; Cat cat = (Cat)animal; &#125; else &#123; System.out.println("无法进行类型转换"); &#125; &#125;&#125; 三、Java中的抽象类 语法定义： 某个类使用abstract关键字修饰，则该类为抽象类。 应用场景： a. 在某些情况下，某个父类只是知道其子类应该包含怎样的方法，但无法准确知道这些子类如何实现这些方法。 b. 从多个具有相同特征的类中抽象出一个抽象类，以这个抽象类作为子类的模板，从而避免了子类设计的随意性。 作用： 限制规定子类必须实现某些方法，但不关注实现细节 使用规则： a. abstract定义抽象类 b. abstract定义抽象方法，只有声明，不需要实现 c. 包含抽象方法的类是抽象类 d. 抽象类中可以包含普通的方法，也可以没有抽象方法 e. 抽象类不能直接创建，可以定义引用变量 123456package com.fengche;public abstract class Telphone &#123; public abstract void call();// 抽象方法没有方法体以分好结束 public abstract void message();&#125; 123456789101112131415package com.fengche;public class CellPhone extends Telphone &#123; @Override public void call() &#123; System.out.println("通过键盘来打电话"); &#125; @Override public void message() &#123; System.out.println("通过键盘来发短信"); &#125;&#125; 123456789101112131415package com.fengche;public class SmartPhone extends Telphone &#123; @Override public void call() &#123; System.out.println("通过语音来打电话"); &#125; @Override public void message() &#123; System.out.println("通过语音来发短信"); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之继承]]></title>
    <url>%2F2018%2F04%2F28%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E7%BB%A7%E6%89%BF%2F</url>
    <content type="text"><![CDATA[一、Java中的继承 继承的概念：继承是类与类的一种关系。注：Java中的继承是单继承 继承的好处：子类拥有父类的所有属性和方法，除了private修饰的。实现代码复用 语法规则：class 子类 extends 父类 二、Java中的方法重写 什么是方法的重写：如果子类对继承父类的方法不满意，是可以重写父类继承的方法的，当调用方法时会优先调用子类的方法。 语法规则： a. 返回值类型 b. 方法名 c. 参数类型及个数都要与父类继承的方法相同，才叫方法的重写。 三、继承的初始化顺序 初始化父类再初始化子类 先执行初始化对象中属性，再执行构造方法中的初始化 四、Java中的final关键字使用final关键字做标识有“最终的”含义final可以修饰类、方法、属性和变量 - final修饰类，则该类不允许被继承 - final修饰方法，则该方法不允许被覆盖（重写） - final修饰属性，则该类的属性不会进行隐式的初始化（类的初始化属性必须有值），或在构造方法中赋值（但只能选其一） - final修饰变量，则该变量的值只能赋一次值，即变为常量 五、Java中的super关键字super关键字在对象的内部使用，可以代表父类对象。 访问父类的属性：super.name; 访问父类的方法：super.doSomething(); super关键字的应用 子类的构造过程中必须调用其父类的构造方法 如果子类的构造方法中没有显示调用父类的构造方法，则系统默认调用父类无参的构造方法 如果显示的调用构造方法，必须在子类的构造方法的第一行 如果子类构造方法中既没有显示调用父类的构造方法，而父类又没有无参的构造方法，则编译出错 六、Java中的Object类Object类是所有类的父类，如果一个类没有使用extends关键字明确标识继承另外一个类，那么这个类默认继承Object类。Object类中的方法，适合所有子类。 toString方法 在Object类里面定义toString方法的时候返回的对象的哈希code码（对象地址字符串） 可以通过重写toString方法表示出对象的属性 equals方法 比较的是对象的引用是否指向同一块内存地址 一般情况下比较两个对象时比较他的值是否一致，所以要进行重写]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之封装]]></title>
    <url>%2F2018%2F04%2F28%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E5%B0%81%E8%A3%85%2F</url>
    <content type="text"><![CDATA[一、封装 概念： 将类的某些信息隐藏在类的内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问。 好处： a.只能通过规定的方法访问数据 b.隐藏类的实例细节，方便修改和实现 封装的实现步骤 a.修改属性的可见性，设为private b.创建getter/setter方法，用于属性的读写 c.在getter/setter方法中加入属性控制语句，对属性值的合法性进行判断 二、Java中的包 包的作用： a. 管理Java文件 b. 解决同名文件冲突 定义包：package包名 注：必须放在Java源程序的第一行 包名间可以使用“.”号隔开 eg：com.fengche.MyClass 系统中的包 java.(功能).(类) java.lang.(类) 包含java语言及基础的类 java.util.(类) 包含java语言中各种工具类 java.io.(类) 包含输入、输出相关功能的类 包的使用 a. 可以通过import关键字，在某个文件使用其他文件中的类。import com.fengche.MyClass b. Java中，包的命名规范是全小写字母拼音 c. 使用的时候不但可以加载某个包下的所有文件eg：com.fengche.* 也可以加载某个具体子包下的所有文件 eg：com.fengche.music.* 三、Java中的访问修饰符 访问修饰符 本类 同包 子类 其他 private ✅ default ✅ ✅ protected ✅ ✅ ✅ public ✅ ✅ ✅ ✅ 四、Java中的this关键字 this关键字代表当前对象 this.属性 操作当前对象的属性 this.方法 调用当前对象的方法 封装对象的属性的时候，经常会使用this关键字 五、Java中的内部类 内部类(inner Class)就是定义在另外一个类里面的类。与之对应，包含内部类的类被称为外部类。 内部类的主要作用如下： 内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类 内部类的方法可以直接访问外部类的所有数据，包括私有的数据 内部类所实现的功能使用外部类同样可以实现，只是有时使用内部类更方便 内部类可分为以下几种： 成员内部类 静态内部类 方法内部类 匿名内部类 12345678910111213141516171819// 外部类HelloWorldpublic class HelloWorld &#123; // 内部类Inner，类Inner在类HelloWorld的内部 public class Inner &#123; // 内部类的方法 public void show() &#123; System.out.println("show"); &#125; &#125; public static void main(String[] args) &#123; // 创建外部类对象 HelloWorld hello = new HelloWorld(); // 创建内部类对象 Inner i = hello.new Inner(); // 调用内部类对象的方法 i.show(); &#125;&#125; 六、Java中的成员内部类内部类中最常见的就是成员内部类，也称为普通内部类。如： 12345678910111213141516171819// 外部类Outerpublic class Outer &#123; private int a = 1;// 外部类的私有属性 // 内部类Inner public class Inner &#123; int b = 2;// 内部类的成员属性 public void show() &#123; System.out.println("访问外部类中的a:" + a); System.out.println("访问内部类中的b:" + b); &#125; &#125; // 测试成员内部类 public static void main(String[] args) &#123; Outer o = new Outer();// 创建外部类对象，对象名为o Inner i = o.new Inner();// 使用外部类对象创建内部类对象 i.show();// 调用内部类对象的show方法 &#125; &#125; 从上面的代码中我们可以看到，成员内部类的使用方法： Inner类定义在Outer类的内部，相当于Outer类的一个成员变量的位置，Inner类可以使用任意访问控制符，如public、protected、private等 Inner类中定义的show()方法可以直接访问Outer类中的数据，而不受访问控制符的影响，如直接访问Outer类中的私有属性a 定义了成员内部类后，必须使用外部类对象来创建内部类对象，而不能直接去new一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类(); 编译上面的程序后，会发现产生了两个.class文件 Outer$Inner.class Outer.class其中，第二个是外部类的.class文件，第一个是内部类的.class文件，即成员内部类的.class文件总是这样：外部类名$内部类名.class 另外，注意： 外部类是不能直接使用内部类的成员的方法，可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用this关键字。如： 123456789101112// 外部类Outerpublic class Outer &#123; int b = 1;// 外部类中的成员属性a // 内部类Inner public class Inner &#123; int b = 2;// 内部类的成员属性 public void show() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类中的b:" + Outer.this.b); System.out.println("访问内部类中的b:" + b); &#125; &#125;&#125; 七、Java中的静态内部类静态内部类是static修饰的内部类，这种内部类的特点是： 静态内部类不能直接访问外部类的非静态成员，但可以通过new外部类().成员 的方式访问 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；如果外部类的静态成员与内部类的成员名称不相同，则可以通过“成员名”直接调用外部类的静态成员 创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名 = new 内部类(); 12345678910111213141516171819// 外部类SOuterpublic class SOuter &#123; private int a = 1;// 外部类的私有变量 static int b = 2;// 外部类的静态变量 // 静态内部类SInner public class SInner &#123; int b = 3;// 内部类的变量 public void show() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类中的b:" + SOuter.b); System.out.println("访问内部类中的b:" + b); &#125; &#125; // 测试静态内部类 public static void main(String[] args) &#123; SInner si = new SInner();// 直接创建内部类对象 si.show();// 调用show方法 &#125;&#125; 八、Java中的方法内部类方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。 123456789101112131415161718192021222324252627// 外部类MOuterpublic class MOuter &#123; // 外部类中的方法 public void show() &#123; final int a = 1;// 常量 int b = 2; // 方法内部类MInner class MInner &#123; int c = 3;// 内部类的变量 public void print() &#123;// 访问外部类中的成员属性b System.out.println("访问外部类的方法中的常量中a:" + a); System.out.println("访问内部类中的变量c:" + c); &#125; &#125; MInner mi = new MInner();// 创建方法内部类的对象 mi.print();// 调用内部类的方法 &#125; // 测试方法内部类 public static void main(String[] args) &#123; MOuter mo = new MOuter();// 创建外部类对象 mo.show();// 调用外部类对象的show方法 &#125;&#125; 注意：由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和static修饰符。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java入门之类与对象]]></title>
    <url>%2F2018%2F04%2F26%2FJava%E5%85%A5%E9%97%A8%E4%B9%8B%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[一、面向对象 对象的概念 什么是面向对象 类 什么是对象的属性 什么是对象的方法 类与对象的关系/区别 123456789101. 万物皆对象，客观存在的事物皆为对象2. 描述一个对象属性、功能的过程，叫做面向对象3. 类是模子，确定对象将会拥有的特征（属性）和行为（方法） 类的特点： （1）类是对象的类型 （2）具有相同属性和方法的一组对象的集合4. 属性——对象具有的各种特征 每个对象的每个属性都拥有特定值5. 方法——对象执行的操作6. 类是抽象的概念，仅仅是模板，比如说：“手机”；对象是一个你能够看得到、摸得着的具体实体 二、定义类 类的重要性：所有Java程序都以类class为组织单元 什么是类？类是模子，确定对象将会拥有的特征（属性）和行为（方法） 类的组成：属性和方法 定义一个类的步骤 定义类名 编写类的属性 编写类的方法 12345678910111213public class 类名 &#123; // 定义属性部分（成员变量） 属性1的类型 属性1; 属性2的类型 属性2; ... 属性n的类型 属性n; //定义方法部分 方法1; 方法2; ... 方法n;&#125; 三、如何使用Java中的对象使用对象的步骤： 创建对象 12// 类名 对象名 = new 类名();Telphone phone = new Telphone(); 使用对象 1234// 引用对象的属性：对象名.属性phone.screen = 5;// 给screen属性赋值5// 引用对象的方法：对象名.方法名()phone.sendMessage();// 调用sendMessage()方法 四、成员变量和局部变量 成员变量在类中定义，用来描述对象将要有什么 局部变量在类的方法中定义，在方法中临时保存数据；只能在当前方法中使用 成员变量和局部变量的区别 作用域不同 局部变量的作用域仅限于定义它的方法 成员变量的作用域在整个类内部都是可见的 初始值不同 Java会给成员变量一个初始值 Java不会给局部变量赋予初始值 在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量 两类变量同名时，局部变量具有更高的优先级 五、构造方法 使用new+构造方法 创建一个新的对象 构造方法是定义在Java类中的一个用来初始化对象的方法 构造方法与类同名且没有返回值 当没有指定构造方法时，系统会自动添加无参的构造方法 当有指定构造方法，无论是有参、无参的构造方法，都不会自动添加无参的构造方法 构造方法的重载：方法名相同，但参数不同的多个方法，调用时会自动根据不同的参数选择相应的方法 构造方法不但可以给对象的属性赋值，还可以保证给对象的属性赋一个合理的值 六、Java中的静态变量Java中被static修饰的成员称为静态成员或者类成员。它属于整个类所有，而不是某个对象所有，即被类的所有对象所共享。静态成员可以使用类名直接访问，也可以使用对象名进行访问。当然，鉴于他作用的特殊更推荐用类名访问~~ 12345678910111213public class HelloWorld &#123; // 定义静态变量 static String name = "JAVA"; public static void main(String[] args) &#123; // 使用类名访问静态变量 System.out.println(HelloWorld.name); // 使用对象名访问静态变量 HelloWorld hello = new HelloWorld(); System.out.println(hello.name); &#125;&#125; 七、Java中的静态方法与静态变量一样，我们也可以使用static修饰方法，称为静态方法或类方法。其实main方法就是静态方法。 123456789101112131415public class HelloWorld &#123; // 定义静态方法 public static void print() &#123; System.out.println("静态方法"); &#125; public static void main(String[] args) &#123; // 使用类名调用静态方法 HelloWorld.print(); // 使用对象名调用静态方法 HelloWorld hello = new HelloWorld(); hello.print(); &#125;&#125; 需要注意： 1.静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员。如：12345678910public class HelloWorld &#123; String name = "dhuang";// 非静态变量name static String hobby = "coding";// 静态变量hobby // 定义静态方法 public static void print() &#123; System.out.println(name);// 不能直接调用非静态变量 System.out.println(hobby);// 可以直接调用静态变量 &#125;&#125; 如果希望在静态方法中调用非静态变量，可以通过创建类的对象，然后通过对象来访问非静态变量。如：1234567// 在静态方法中调用非静态变量public static void print() &#123; // 创建类的对象 HelloWorld hello = new HelloWorld(); System.out.println(hello.name);// 通过对象来实现在静态方法中调用非静态变量 System.out.println(hobby);// 可以直接调用静态变量&#125; 2.在普通成员方法中，则可以直接访问同类的非静态变量和静态变量，如下所示：12345678String name = "dhuang";// 非静态变量namestatic String hobby = "coding";// 静态变量hobby// 普通成员方法可以直接访问非静态变量和静态变量public void show() &#123; System.out.println(name); System.out.println(hobby);&#125; 3.静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。如：123456789101112131415161718192021String name = "dhuang";// 非静态变量namestatic String hobby = "coding";// 静态变量hobby// 普通成员方法public void show() &#123; System.out.println(name); System.out.println(hobby);&#125;// 静态方法public static void print() &#123; System.out.println("静态方法");&#125;public static void main(String[] args) &#123; // 普通成员方法必须通过对象来调用 HelloWorld hello = new HelloWorld(); hello.show(); // 可以直接调用静态方法 print();&#125; 八、Java中静态初始化块Java中可以通过初始化块进行数据赋值。如：1234567public class HelloWorld &#123; String name;// 定义一个成员变量 // 通过初始化块为成员变量赋值 &#123; name = "dhuang"; &#125;&#125; 在类的声明中，可以包含多个初始化块，当创建类的实例时，就会一次执行这些代码块。如果使用static修饰初始化块，就称为静态初始化块。 需要特别注意：静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量。 1234567891011121314151617181920212223242526272829303132333435363738public class HelloWorld &#123; int num1;// 声明变量num1 int num2;// 声明变量num2 static int num3;// 声明静态变量num3 public HelloWorld() &#123;// 构造方法 num1 = 1; System.out.println("通过构造函数给普通成员变量赋值"); &#125; &#123;// 初始化块 num2 = 2; System.out.println("通过初始化块给普通成员变量赋值"); &#125; static &#123;// 静态初始化块 num3 = 3; System.out.println("通过静态初始化块给静态变量赋值"); &#125; public static void main(String[] args) &#123; HelloWorld hello = new HelloWorld(); System.out.println(hello.num1); System.out.println(hello.num2); System.out.println(num3); HelloWorld hello2 = new HelloWorld();// 再次创建类的对象 &#125; // 通过静态初始化块给静态变量赋值 // 通过初始化块给普通成员变量赋值 // 通过构造函数给普通成员变量赋值 // 1 // 2 // 3 // 通过初始化块给普通成员变量赋值 // 通过构造函数给普通成员变量赋值&#125; 通过输出结果，我们可以看到，程序运行时静态初始化块最先被执行，然后执行普通初始化块，最后才执行构造方法。由于静态初始化块只在类加载时执行一次，所以当再次创建对象hello2时并未执行静态初始化块。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[D3入门 - 坐标轴]]></title>
    <url>%2F2017%2F10%2F05%2FD3%E5%85%A5%E9%97%A8-%E5%9D%90%E6%A0%87%E8%BD%B4%2F</url>
    <content type="text"><![CDATA[坐标轴，是可视化图表中经常出现的一种图形，由一些列线段和刻度组成。坐标轴在 SVG 中是没有现成的图形元素的，需要用其他的元素组合构成。 定义坐标轴1234567891011// 数据var dataset = [2.5, 2.1, 1.7, 1.3, 0.9];// 定义比例尺var linear = d3.scale.linear() .domain([0, d3.max(dataset)]) .range([0, 250]);var axis = d3.svg.axis() .scale(linear)// 指定比例尺 .orient("bottom")// 指定刻度的方向 .ticks(7);// 指定刻度的数量 定义坐标轴，其中使用了线性比例尺 linear。其中： d3.svg.axis()：D3 中坐标轴的组件，能够在 SVG 中生成组成坐标轴的元素。 scale()：指定比例尺。 orient()：指定刻度的朝向，bottom 表示在坐标轴的下方显示。 ticks()：指定刻度的数量。 在 SVG 中添加坐标轴12svg.append("g") .call(axis); 在 D3 中，call() 的参数是一个函数。调用之后，将当前的选择集作为参数传递给此函数。也就是说，以下两段代码是相等的。1234567function foo(selection) &#123; selection .attr("name1", "value1") .attr("name2", "value2");&#125;foo(d3.selectAll("div")) 和1d3.selectAll("div").call(foo); 是相等的。 绘制效果]]></content>
      <categories>
        <category>D3</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>D3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[D3入门 - 制作简易图表]]></title>
    <url>%2F2017%2F10%2F05%2FD3%E5%85%A5%E9%97%A8-%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E5%9B%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[画布HTML 5 提供两种强有力的“画布”：SVG 和 Canvas。 SVGSVG，指可缩放矢量图形（Scalable Vector Graphics），是用于描述二维矢量图形的一种图形格式，是由万维网联盟制定的开放标准。SVG 使用 XML 格式来定义图形，除了 IE8 之前的版本外，绝大部分浏览器都支持 SVG，可将 SVG 文本直接嵌入 HTML 中显示。 SVG 有如下特点： SVG 绘制的是矢量图，因此对图像进行放大不会失真。 基于 XML，可以为每个元素添加 JavaScript 事件处理器。 每个图形均视为对象，更改对象的属性，图形也会改变。 不适合游戏应用。 CanvasCanvas 是通过 JavaScript 来绘制 2D 图形，是 HTML 5 中新增的元素。 Canvas 有如下特点： 绘制的是位图，图像放大后会失真。 不支持事件处理器。 能够以 .png 或 .jpg 格式保存图像 适合游戏应用 绘制矩形在 SVG 中，矩形的元素标签是 rect。矩形的属性，常用的有四个： x：矩形左上角的 x 坐标 y：矩形左上角的 y 坐标 width：矩形的宽度 height：矩形的高度 1234567891011121314151617var dataset = [250, 210, 170, 130, 90];var rectHeight = 25; // 每个矩形所占的像素高度(包括空白)svg.selectAll("rect")// 选择svg内所有的矩形 .data(dataset)// 绑定数组 .enter()// 指定选择集的enter部分， // 有数据，而没有足够图形元素的时候，使用此方法可以添加足够的元素 .append("rect")// 添加足够数量的矩形元素 .attr("x", 20) .attr("y", function(d, i) &#123; return i * rectHeight; &#125;) .attr("width", function(d) &#123; return d; &#125;) .attr("height", rectHeight - 2) .attr("fill", "steelblue");// 设置颜色 绘制效果]]></content>
      <categories>
        <category>D3</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>D3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSkata]]></title>
    <url>%2F2017%2F09%2F06%2FJSkata%2F</url>
    <content type="text"><![CDATA[组件编写step11234567891011121314var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;);&#125;); step2123456789101112131415161718192021222324252627282930var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); // var o = new Person(); var o = &#123;&#125;; o.__proto__ = &#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;; Person.call(o); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step3123456789101112131415161718192021222324252627282930313233var should = require('should');var Class = function() &#123; var klass = function() &#123;&#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); Person.prototype = &#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;; // var o = new Person(); var o = &#123;&#125;; o.__proto__ = Person.prototype; Person.call(o); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step41234567891011121314151617181920212223242526var should = require('should');var Class = function(options) &#123; var klass = function() &#123;&#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step5123456789101112131415161718192021222324252627282930313233343536373839404142434445var should = require('should');var Class = function(options) &#123; var klass = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;); it('要有构造函数', function() &#123; var Person = new Class(&#123; init: function(name) &#123; this.name = name; &#125;, show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person('dhuang'); o.name.should.eql('dhuang'); o.should.have.properties('show', 'sayHello'); &#125;);&#125;); step612345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879var should = require('should');var Class = function(options) &#123; var klass = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; for (var method in options) &#123; klass.prototype[method] = options[method]; &#125; klass.extends = function(options) &#123; var child = function() &#123; if (this.init) &#123; this.init.apply(this, arguments); &#125; &#125;; var F = function() &#123;&#125;; F.prototype = this.prototype; child.prototype = new F(); for (var method in options) &#123; child.prototype[method] = options[method]; &#125; child.prototype.super = this.prototype; return child; &#125;; return klass;&#125;;describe('要有自己的框架', function() &#123; it('要有类', function() &#123; var Person = new Class(); var o = new Person(); o.should.be.ok; &#125;); it('要有方法', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person(); o.should.have.properties('show', 'sayHello'); &#125;); it('要有构造函数', function() &#123; var Person = new Class(&#123; init: function(name) &#123; this.name = name; &#125;, show: function() &#123;&#125;, sayHello: function() &#123;&#125; &#125;); var o = new Person('dhuang'); o.name.should.eql('dhuang'); o.should.have.properties('show', 'sayHello'); &#125;); it('要有复用', function() &#123; var Person = new Class(&#123; show: function() &#123;&#125; &#125;); var Customer = Person.extends(&#123; init: function(name) &#123; this.name = name; &#125;, sayHello: function() &#123;&#125; &#125;); var o = new Customer('dh'); o.name.should.eql('dh'); o.should.have.properties('show', 'sayHello'); &#125;);&#125;);]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F09%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
